// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/item_common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "item_common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protos {
namespace common {

namespace {

const ::google::protobuf::Descriptor* Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* DropStage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DropStage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2fitem_5fcommon_2eproto() {
  protobuf_AddDesc_common_2fitem_5fcommon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common/item_common.proto");
  GOOGLE_CHECK(file != NULL);
  Item_descriptor_ = file->message_type(0);
  static const int Item_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, itemname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, itemtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, uselevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, moneytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, buyprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, sellprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, itemlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, usetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, losetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, itemnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, gridnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, armor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, prop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, thumb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, canuse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, drops_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, stren_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, star_),
  };
  Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Item_descriptor_,
      Item::default_instance_,
      Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Item));
  DropStage_descriptor_ = file->message_type(1);
  static const int DropStage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropStage, stageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropStage, open_),
  };
  DropStage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DropStage_descriptor_,
      DropStage::default_instance_,
      DropStage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropStage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropStage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DropStage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2fitem_5fcommon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Item_descriptor_, &Item::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DropStage_descriptor_, &DropStage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2fitem_5fcommon_2eproto() {
  delete Item::default_instance_;
  delete Item_reflection_;
  delete DropStage::default_instance_;
  delete DropStage_reflection_;
}

void protobuf_AddDesc_common_2fitem_5fcommon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protos::common::protobuf_AddDesc_common_2farmor_5fcommon_2eproto();
  ::protos::common::protobuf_AddDesc_common_2fprop_5fcommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030common/item_common.proto\022\rprotos.commo"
    "n\032\031common/armor_common.proto\032\030common/pro"
    "p_common.proto\"\265\003\n\004Item\022\n\n\002id\030\001 \001(\005\022\016\n\006i"
    "temId\030\002 \001(\005\022\020\n\010itemName\030\003 \001(\t\022\020\n\010itemTyp"
    "e\030\004 \001(\005\022\020\n\010useLevel\030\005 \001(\005\022\021\n\tmoneyType\030\006"
    " \001(\005\022\020\n\010buyPrice\030\007 \001(\005\022\021\n\tsellPrice\030\010 \001("
    "\005\022\017\n\007quality\030\t \001(\005\022\021\n\titemLevel\030\020 \001(\005\022\017\n"
    "\007useTime\030\n \001(\006\022\020\n\010loseTime\030\013 \001(\006\022\017\n\007item"
    "Num\030\014 \001(\005\022\017\n\007gridNum\030\r \001(\005\022#\n\005armor\030\016 \001("
    "\0132\024.protos.common.Armor\022!\n\004prop\030\017 \001(\0132\023."
    "protos.common.Prop\022\r\n\005thumb\030\023 \001(\005\022\r\n\005par"
    "am\030\022 \001(\005\022\016\n\006canUse\030\024 \001(\010\022\'\n\005drops\030\025 \003(\0132"
    "\030.protos.common.DropStage\022\r\n\005stren\030\026 \001(\010"
    "\022\014\n\004star\030\027 \001(\005\"*\n\tDropStage\022\017\n\007stageId\030\001"
    " \002(\005\022\014\n\004open\030\002 \002(\010B4\n$dass.server.gamese"
    "rver.protos.commonB\nItemCommonH\001", 632);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common/item_common.proto", &protobuf_RegisterTypes);
  Item::default_instance_ = new Item();
  DropStage::default_instance_ = new DropStage();
  Item::default_instance_->InitAsDefaultInstance();
  DropStage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2fitem_5fcommon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2fitem_5fcommon_2eproto {
  StaticDescriptorInitializer_common_2fitem_5fcommon_2eproto() {
    protobuf_AddDesc_common_2fitem_5fcommon_2eproto();
  }
} static_descriptor_initializer_common_2fitem_5fcommon_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Item::kIdFieldNumber;
const int Item::kItemIdFieldNumber;
const int Item::kItemNameFieldNumber;
const int Item::kItemTypeFieldNumber;
const int Item::kUseLevelFieldNumber;
const int Item::kMoneyTypeFieldNumber;
const int Item::kBuyPriceFieldNumber;
const int Item::kSellPriceFieldNumber;
const int Item::kQualityFieldNumber;
const int Item::kItemLevelFieldNumber;
const int Item::kUseTimeFieldNumber;
const int Item::kLoseTimeFieldNumber;
const int Item::kItemNumFieldNumber;
const int Item::kGridNumFieldNumber;
const int Item::kArmorFieldNumber;
const int Item::kPropFieldNumber;
const int Item::kThumbFieldNumber;
const int Item::kParamFieldNumber;
const int Item::kCanUseFieldNumber;
const int Item::kDropsFieldNumber;
const int Item::kStrenFieldNumber;
const int Item::kStarFieldNumber;
#endif  // !_MSC_VER

Item::Item()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Item::InitAsDefaultInstance() {
  armor_ = const_cast< ::protos::common::Armor*>(&::protos::common::Armor::default_instance());
  prop_ = const_cast< ::protos::common::Prop*>(&::protos::common::Prop::default_instance());
}

Item::Item(const Item& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Item::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  itemid_ = 0;
  itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  itemtype_ = 0;
  uselevel_ = 0;
  moneytype_ = 0;
  buyprice_ = 0;
  sellprice_ = 0;
  quality_ = 0;
  itemlevel_ = 0;
  usetime_ = GOOGLE_ULONGLONG(0);
  losetime_ = GOOGLE_ULONGLONG(0);
  itemnum_ = 0;
  gridnum_ = 0;
  armor_ = NULL;
  prop_ = NULL;
  thumb_ = 0;
  param_ = 0;
  canuse_ = false;
  stren_ = false;
  star_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Item::~Item() {
  SharedDtor();
}

void Item::SharedDtor() {
  if (itemname_ != &::google::protobuf::internal::kEmptyString) {
    delete itemname_;
  }
  if (this != default_instance_) {
    delete armor_;
    delete prop_;
  }
}

void Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Item_descriptor_;
}

const Item& Item::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2fitem_5fcommon_2eproto();
  return *default_instance_;
}

Item* Item::default_instance_ = NULL;

Item* Item::New() const {
  return new Item;
}

void Item::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    itemid_ = 0;
    if (has_itemname()) {
      if (itemname_ != &::google::protobuf::internal::kEmptyString) {
        itemname_->clear();
      }
    }
    itemtype_ = 0;
    uselevel_ = 0;
    moneytype_ = 0;
    buyprice_ = 0;
    sellprice_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    quality_ = 0;
    itemlevel_ = 0;
    usetime_ = GOOGLE_ULONGLONG(0);
    losetime_ = GOOGLE_ULONGLONG(0);
    itemnum_ = 0;
    gridnum_ = 0;
    if (has_armor()) {
      if (armor_ != NULL) armor_->::protos::common::Armor::Clear();
    }
    if (has_prop()) {
      if (prop_ != NULL) prop_->::protos::common::Prop::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    thumb_ = 0;
    param_ = 0;
    canuse_ = false;
    stren_ = false;
    star_ = 0;
  }
  drops_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_itemId;
        break;
      }

      // optional int32 itemId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_itemName;
        break;
      }

      // optional string itemName = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_itemName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_itemname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->itemname().data(), this->itemname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_itemType;
        break;
      }

      // optional int32 itemType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemtype_)));
          set_has_itemtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_useLevel;
        break;
      }

      // optional int32 useLevel = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_useLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uselevel_)));
          set_has_uselevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_moneyType;
        break;
      }

      // optional int32 moneyType = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_moneyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &moneytype_)));
          set_has_moneytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_buyPrice;
        break;
      }

      // optional int32 buyPrice = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buyPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buyprice_)));
          set_has_buyprice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_sellPrice;
        break;
      }

      // optional int32 sellPrice = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sellPrice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sellprice_)));
          set_has_sellprice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_quality;
        break;
      }

      // optional int32 quality = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(81)) goto parse_useTime;
        break;
      }

      // optional fixed64 useTime = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_useTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &usetime_)));
          set_has_usetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(89)) goto parse_loseTime;
        break;
      }

      // optional fixed64 loseTime = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_loseTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &losetime_)));
          set_has_losetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_itemNum;
        break;
      }

      // optional int32 itemNum = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemnum_)));
          set_has_itemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_gridNum;
        break;
      }

      // optional int32 gridNum = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gridNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gridnum_)));
          set_has_gridnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_armor;
        break;
      }

      // optional .protos.common.Armor armor = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_armor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_armor()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_prop;
        break;
      }

      // optional .protos.common.Prop prop = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_itemLevel;
        break;
      }

      // optional int32 itemLevel = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemlevel_)));
          set_has_itemlevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_param;
        break;
      }

      // optional int32 param = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_)));
          set_has_param();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_thumb;
        break;
      }

      // optional int32 thumb = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_thumb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &thumb_)));
          set_has_thumb();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_canUse;
        break;
      }

      // optional bool canUse = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_canUse:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canuse_)));
          set_has_canuse();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_drops;
        break;
      }

      // repeated .protos.common.DropStage drops = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_drops:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_drops()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_drops;
        if (input->ExpectTag(176)) goto parse_stren;
        break;
      }

      // optional bool stren = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stren:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stren_)));
          set_has_stren();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_star;
        break;
      }

      // optional int32 star = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_)));
          set_has_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 itemId = 2;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->itemid(), output);
  }

  // optional string itemName = 3;
  if (has_itemname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->itemname().data(), this->itemname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->itemname(), output);
  }

  // optional int32 itemType = 4;
  if (has_itemtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->itemtype(), output);
  }

  // optional int32 useLevel = 5;
  if (has_uselevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->uselevel(), output);
  }

  // optional int32 moneyType = 6;
  if (has_moneytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->moneytype(), output);
  }

  // optional int32 buyPrice = 7;
  if (has_buyprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->buyprice(), output);
  }

  // optional int32 sellPrice = 8;
  if (has_sellprice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sellprice(), output);
  }

  // optional int32 quality = 9;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->quality(), output);
  }

  // optional fixed64 useTime = 10;
  if (has_usetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->usetime(), output);
  }

  // optional fixed64 loseTime = 11;
  if (has_losetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(11, this->losetime(), output);
  }

  // optional int32 itemNum = 12;
  if (has_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->itemnum(), output);
  }

  // optional int32 gridNum = 13;
  if (has_gridnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->gridnum(), output);
  }

  // optional .protos.common.Armor armor = 14;
  if (has_armor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->armor(), output);
  }

  // optional .protos.common.Prop prop = 15;
  if (has_prop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->prop(), output);
  }

  // optional int32 itemLevel = 16;
  if (has_itemlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->itemlevel(), output);
  }

  // optional int32 param = 18;
  if (has_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->param(), output);
  }

  // optional int32 thumb = 19;
  if (has_thumb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->thumb(), output);
  }

  // optional bool canUse = 20;
  if (has_canuse()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->canuse(), output);
  }

  // repeated .protos.common.DropStage drops = 21;
  for (int i = 0; i < this->drops_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->drops(i), output);
  }

  // optional bool stren = 22;
  if (has_stren()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->stren(), output);
  }

  // optional int32 star = 23;
  if (has_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->star(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Item::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 itemId = 2;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->itemid(), target);
  }

  // optional string itemName = 3;
  if (has_itemname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->itemname().data(), this->itemname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->itemname(), target);
  }

  // optional int32 itemType = 4;
  if (has_itemtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->itemtype(), target);
  }

  // optional int32 useLevel = 5;
  if (has_uselevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->uselevel(), target);
  }

  // optional int32 moneyType = 6;
  if (has_moneytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->moneytype(), target);
  }

  // optional int32 buyPrice = 7;
  if (has_buyprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->buyprice(), target);
  }

  // optional int32 sellPrice = 8;
  if (has_sellprice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sellprice(), target);
  }

  // optional int32 quality = 9;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->quality(), target);
  }

  // optional fixed64 useTime = 10;
  if (has_usetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->usetime(), target);
  }

  // optional fixed64 loseTime = 11;
  if (has_losetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(11, this->losetime(), target);
  }

  // optional int32 itemNum = 12;
  if (has_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->itemnum(), target);
  }

  // optional int32 gridNum = 13;
  if (has_gridnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->gridnum(), target);
  }

  // optional .protos.common.Armor armor = 14;
  if (has_armor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->armor(), target);
  }

  // optional .protos.common.Prop prop = 15;
  if (has_prop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->prop(), target);
  }

  // optional int32 itemLevel = 16;
  if (has_itemlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->itemlevel(), target);
  }

  // optional int32 param = 18;
  if (has_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->param(), target);
  }

  // optional int32 thumb = 19;
  if (has_thumb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->thumb(), target);
  }

  // optional bool canUse = 20;
  if (has_canuse()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->canuse(), target);
  }

  // repeated .protos.common.DropStage drops = 21;
  for (int i = 0; i < this->drops_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->drops(i), target);
  }

  // optional bool stren = 22;
  if (has_stren()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->stren(), target);
  }

  // optional int32 star = 23;
  if (has_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->star(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Item::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 itemId = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional string itemName = 3;
    if (has_itemname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->itemname());
    }

    // optional int32 itemType = 4;
    if (has_itemtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemtype());
    }

    // optional int32 useLevel = 5;
    if (has_uselevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uselevel());
    }

    // optional int32 moneyType = 6;
    if (has_moneytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->moneytype());
    }

    // optional int32 buyPrice = 7;
    if (has_buyprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buyprice());
    }

    // optional int32 sellPrice = 8;
    if (has_sellprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sellprice());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 quality = 9;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional int32 itemLevel = 16;
    if (has_itemlevel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemlevel());
    }

    // optional fixed64 useTime = 10;
    if (has_usetime()) {
      total_size += 1 + 8;
    }

    // optional fixed64 loseTime = 11;
    if (has_losetime()) {
      total_size += 1 + 8;
    }

    // optional int32 itemNum = 12;
    if (has_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemnum());
    }

    // optional int32 gridNum = 13;
    if (has_gridnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gridnum());
    }

    // optional .protos.common.Armor armor = 14;
    if (has_armor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->armor());
    }

    // optional .protos.common.Prop prop = 15;
    if (has_prop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prop());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 thumb = 19;
    if (has_thumb()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->thumb());
    }

    // optional int32 param = 18;
    if (has_param()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->param());
    }

    // optional bool canUse = 20;
    if (has_canuse()) {
      total_size += 2 + 1;
    }

    // optional bool stren = 22;
    if (has_stren()) {
      total_size += 2 + 1;
    }

    // optional int32 star = 23;
    if (has_star()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->star());
    }

  }
  // repeated .protos.common.DropStage drops = 21;
  total_size += 2 * this->drops_size();
  for (int i = 0; i < this->drops_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->drops(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  drops_.MergeFrom(from.drops_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemname()) {
      set_itemname(from.itemname());
    }
    if (from.has_itemtype()) {
      set_itemtype(from.itemtype());
    }
    if (from.has_uselevel()) {
      set_uselevel(from.uselevel());
    }
    if (from.has_moneytype()) {
      set_moneytype(from.moneytype());
    }
    if (from.has_buyprice()) {
      set_buyprice(from.buyprice());
    }
    if (from.has_sellprice()) {
      set_sellprice(from.sellprice());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_itemlevel()) {
      set_itemlevel(from.itemlevel());
    }
    if (from.has_usetime()) {
      set_usetime(from.usetime());
    }
    if (from.has_losetime()) {
      set_losetime(from.losetime());
    }
    if (from.has_itemnum()) {
      set_itemnum(from.itemnum());
    }
    if (from.has_gridnum()) {
      set_gridnum(from.gridnum());
    }
    if (from.has_armor()) {
      mutable_armor()->::protos::common::Armor::MergeFrom(from.armor());
    }
    if (from.has_prop()) {
      mutable_prop()->::protos::common::Prop::MergeFrom(from.prop());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_thumb()) {
      set_thumb(from.thumb());
    }
    if (from.has_param()) {
      set_param(from.param());
    }
    if (from.has_canuse()) {
      set_canuse(from.canuse());
    }
    if (from.has_stren()) {
      set_stren(from.stren());
    }
    if (from.has_star()) {
      set_star(from.star());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {

  for (int i = 0; i < drops_size(); i++) {
    if (!this->drops(i).IsInitialized()) return false;
  }
  return true;
}

void Item::Swap(Item* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemname_, other->itemname_);
    std::swap(itemtype_, other->itemtype_);
    std::swap(uselevel_, other->uselevel_);
    std::swap(moneytype_, other->moneytype_);
    std::swap(buyprice_, other->buyprice_);
    std::swap(sellprice_, other->sellprice_);
    std::swap(quality_, other->quality_);
    std::swap(itemlevel_, other->itemlevel_);
    std::swap(usetime_, other->usetime_);
    std::swap(losetime_, other->losetime_);
    std::swap(itemnum_, other->itemnum_);
    std::swap(gridnum_, other->gridnum_);
    std::swap(armor_, other->armor_);
    std::swap(prop_, other->prop_);
    std::swap(thumb_, other->thumb_);
    std::swap(param_, other->param_);
    std::swap(canuse_, other->canuse_);
    drops_.Swap(&other->drops_);
    std::swap(stren_, other->stren_);
    std::swap(star_, other->star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Item_descriptor_;
  metadata.reflection = Item_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DropStage::kStageIdFieldNumber;
const int DropStage::kOpenFieldNumber;
#endif  // !_MSC_VER

DropStage::DropStage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DropStage::InitAsDefaultInstance() {
}

DropStage::DropStage(const DropStage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DropStage::SharedCtor() {
  _cached_size_ = 0;
  stageid_ = 0;
  open_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DropStage::~DropStage() {
  SharedDtor();
}

void DropStage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DropStage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropStage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DropStage_descriptor_;
}

const DropStage& DropStage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2fitem_5fcommon_2eproto();
  return *default_instance_;
}

DropStage* DropStage::default_instance_ = NULL;

DropStage* DropStage::New() const {
  return new DropStage;
}

void DropStage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stageid_ = 0;
    open_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DropStage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stageId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stageid_)));
          set_has_stageid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_open;
        break;
      }

      // required bool open = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DropStage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 stageId = 1;
  if (has_stageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stageid(), output);
  }

  // required bool open = 2;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->open(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DropStage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 stageId = 1;
  if (has_stageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stageid(), target);
  }

  // required bool open = 2;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->open(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DropStage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stageId = 1;
    if (has_stageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stageid());
    }

    // required bool open = 2;
    if (has_open()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropStage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DropStage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DropStage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DropStage::MergeFrom(const DropStage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stageid()) {
      set_stageid(from.stageid());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DropStage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropStage::CopyFrom(const DropStage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropStage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DropStage::Swap(DropStage* other) {
  if (other != this) {
    std::swap(stageid_, other->stageid_);
    std::swap(open_, other->open_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DropStage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DropStage_descriptor_;
  metadata.reflection = DropStage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace protos

// @@protoc_insertion_point(global_scope)
