// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/item_common.proto

#ifndef PROTOBUF_common_2fitem_5fcommon_2eproto__INCLUDED
#define PROTOBUF_common_2fitem_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "armor_common.pb.h"
#include "prop_common.pb.h"
#include "soul_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protos {
namespace common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_2fitem_5fcommon_2eproto();
void protobuf_AssignDesc_common_2fitem_5fcommon_2eproto();
void protobuf_ShutdownFile_common_2fitem_5fcommon_2eproto();

class Item;
class DropStage;

// ===================================================================

class Item : public ::google::protobuf::Message {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional string itemName = 3;
  inline bool has_itemname() const;
  inline void clear_itemname();
  static const int kItemNameFieldNumber = 3;
  inline const ::std::string& itemname() const;
  inline void set_itemname(const ::std::string& value);
  inline void set_itemname(const char* value);
  inline void set_itemname(const char* value, size_t size);
  inline ::std::string* mutable_itemname();
  inline ::std::string* release_itemname();
  inline void set_allocated_itemname(::std::string* itemname);

  // optional int32 itemType = 4;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 4;
  inline ::google::protobuf::int32 itemtype() const;
  inline void set_itemtype(::google::protobuf::int32 value);

  // optional int32 useLevel = 5;
  inline bool has_uselevel() const;
  inline void clear_uselevel();
  static const int kUseLevelFieldNumber = 5;
  inline ::google::protobuf::int32 uselevel() const;
  inline void set_uselevel(::google::protobuf::int32 value);

  // optional int32 moneyType = 6;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneyTypeFieldNumber = 6;
  inline ::google::protobuf::int32 moneytype() const;
  inline void set_moneytype(::google::protobuf::int32 value);

  // optional int32 buyPrice = 7;
  inline bool has_buyprice() const;
  inline void clear_buyprice();
  static const int kBuyPriceFieldNumber = 7;
  inline ::google::protobuf::int32 buyprice() const;
  inline void set_buyprice(::google::protobuf::int32 value);

  // optional int32 sellPrice = 8;
  inline bool has_sellprice() const;
  inline void clear_sellprice();
  static const int kSellPriceFieldNumber = 8;
  inline ::google::protobuf::int32 sellprice() const;
  inline void set_sellprice(::google::protobuf::int32 value);

  // optional int32 quality = 9;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 9;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 itemLevel = 16;
  inline bool has_itemlevel() const;
  inline void clear_itemlevel();
  static const int kItemLevelFieldNumber = 16;
  inline ::google::protobuf::int32 itemlevel() const;
  inline void set_itemlevel(::google::protobuf::int32 value);

  // optional fixed64 useTime = 10;
  inline bool has_usetime() const;
  inline void clear_usetime();
  static const int kUseTimeFieldNumber = 10;
  inline ::google::protobuf::uint64 usetime() const;
  inline void set_usetime(::google::protobuf::uint64 value);

  // optional fixed64 loseTime = 11;
  inline bool has_losetime() const;
  inline void clear_losetime();
  static const int kLoseTimeFieldNumber = 11;
  inline ::google::protobuf::uint64 losetime() const;
  inline void set_losetime(::google::protobuf::uint64 value);

  // optional int32 itemNum = 12;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemNumFieldNumber = 12;
  inline ::google::protobuf::int32 itemnum() const;
  inline void set_itemnum(::google::protobuf::int32 value);

  // optional int32 gridNum = 13;
  inline bool has_gridnum() const;
  inline void clear_gridnum();
  static const int kGridNumFieldNumber = 13;
  inline ::google::protobuf::int32 gridnum() const;
  inline void set_gridnum(::google::protobuf::int32 value);

  // optional .protos.common.Armor armor = 14;
  inline bool has_armor() const;
  inline void clear_armor();
  static const int kArmorFieldNumber = 14;
  inline const ::protos::common::Armor& armor() const;
  inline ::protos::common::Armor* mutable_armor();
  inline ::protos::common::Armor* release_armor();
  inline void set_allocated_armor(::protos::common::Armor* armor);

  // optional .protos.common.Prop prop = 15;
  inline bool has_prop() const;
  inline void clear_prop();
  static const int kPropFieldNumber = 15;
  inline const ::protos::common::Prop& prop() const;
  inline ::protos::common::Prop* mutable_prop();
  inline ::protos::common::Prop* release_prop();
  inline void set_allocated_prop(::protos::common::Prop* prop);

  // optional .protos.common.Soul soul = 17;
  inline bool has_soul() const;
  inline void clear_soul();
  static const int kSoulFieldNumber = 17;
  inline const ::protos::common::Soul& soul() const;
  inline ::protos::common::Soul* mutable_soul();
  inline ::protos::common::Soul* release_soul();
  inline void set_allocated_soul(::protos::common::Soul* soul);

  // optional int32 thumb = 19;
  inline bool has_thumb() const;
  inline void clear_thumb();
  static const int kThumbFieldNumber = 19;
  inline ::google::protobuf::int32 thumb() const;
  inline void set_thumb(::google::protobuf::int32 value);

  // optional int32 param = 18;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 18;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // optional bool canUse = 20;
  inline bool has_canuse() const;
  inline void clear_canuse();
  static const int kCanUseFieldNumber = 20;
  inline bool canuse() const;
  inline void set_canuse(bool value);

  // repeated .protos.common.DropStage drops = 21;
  inline int drops_size() const;
  inline void clear_drops();
  static const int kDropsFieldNumber = 21;
  inline const ::protos::common::DropStage& drops(int index) const;
  inline ::protos::common::DropStage* mutable_drops(int index);
  inline ::protos::common::DropStage* add_drops();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::DropStage >&
      drops() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::DropStage >*
      mutable_drops();

  // optional bool stren = 22;
  inline bool has_stren() const;
  inline void clear_stren();
  static const int kStrenFieldNumber = 22;
  inline bool stren() const;
  inline void set_stren(bool value);

  // optional int32 star = 23;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 23;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.common.Item)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemname();
  inline void clear_has_itemname();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_uselevel();
  inline void clear_has_uselevel();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();
  inline void set_has_buyprice();
  inline void clear_has_buyprice();
  inline void set_has_sellprice();
  inline void clear_has_sellprice();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_itemlevel();
  inline void clear_has_itemlevel();
  inline void set_has_usetime();
  inline void clear_has_usetime();
  inline void set_has_losetime();
  inline void clear_has_losetime();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();
  inline void set_has_gridnum();
  inline void clear_has_gridnum();
  inline void set_has_armor();
  inline void clear_has_armor();
  inline void set_has_prop();
  inline void clear_has_prop();
  inline void set_has_soul();
  inline void clear_has_soul();
  inline void set_has_thumb();
  inline void clear_has_thumb();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_canuse();
  inline void clear_has_canuse();
  inline void set_has_stren();
  inline void clear_has_stren();
  inline void set_has_star();
  inline void clear_has_star();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 itemid_;
  ::std::string* itemname_;
  ::google::protobuf::int32 itemtype_;
  ::google::protobuf::int32 uselevel_;
  ::google::protobuf::int32 moneytype_;
  ::google::protobuf::int32 buyprice_;
  ::google::protobuf::int32 sellprice_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::uint64 usetime_;
  ::google::protobuf::int32 itemlevel_;
  ::google::protobuf::int32 itemnum_;
  ::google::protobuf::uint64 losetime_;
  ::protos::common::Armor* armor_;
  ::protos::common::Prop* prop_;
  ::google::protobuf::int32 gridnum_;
  ::google::protobuf::int32 thumb_;
  ::protos::common::Soul* soul_;
  ::google::protobuf::int32 param_;
  bool canuse_;
  bool stren_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::DropStage > drops_;
  ::google::protobuf::int32 star_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(23 + 31) / 32];

  friend void  protobuf_AddDesc_common_2fitem_5fcommon_2eproto();
  friend void protobuf_AssignDesc_common_2fitem_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_common_2fitem_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class DropStage : public ::google::protobuf::Message {
 public:
  DropStage();
  virtual ~DropStage();

  DropStage(const DropStage& from);

  inline DropStage& operator=(const DropStage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropStage& default_instance();

  void Swap(DropStage* other);

  // implements Message ----------------------------------------------

  DropStage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DropStage& from);
  void MergeFrom(const DropStage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stageId = 1;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 stageid() const;
  inline void set_stageid(::google::protobuf::int32 value);

  // required bool open = 2;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 2;
  inline bool open() const;
  inline void set_open(bool value);

  // @@protoc_insertion_point(class_scope:protos.common.DropStage)
 private:
  inline void set_has_stageid();
  inline void clear_has_stageid();
  inline void set_has_open();
  inline void clear_has_open();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stageid_;
  bool open_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2fitem_5fcommon_2eproto();
  friend void protobuf_AssignDesc_common_2fitem_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_common_2fitem_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static DropStage* default_instance_;
};
// ===================================================================


// ===================================================================

// Item

// optional int32 id = 1;
inline bool Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Item::id() const {
  return id_;
}
inline void Item::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 itemId = 2;
inline bool Item::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 Item::itemid() const {
  return itemid_;
}
inline void Item::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional string itemName = 3;
inline bool Item::has_itemname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_itemname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_itemname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_itemname() {
  if (itemname_ != &::google::protobuf::internal::kEmptyString) {
    itemname_->clear();
  }
  clear_has_itemname();
}
inline const ::std::string& Item::itemname() const {
  return *itemname_;
}
inline void Item::set_itemname(const ::std::string& value) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::kEmptyString) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
}
inline void Item::set_itemname(const char* value) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::kEmptyString) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
}
inline void Item::set_itemname(const char* value, size_t size) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::kEmptyString) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Item::mutable_itemname() {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::kEmptyString) {
    itemname_ = new ::std::string;
  }
  return itemname_;
}
inline ::std::string* Item::release_itemname() {
  clear_has_itemname();
  if (itemname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = itemname_;
    itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Item::set_allocated_itemname(::std::string* itemname) {
  if (itemname_ != &::google::protobuf::internal::kEmptyString) {
    delete itemname_;
  }
  if (itemname) {
    set_has_itemname();
    itemname_ = itemname;
  } else {
    clear_has_itemname();
    itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 itemType = 4;
inline bool Item::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item::clear_itemtype() {
  itemtype_ = 0;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 Item::itemtype() const {
  return itemtype_;
}
inline void Item::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
}

// optional int32 useLevel = 5;
inline bool Item::has_uselevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Item::set_has_uselevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Item::clear_has_uselevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Item::clear_uselevel() {
  uselevel_ = 0;
  clear_has_uselevel();
}
inline ::google::protobuf::int32 Item::uselevel() const {
  return uselevel_;
}
inline void Item::set_uselevel(::google::protobuf::int32 value) {
  set_has_uselevel();
  uselevel_ = value;
}

// optional int32 moneyType = 6;
inline bool Item::has_moneytype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Item::set_has_moneytype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Item::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Item::clear_moneytype() {
  moneytype_ = 0;
  clear_has_moneytype();
}
inline ::google::protobuf::int32 Item::moneytype() const {
  return moneytype_;
}
inline void Item::set_moneytype(::google::protobuf::int32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// optional int32 buyPrice = 7;
inline bool Item::has_buyprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Item::set_has_buyprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Item::clear_has_buyprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Item::clear_buyprice() {
  buyprice_ = 0;
  clear_has_buyprice();
}
inline ::google::protobuf::int32 Item::buyprice() const {
  return buyprice_;
}
inline void Item::set_buyprice(::google::protobuf::int32 value) {
  set_has_buyprice();
  buyprice_ = value;
}

// optional int32 sellPrice = 8;
inline bool Item::has_sellprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Item::set_has_sellprice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Item::clear_has_sellprice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Item::clear_sellprice() {
  sellprice_ = 0;
  clear_has_sellprice();
}
inline ::google::protobuf::int32 Item::sellprice() const {
  return sellprice_;
}
inline void Item::set_sellprice(::google::protobuf::int32 value) {
  set_has_sellprice();
  sellprice_ = value;
}

// optional int32 quality = 9;
inline bool Item::has_quality() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Item::set_has_quality() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Item::clear_has_quality() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Item::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 Item::quality() const {
  return quality_;
}
inline void Item::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 itemLevel = 16;
inline bool Item::has_itemlevel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Item::set_has_itemlevel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Item::clear_has_itemlevel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Item::clear_itemlevel() {
  itemlevel_ = 0;
  clear_has_itemlevel();
}
inline ::google::protobuf::int32 Item::itemlevel() const {
  return itemlevel_;
}
inline void Item::set_itemlevel(::google::protobuf::int32 value) {
  set_has_itemlevel();
  itemlevel_ = value;
}

// optional fixed64 useTime = 10;
inline bool Item::has_usetime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Item::set_has_usetime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Item::clear_has_usetime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Item::clear_usetime() {
  usetime_ = GOOGLE_ULONGLONG(0);
  clear_has_usetime();
}
inline ::google::protobuf::uint64 Item::usetime() const {
  return usetime_;
}
inline void Item::set_usetime(::google::protobuf::uint64 value) {
  set_has_usetime();
  usetime_ = value;
}

// optional fixed64 loseTime = 11;
inline bool Item::has_losetime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Item::set_has_losetime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Item::clear_has_losetime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Item::clear_losetime() {
  losetime_ = GOOGLE_ULONGLONG(0);
  clear_has_losetime();
}
inline ::google::protobuf::uint64 Item::losetime() const {
  return losetime_;
}
inline void Item::set_losetime(::google::protobuf::uint64 value) {
  set_has_losetime();
  losetime_ = value;
}

// optional int32 itemNum = 12;
inline bool Item::has_itemnum() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Item::set_has_itemnum() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Item::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Item::clear_itemnum() {
  itemnum_ = 0;
  clear_has_itemnum();
}
inline ::google::protobuf::int32 Item::itemnum() const {
  return itemnum_;
}
inline void Item::set_itemnum(::google::protobuf::int32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// optional int32 gridNum = 13;
inline bool Item::has_gridnum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Item::set_has_gridnum() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Item::clear_has_gridnum() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Item::clear_gridnum() {
  gridnum_ = 0;
  clear_has_gridnum();
}
inline ::google::protobuf::int32 Item::gridnum() const {
  return gridnum_;
}
inline void Item::set_gridnum(::google::protobuf::int32 value) {
  set_has_gridnum();
  gridnum_ = value;
}

// optional .protos.common.Armor armor = 14;
inline bool Item::has_armor() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Item::set_has_armor() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Item::clear_has_armor() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Item::clear_armor() {
  if (armor_ != NULL) armor_->::protos::common::Armor::Clear();
  clear_has_armor();
}
inline const ::protos::common::Armor& Item::armor() const {
  return armor_ != NULL ? *armor_ : *default_instance_->armor_;
}
inline ::protos::common::Armor* Item::mutable_armor() {
  set_has_armor();
  if (armor_ == NULL) armor_ = new ::protos::common::Armor;
  return armor_;
}
inline ::protos::common::Armor* Item::release_armor() {
  clear_has_armor();
  ::protos::common::Armor* temp = armor_;
  armor_ = NULL;
  return temp;
}
inline void Item::set_allocated_armor(::protos::common::Armor* armor) {
  delete armor_;
  armor_ = armor;
  if (armor) {
    set_has_armor();
  } else {
    clear_has_armor();
  }
}

// optional .protos.common.Prop prop = 15;
inline bool Item::has_prop() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Item::set_has_prop() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Item::clear_has_prop() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Item::clear_prop() {
  if (prop_ != NULL) prop_->::protos::common::Prop::Clear();
  clear_has_prop();
}
inline const ::protos::common::Prop& Item::prop() const {
  return prop_ != NULL ? *prop_ : *default_instance_->prop_;
}
inline ::protos::common::Prop* Item::mutable_prop() {
  set_has_prop();
  if (prop_ == NULL) prop_ = new ::protos::common::Prop;
  return prop_;
}
inline ::protos::common::Prop* Item::release_prop() {
  clear_has_prop();
  ::protos::common::Prop* temp = prop_;
  prop_ = NULL;
  return temp;
}
inline void Item::set_allocated_prop(::protos::common::Prop* prop) {
  delete prop_;
  prop_ = prop;
  if (prop) {
    set_has_prop();
  } else {
    clear_has_prop();
  }
}

// optional .protos.common.Soul soul = 17;
inline bool Item::has_soul() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Item::set_has_soul() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Item::clear_has_soul() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Item::clear_soul() {
  if (soul_ != NULL) soul_->::protos::common::Soul::Clear();
  clear_has_soul();
}
inline const ::protos::common::Soul& Item::soul() const {
  return soul_ != NULL ? *soul_ : *default_instance_->soul_;
}
inline ::protos::common::Soul* Item::mutable_soul() {
  set_has_soul();
  if (soul_ == NULL) soul_ = new ::protos::common::Soul;
  return soul_;
}
inline ::protos::common::Soul* Item::release_soul() {
  clear_has_soul();
  ::protos::common::Soul* temp = soul_;
  soul_ = NULL;
  return temp;
}
inline void Item::set_allocated_soul(::protos::common::Soul* soul) {
  delete soul_;
  soul_ = soul;
  if (soul) {
    set_has_soul();
  } else {
    clear_has_soul();
  }
}

// optional int32 thumb = 19;
inline bool Item::has_thumb() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Item::set_has_thumb() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Item::clear_has_thumb() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Item::clear_thumb() {
  thumb_ = 0;
  clear_has_thumb();
}
inline ::google::protobuf::int32 Item::thumb() const {
  return thumb_;
}
inline void Item::set_thumb(::google::protobuf::int32 value) {
  set_has_thumb();
  thumb_ = value;
}

// optional int32 param = 18;
inline bool Item::has_param() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Item::set_has_param() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Item::clear_has_param() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Item::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 Item::param() const {
  return param_;
}
inline void Item::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
}

// optional bool canUse = 20;
inline bool Item::has_canuse() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Item::set_has_canuse() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Item::clear_has_canuse() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Item::clear_canuse() {
  canuse_ = false;
  clear_has_canuse();
}
inline bool Item::canuse() const {
  return canuse_;
}
inline void Item::set_canuse(bool value) {
  set_has_canuse();
  canuse_ = value;
}

// repeated .protos.common.DropStage drops = 21;
inline int Item::drops_size() const {
  return drops_.size();
}
inline void Item::clear_drops() {
  drops_.Clear();
}
inline const ::protos::common::DropStage& Item::drops(int index) const {
  return drops_.Get(index);
}
inline ::protos::common::DropStage* Item::mutable_drops(int index) {
  return drops_.Mutable(index);
}
inline ::protos::common::DropStage* Item::add_drops() {
  return drops_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::DropStage >&
Item::drops() const {
  return drops_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::DropStage >*
Item::mutable_drops() {
  return &drops_;
}

// optional bool stren = 22;
inline bool Item::has_stren() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Item::set_has_stren() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Item::clear_has_stren() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Item::clear_stren() {
  stren_ = false;
  clear_has_stren();
}
inline bool Item::stren() const {
  return stren_;
}
inline void Item::set_stren(bool value) {
  set_has_stren();
  stren_ = value;
}

// optional int32 star = 23;
inline bool Item::has_star() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Item::set_has_star() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Item::clear_has_star() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Item::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 Item::star() const {
  return star_;
}
inline void Item::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// -------------------------------------------------------------------

// DropStage

// required int32 stageId = 1;
inline bool DropStage::has_stageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropStage::set_has_stageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropStage::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DropStage::clear_stageid() {
  stageid_ = 0;
  clear_has_stageid();
}
inline ::google::protobuf::int32 DropStage::stageid() const {
  return stageid_;
}
inline void DropStage::set_stageid(::google::protobuf::int32 value) {
  set_has_stageid();
  stageid_ = value;
}

// required bool open = 2;
inline bool DropStage::has_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DropStage::set_has_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DropStage::clear_has_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DropStage::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool DropStage::open() const {
  return open_;
}
inline void DropStage::set_open(bool value) {
  set_has_open();
  open_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace protos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2fitem_5fcommon_2eproto__INCLUDED
