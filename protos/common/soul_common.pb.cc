// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/soul_common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "soul_common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protos {
namespace common {

namespace {

const ::google::protobuf::Descriptor* Soul_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Soul_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2fsoul_5fcommon_2eproto() {
  protobuf_AddDesc_common_2fsoul_5fcommon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common/soul_common.proto");
  GOOGLE_CHECK(file != NULL);
  Soul_descriptor_ = file->message_type(0);
  static const int Soul_offsets_[26] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, refid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, crit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, dex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, addhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, addatk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, adddef_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, soultype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, thumb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, move1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, move2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, move3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, move4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, move5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, skill1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, skill2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, skill3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, skill4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, skill5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, skill6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, skill7_),
  };
  Soul_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Soul_descriptor_,
      Soul::default_instance_,
      Soul_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Soul, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Soul));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2fsoul_5fcommon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Soul_descriptor_, &Soul::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2fsoul_5fcommon_2eproto() {
  delete Soul::default_instance_;
  delete Soul_reflection_;
}

void protobuf_AddDesc_common_2fsoul_5fcommon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protos::common::protobuf_AddDesc_common_2fskill_5fcommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030common/soul_common.proto\022\rprotos.commo"
    "n\032\031common/skill_common.proto\"\247\004\n\004Soul\022\r\n"
    "\005refId\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\n\n\002hp\030\003 \001(\005\022\013"
    "\n\003atk\030\004 \001(\005\022\013\n\003def\030\005 \001(\005\022\014\n\004crit\030\006 \001(\005\022\013"
    "\n\003dex\030\007 \001(\005\022\r\n\005addHp\030\010 \001(\005\022\016\n\006addAtk\030\t \001"
    "(\005\022\016\n\006addDef\030\n \001(\005\022\013\n\003hit\030\013 \001(\005\022\020\n\010soulT"
    "ype\030\014 \001(\005\022\r\n\005thumb\030\r \001(\005\022\017\n\007quality\030\016 \001("
    "\005\022\r\n\005move1\030\017 \001(\005\022\r\n\005move2\030\020 \001(\005\022\r\n\005move3"
    "\030\021 \001(\005\022\r\n\005move4\030\022 \001(\005\022\r\n\005move5\030\023 \001(\005\022$\n\006"
    "skill1\030\024 \001(\0132\024.protos.common.Skill\022$\n\006sk"
    "ill2\030\025 \001(\0132\024.protos.common.Skill\022$\n\006skil"
    "l3\030\026 \001(\0132\024.protos.common.Skill\022$\n\006skill4"
    "\030\027 \001(\0132\024.protos.common.Skill\022$\n\006skill5\030\030"
    " \001(\0132\024.protos.common.Skill\022$\n\006skill6\030\031 \001"
    "(\0132\024.protos.common.Skill\022$\n\006skill7\030\032 \001(\013"
    "2\024.protos.common.SkillB5\n%anvin.server.g"
    "ameserver.protos.commonB\nSoulCommonH\001", 677);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common/soul_common.proto", &protobuf_RegisterTypes);
  Soul::default_instance_ = new Soul();
  Soul::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2fsoul_5fcommon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2fsoul_5fcommon_2eproto {
  StaticDescriptorInitializer_common_2fsoul_5fcommon_2eproto() {
    protobuf_AddDesc_common_2fsoul_5fcommon_2eproto();
  }
} static_descriptor_initializer_common_2fsoul_5fcommon_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Soul::kRefIdFieldNumber;
const int Soul::kNameFieldNumber;
const int Soul::kHpFieldNumber;
const int Soul::kAtkFieldNumber;
const int Soul::kDefFieldNumber;
const int Soul::kCritFieldNumber;
const int Soul::kDexFieldNumber;
const int Soul::kAddHpFieldNumber;
const int Soul::kAddAtkFieldNumber;
const int Soul::kAddDefFieldNumber;
const int Soul::kHitFieldNumber;
const int Soul::kSoulTypeFieldNumber;
const int Soul::kThumbFieldNumber;
const int Soul::kQualityFieldNumber;
const int Soul::kMove1FieldNumber;
const int Soul::kMove2FieldNumber;
const int Soul::kMove3FieldNumber;
const int Soul::kMove4FieldNumber;
const int Soul::kMove5FieldNumber;
const int Soul::kSkill1FieldNumber;
const int Soul::kSkill2FieldNumber;
const int Soul::kSkill3FieldNumber;
const int Soul::kSkill4FieldNumber;
const int Soul::kSkill5FieldNumber;
const int Soul::kSkill6FieldNumber;
const int Soul::kSkill7FieldNumber;
#endif  // !_MSC_VER

Soul::Soul()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Soul::InitAsDefaultInstance() {
  skill1_ = const_cast< ::protos::common::Skill*>(&::protos::common::Skill::default_instance());
  skill2_ = const_cast< ::protos::common::Skill*>(&::protos::common::Skill::default_instance());
  skill3_ = const_cast< ::protos::common::Skill*>(&::protos::common::Skill::default_instance());
  skill4_ = const_cast< ::protos::common::Skill*>(&::protos::common::Skill::default_instance());
  skill5_ = const_cast< ::protos::common::Skill*>(&::protos::common::Skill::default_instance());
  skill6_ = const_cast< ::protos::common::Skill*>(&::protos::common::Skill::default_instance());
  skill7_ = const_cast< ::protos::common::Skill*>(&::protos::common::Skill::default_instance());
}

Soul::Soul(const Soul& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Soul::SharedCtor() {
  _cached_size_ = 0;
  refid_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  hp_ = 0;
  atk_ = 0;
  def_ = 0;
  crit_ = 0;
  dex_ = 0;
  addhp_ = 0;
  addatk_ = 0;
  adddef_ = 0;
  hit_ = 0;
  soultype_ = 0;
  thumb_ = 0;
  quality_ = 0;
  move1_ = 0;
  move2_ = 0;
  move3_ = 0;
  move4_ = 0;
  move5_ = 0;
  skill1_ = NULL;
  skill2_ = NULL;
  skill3_ = NULL;
  skill4_ = NULL;
  skill5_ = NULL;
  skill6_ = NULL;
  skill7_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Soul::~Soul() {
  SharedDtor();
}

void Soul::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete skill1_;
    delete skill2_;
    delete skill3_;
    delete skill4_;
    delete skill5_;
    delete skill6_;
    delete skill7_;
  }
}

void Soul::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Soul::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Soul_descriptor_;
}

const Soul& Soul::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_common_2fsoul_5fcommon_2eproto();
  return *default_instance_;
}

Soul* Soul::default_instance_ = NULL;

Soul* Soul::New() const {
  return new Soul;
}

void Soul::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    refid_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    hp_ = 0;
    atk_ = 0;
    def_ = 0;
    crit_ = 0;
    dex_ = 0;
    addhp_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    addatk_ = 0;
    adddef_ = 0;
    hit_ = 0;
    soultype_ = 0;
    thumb_ = 0;
    quality_ = 0;
    move1_ = 0;
    move2_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    move3_ = 0;
    move4_ = 0;
    move5_ = 0;
    if (has_skill1()) {
      if (skill1_ != NULL) skill1_->::protos::common::Skill::Clear();
    }
    if (has_skill2()) {
      if (skill2_ != NULL) skill2_->::protos::common::Skill::Clear();
    }
    if (has_skill3()) {
      if (skill3_ != NULL) skill3_->::protos::common::Skill::Clear();
    }
    if (has_skill4()) {
      if (skill4_ != NULL) skill4_->::protos::common::Skill::Clear();
    }
    if (has_skill5()) {
      if (skill5_ != NULL) skill5_->::protos::common::Skill::Clear();
    }
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_skill6()) {
      if (skill6_ != NULL) skill6_->::protos::common::Skill::Clear();
    }
    if (has_skill7()) {
      if (skill7_ != NULL) skill7_->::protos::common::Skill::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Soul::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 refId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refid_)));
          set_has_refid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_hp;
        break;
      }

      // optional int32 hp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
          set_has_hp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_atk;
        break;
      }

      // optional int32 atk = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_atk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &atk_)));
          set_has_atk();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_def;
        break;
      }

      // optional int32 def = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_def:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &def_)));
          set_has_def();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_crit;
        break;
      }

      // optional int32 crit = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_crit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crit_)));
          set_has_crit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_dex;
        break;
      }

      // optional int32 dex = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dex_)));
          set_has_dex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_addHp;
        break;
      }

      // optional int32 addHp = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addHp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addhp_)));
          set_has_addhp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_addAtk;
        break;
      }

      // optional int32 addAtk = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addAtk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &addatk_)));
          set_has_addatk();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_addDef;
        break;
      }

      // optional int32 addDef = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_addDef:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adddef_)));
          set_has_adddef();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_hit;
        break;
      }

      // optional int32 hit = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hit_)));
          set_has_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_soulType;
        break;
      }

      // optional int32 soulType = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_soulType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soultype_)));
          set_has_soultype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_thumb;
        break;
      }

      // optional int32 thumb = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_thumb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &thumb_)));
          set_has_thumb();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_quality;
        break;
      }

      // optional int32 quality = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_move1;
        break;
      }

      // optional int32 move1 = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_move1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &move1_)));
          set_has_move1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_move2;
        break;
      }

      // optional int32 move2 = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_move2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &move2_)));
          set_has_move2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_move3;
        break;
      }

      // optional int32 move3 = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_move3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &move3_)));
          set_has_move3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_move4;
        break;
      }

      // optional int32 move4 = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_move4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &move4_)));
          set_has_move4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_move5;
        break;
      }

      // optional int32 move5 = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_move5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &move5_)));
          set_has_move5();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_skill1;
        break;
      }

      // optional .protos.common.Skill skill1 = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill1()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_skill2;
        break;
      }

      // optional .protos.common.Skill skill2 = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill2()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_skill3;
        break;
      }

      // optional .protos.common.Skill skill3 = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill3()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_skill4;
        break;
      }

      // optional .protos.common.Skill skill4 = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill4()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_skill5;
        break;
      }

      // optional .protos.common.Skill skill5 = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill5()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_skill6;
        break;
      }

      // optional .protos.common.Skill skill6 = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill6()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_skill7;
        break;
      }

      // optional .protos.common.Skill skill7 = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill7()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Soul::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 refId = 1;
  if (has_refid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->refid(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional int32 hp = 3;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hp(), output);
  }

  // optional int32 atk = 4;
  if (has_atk()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->atk(), output);
  }

  // optional int32 def = 5;
  if (has_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->def(), output);
  }

  // optional int32 crit = 6;
  if (has_crit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->crit(), output);
  }

  // optional int32 dex = 7;
  if (has_dex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->dex(), output);
  }

  // optional int32 addHp = 8;
  if (has_addhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->addhp(), output);
  }

  // optional int32 addAtk = 9;
  if (has_addatk()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->addatk(), output);
  }

  // optional int32 addDef = 10;
  if (has_adddef()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->adddef(), output);
  }

  // optional int32 hit = 11;
  if (has_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->hit(), output);
  }

  // optional int32 soulType = 12;
  if (has_soultype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->soultype(), output);
  }

  // optional int32 thumb = 13;
  if (has_thumb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->thumb(), output);
  }

  // optional int32 quality = 14;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->quality(), output);
  }

  // optional int32 move1 = 15;
  if (has_move1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->move1(), output);
  }

  // optional int32 move2 = 16;
  if (has_move2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->move2(), output);
  }

  // optional int32 move3 = 17;
  if (has_move3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->move3(), output);
  }

  // optional int32 move4 = 18;
  if (has_move4()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->move4(), output);
  }

  // optional int32 move5 = 19;
  if (has_move5()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->move5(), output);
  }

  // optional .protos.common.Skill skill1 = 20;
  if (has_skill1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->skill1(), output);
  }

  // optional .protos.common.Skill skill2 = 21;
  if (has_skill2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->skill2(), output);
  }

  // optional .protos.common.Skill skill3 = 22;
  if (has_skill3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->skill3(), output);
  }

  // optional .protos.common.Skill skill4 = 23;
  if (has_skill4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->skill4(), output);
  }

  // optional .protos.common.Skill skill5 = 24;
  if (has_skill5()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->skill5(), output);
  }

  // optional .protos.common.Skill skill6 = 25;
  if (has_skill6()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->skill6(), output);
  }

  // optional .protos.common.Skill skill7 = 26;
  if (has_skill7()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->skill7(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Soul::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 refId = 1;
  if (has_refid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->refid(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 hp = 3;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hp(), target);
  }

  // optional int32 atk = 4;
  if (has_atk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->atk(), target);
  }

  // optional int32 def = 5;
  if (has_def()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->def(), target);
  }

  // optional int32 crit = 6;
  if (has_crit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->crit(), target);
  }

  // optional int32 dex = 7;
  if (has_dex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->dex(), target);
  }

  // optional int32 addHp = 8;
  if (has_addhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->addhp(), target);
  }

  // optional int32 addAtk = 9;
  if (has_addatk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->addatk(), target);
  }

  // optional int32 addDef = 10;
  if (has_adddef()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->adddef(), target);
  }

  // optional int32 hit = 11;
  if (has_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->hit(), target);
  }

  // optional int32 soulType = 12;
  if (has_soultype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->soultype(), target);
  }

  // optional int32 thumb = 13;
  if (has_thumb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->thumb(), target);
  }

  // optional int32 quality = 14;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->quality(), target);
  }

  // optional int32 move1 = 15;
  if (has_move1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->move1(), target);
  }

  // optional int32 move2 = 16;
  if (has_move2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->move2(), target);
  }

  // optional int32 move3 = 17;
  if (has_move3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->move3(), target);
  }

  // optional int32 move4 = 18;
  if (has_move4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->move4(), target);
  }

  // optional int32 move5 = 19;
  if (has_move5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->move5(), target);
  }

  // optional .protos.common.Skill skill1 = 20;
  if (has_skill1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->skill1(), target);
  }

  // optional .protos.common.Skill skill2 = 21;
  if (has_skill2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->skill2(), target);
  }

  // optional .protos.common.Skill skill3 = 22;
  if (has_skill3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->skill3(), target);
  }

  // optional .protos.common.Skill skill4 = 23;
  if (has_skill4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->skill4(), target);
  }

  // optional .protos.common.Skill skill5 = 24;
  if (has_skill5()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->skill5(), target);
  }

  // optional .protos.common.Skill skill6 = 25;
  if (has_skill6()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->skill6(), target);
  }

  // optional .protos.common.Skill skill7 = 26;
  if (has_skill7()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->skill7(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Soul::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 refId = 1;
    if (has_refid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refid());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 hp = 3;
    if (has_hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hp());
    }

    // optional int32 atk = 4;
    if (has_atk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->atk());
    }

    // optional int32 def = 5;
    if (has_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->def());
    }

    // optional int32 crit = 6;
    if (has_crit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crit());
    }

    // optional int32 dex = 7;
    if (has_dex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dex());
    }

    // optional int32 addHp = 8;
    if (has_addhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->addhp());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 addAtk = 9;
    if (has_addatk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->addatk());
    }

    // optional int32 addDef = 10;
    if (has_adddef()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adddef());
    }

    // optional int32 hit = 11;
    if (has_hit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hit());
    }

    // optional int32 soulType = 12;
    if (has_soultype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soultype());
    }

    // optional int32 thumb = 13;
    if (has_thumb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->thumb());
    }

    // optional int32 quality = 14;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional int32 move1 = 15;
    if (has_move1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->move1());
    }

    // optional int32 move2 = 16;
    if (has_move2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->move2());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 move3 = 17;
    if (has_move3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->move3());
    }

    // optional int32 move4 = 18;
    if (has_move4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->move4());
    }

    // optional int32 move5 = 19;
    if (has_move5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->move5());
    }

    // optional .protos.common.Skill skill1 = 20;
    if (has_skill1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skill1());
    }

    // optional .protos.common.Skill skill2 = 21;
    if (has_skill2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skill2());
    }

    // optional .protos.common.Skill skill3 = 22;
    if (has_skill3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skill3());
    }

    // optional .protos.common.Skill skill4 = 23;
    if (has_skill4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skill4());
    }

    // optional .protos.common.Skill skill5 = 24;
    if (has_skill5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skill5());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional .protos.common.Skill skill6 = 25;
    if (has_skill6()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skill6());
    }

    // optional .protos.common.Skill skill7 = 26;
    if (has_skill7()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skill7());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Soul::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Soul* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Soul*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Soul::MergeFrom(const Soul& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refid()) {
      set_refid(from.refid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_atk()) {
      set_atk(from.atk());
    }
    if (from.has_def()) {
      set_def(from.def());
    }
    if (from.has_crit()) {
      set_crit(from.crit());
    }
    if (from.has_dex()) {
      set_dex(from.dex());
    }
    if (from.has_addhp()) {
      set_addhp(from.addhp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_addatk()) {
      set_addatk(from.addatk());
    }
    if (from.has_adddef()) {
      set_adddef(from.adddef());
    }
    if (from.has_hit()) {
      set_hit(from.hit());
    }
    if (from.has_soultype()) {
      set_soultype(from.soultype());
    }
    if (from.has_thumb()) {
      set_thumb(from.thumb());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_move1()) {
      set_move1(from.move1());
    }
    if (from.has_move2()) {
      set_move2(from.move2());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_move3()) {
      set_move3(from.move3());
    }
    if (from.has_move4()) {
      set_move4(from.move4());
    }
    if (from.has_move5()) {
      set_move5(from.move5());
    }
    if (from.has_skill1()) {
      mutable_skill1()->::protos::common::Skill::MergeFrom(from.skill1());
    }
    if (from.has_skill2()) {
      mutable_skill2()->::protos::common::Skill::MergeFrom(from.skill2());
    }
    if (from.has_skill3()) {
      mutable_skill3()->::protos::common::Skill::MergeFrom(from.skill3());
    }
    if (from.has_skill4()) {
      mutable_skill4()->::protos::common::Skill::MergeFrom(from.skill4());
    }
    if (from.has_skill5()) {
      mutable_skill5()->::protos::common::Skill::MergeFrom(from.skill5());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_skill6()) {
      mutable_skill6()->::protos::common::Skill::MergeFrom(from.skill6());
    }
    if (from.has_skill7()) {
      mutable_skill7()->::protos::common::Skill::MergeFrom(from.skill7());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Soul::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Soul::CopyFrom(const Soul& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Soul::IsInitialized() const {

  return true;
}

void Soul::Swap(Soul* other) {
  if (other != this) {
    std::swap(refid_, other->refid_);
    std::swap(name_, other->name_);
    std::swap(hp_, other->hp_);
    std::swap(atk_, other->atk_);
    std::swap(def_, other->def_);
    std::swap(crit_, other->crit_);
    std::swap(dex_, other->dex_);
    std::swap(addhp_, other->addhp_);
    std::swap(addatk_, other->addatk_);
    std::swap(adddef_, other->adddef_);
    std::swap(hit_, other->hit_);
    std::swap(soultype_, other->soultype_);
    std::swap(thumb_, other->thumb_);
    std::swap(quality_, other->quality_);
    std::swap(move1_, other->move1_);
    std::swap(move2_, other->move2_);
    std::swap(move3_, other->move3_);
    std::swap(move4_, other->move4_);
    std::swap(move5_, other->move5_);
    std::swap(skill1_, other->skill1_);
    std::swap(skill2_, other->skill2_);
    std::swap(skill3_, other->skill3_);
    std::swap(skill4_, other->skill4_);
    std::swap(skill5_, other->skill5_);
    std::swap(skill6_, other->skill6_);
    std::swap(skill7_, other->skill7_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Soul::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Soul_descriptor_;
  metadata.reflection = Soul_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace protos

// @@protoc_insertion_point(global_scope)
