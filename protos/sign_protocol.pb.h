// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sign_protocol.proto

#ifndef PROTOBUF_sign_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_sign_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/role_common.pb.h"
#include "common/prize_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sign_5fprotocol_2eproto();
void protobuf_AssignDesc_sign_5fprotocol_2eproto();
void protobuf_ShutdownFile_sign_5fprotocol_2eproto();

class SignData;
class SignRequest;
class SignResponse;
class Sign;

// ===================================================================

class SignData : public ::google::protobuf::Message {
 public:
  SignData();
  virtual ~SignData();

  SignData(const SignData& from);

  inline SignData& operator=(const SignData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignData& default_instance();

  void Swap(SignData* other);

  // implements Message ----------------------------------------------

  SignData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignData& from);
  void MergeFrom(const SignData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 resign = 1;
  inline bool has_resign() const;
  inline void clear_resign();
  static const int kResignFieldNumber = 1;
  inline ::google::protobuf::int32 resign() const;
  inline void set_resign(::google::protobuf::int32 value);

  // required int32 sign = 2;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 2;
  inline ::google::protobuf::int32 sign() const;
  inline void set_sign(::google::protobuf::int32 value);

  // repeated .protos.Sign signList = 3;
  inline int signlist_size() const;
  inline void clear_signlist();
  static const int kSignListFieldNumber = 3;
  inline const ::protos::Sign& signlist(int index) const;
  inline ::protos::Sign* mutable_signlist(int index);
  inline ::protos::Sign* add_signlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::Sign >&
      signlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::Sign >*
      mutable_signlist();

  // repeated .protos.Sign totalList = 4;
  inline int totallist_size() const;
  inline void clear_totallist();
  static const int kTotalListFieldNumber = 4;
  inline const ::protos::Sign& totallist(int index) const;
  inline ::protos::Sign* mutable_totallist(int index);
  inline ::protos::Sign* add_totallist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::Sign >&
      totallist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::Sign >*
      mutable_totallist();

  // optional int32 resign_gold = 5;
  inline bool has_resign_gold() const;
  inline void clear_resign_gold();
  static const int kResignGoldFieldNumber = 5;
  inline ::google::protobuf::int32 resign_gold() const;
  inline void set_resign_gold(::google::protobuf::int32 value);

  // optional bool can_sign = 6;
  inline bool has_can_sign() const;
  inline void clear_can_sign();
  static const int kCanSignFieldNumber = 6;
  inline bool can_sign() const;
  inline void set_can_sign(bool value);

  // optional bool can_resign = 7;
  inline bool has_can_resign() const;
  inline void clear_can_resign();
  static const int kCanResignFieldNumber = 7;
  inline bool can_resign() const;
  inline void set_can_resign(bool value);

  // @@protoc_insertion_point(class_scope:protos.SignData)
 private:
  inline void set_has_resign();
  inline void clear_has_resign();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_resign_gold();
  inline void clear_has_resign_gold();
  inline void set_has_can_sign();
  inline void clear_has_can_sign();
  inline void set_has_can_resign();
  inline void clear_has_can_resign();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 resign_;
  ::google::protobuf::int32 sign_;
  ::google::protobuf::RepeatedPtrField< ::protos::Sign > signlist_;
  ::google::protobuf::RepeatedPtrField< ::protos::Sign > totallist_;
  ::google::protobuf::int32 resign_gold_;
  bool can_sign_;
  bool can_resign_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_sign_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sign_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sign_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SignData* default_instance_;
};
// -------------------------------------------------------------------

class SignRequest : public ::google::protobuf::Message {
 public:
  SignRequest();
  virtual ~SignRequest();

  SignRequest(const SignRequest& from);

  inline SignRequest& operator=(const SignRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignRequest& default_instance();

  void Swap(SignRequest* other);

  // implements Message ----------------------------------------------

  SignRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignRequest& from);
  void MergeFrom(const SignRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool resign = 1;
  inline bool has_resign() const;
  inline void clear_resign();
  static const int kResignFieldNumber = 1;
  inline bool resign() const;
  inline void set_resign(bool value);

  // @@protoc_insertion_point(class_scope:protos.SignRequest)
 private:
  inline void set_has_resign();
  inline void clear_has_resign();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool resign_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_sign_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sign_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sign_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SignRequest* default_instance_;
};
// -------------------------------------------------------------------

class SignResponse : public ::google::protobuf::Message {
 public:
  SignResponse();
  virtual ~SignResponse();

  SignResponse(const SignResponse& from);

  inline SignResponse& operator=(const SignResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignResponse& default_instance();

  void Swap(SignResponse* other);

  // implements Message ----------------------------------------------

  SignResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignResponse& from);
  void MergeFrom(const SignResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 resignGold = 2;
  inline bool has_resigngold() const;
  inline void clear_resigngold();
  static const int kResignGoldFieldNumber = 2;
  inline ::google::protobuf::int32 resigngold() const;
  inline void set_resigngold(::google::protobuf::int32 value);

  // optional .protos.common.Role role = 3;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 3;
  inline const ::protos::common::Role& role() const;
  inline ::protos::common::Role* mutable_role();
  inline ::protos::common::Role* release_role();
  inline void set_allocated_role(::protos::common::Role* role);

  // @@protoc_insertion_point(class_scope:protos.SignResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_resigngold();
  inline void clear_has_resigngold();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 resigngold_;
  ::protos::common::Role* role_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_sign_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sign_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sign_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SignResponse* default_instance_;
};
// -------------------------------------------------------------------

class Sign : public ::google::protobuf::Message {
 public:
  Sign();
  virtual ~Sign();

  Sign(const Sign& from);

  inline Sign& operator=(const Sign& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sign& default_instance();

  void Swap(Sign* other);

  // implements Message ----------------------------------------------

  Sign* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sign& from);
  void MergeFrom(const Sign& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // required int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required .protos.common.Prize prize = 3;
  inline bool has_prize() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 3;
  inline const ::protos::common::Prize& prize() const;
  inline ::protos::common::Prize* mutable_prize();
  inline ::protos::common::Prize* release_prize();
  inline void set_allocated_prize(::protos::common::Prize* prize);

  // optional int32 vip = 4;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 4;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.Sign)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_prize();
  inline void clear_has_prize();
  inline void set_has_vip();
  inline void clear_has_vip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 status_;
  ::protos::common::Prize* prize_;
  ::google::protobuf::int32 vip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_sign_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_sign_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_sign_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Sign* default_instance_;
};
// ===================================================================


// ===================================================================

// SignData

// required int32 resign = 1;
inline bool SignData::has_resign() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignData::set_has_resign() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignData::clear_has_resign() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignData::clear_resign() {
  resign_ = 0;
  clear_has_resign();
}
inline ::google::protobuf::int32 SignData::resign() const {
  return resign_;
}
inline void SignData::set_resign(::google::protobuf::int32 value) {
  set_has_resign();
  resign_ = value;
}

// required int32 sign = 2;
inline bool SignData::has_sign() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SignData::set_has_sign() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SignData::clear_has_sign() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SignData::clear_sign() {
  sign_ = 0;
  clear_has_sign();
}
inline ::google::protobuf::int32 SignData::sign() const {
  return sign_;
}
inline void SignData::set_sign(::google::protobuf::int32 value) {
  set_has_sign();
  sign_ = value;
}

// repeated .protos.Sign signList = 3;
inline int SignData::signlist_size() const {
  return signlist_.size();
}
inline void SignData::clear_signlist() {
  signlist_.Clear();
}
inline const ::protos::Sign& SignData::signlist(int index) const {
  return signlist_.Get(index);
}
inline ::protos::Sign* SignData::mutable_signlist(int index) {
  return signlist_.Mutable(index);
}
inline ::protos::Sign* SignData::add_signlist() {
  return signlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::Sign >&
SignData::signlist() const {
  return signlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::Sign >*
SignData::mutable_signlist() {
  return &signlist_;
}

// repeated .protos.Sign totalList = 4;
inline int SignData::totallist_size() const {
  return totallist_.size();
}
inline void SignData::clear_totallist() {
  totallist_.Clear();
}
inline const ::protos::Sign& SignData::totallist(int index) const {
  return totallist_.Get(index);
}
inline ::protos::Sign* SignData::mutable_totallist(int index) {
  return totallist_.Mutable(index);
}
inline ::protos::Sign* SignData::add_totallist() {
  return totallist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::Sign >&
SignData::totallist() const {
  return totallist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::Sign >*
SignData::mutable_totallist() {
  return &totallist_;
}

// optional int32 resign_gold = 5;
inline bool SignData::has_resign_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SignData::set_has_resign_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SignData::clear_has_resign_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SignData::clear_resign_gold() {
  resign_gold_ = 0;
  clear_has_resign_gold();
}
inline ::google::protobuf::int32 SignData::resign_gold() const {
  return resign_gold_;
}
inline void SignData::set_resign_gold(::google::protobuf::int32 value) {
  set_has_resign_gold();
  resign_gold_ = value;
}

// optional bool can_sign = 6;
inline bool SignData::has_can_sign() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SignData::set_has_can_sign() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SignData::clear_has_can_sign() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SignData::clear_can_sign() {
  can_sign_ = false;
  clear_has_can_sign();
}
inline bool SignData::can_sign() const {
  return can_sign_;
}
inline void SignData::set_can_sign(bool value) {
  set_has_can_sign();
  can_sign_ = value;
}

// optional bool can_resign = 7;
inline bool SignData::has_can_resign() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SignData::set_has_can_resign() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SignData::clear_has_can_resign() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SignData::clear_can_resign() {
  can_resign_ = false;
  clear_has_can_resign();
}
inline bool SignData::can_resign() const {
  return can_resign_;
}
inline void SignData::set_can_resign(bool value) {
  set_has_can_resign();
  can_resign_ = value;
}

// -------------------------------------------------------------------

// SignRequest

// required bool resign = 1;
inline bool SignRequest::has_resign() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignRequest::set_has_resign() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignRequest::clear_has_resign() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignRequest::clear_resign() {
  resign_ = false;
  clear_has_resign();
}
inline bool SignRequest::resign() const {
  return resign_;
}
inline void SignRequest::set_resign(bool value) {
  set_has_resign();
  resign_ = value;
}

// -------------------------------------------------------------------

// SignResponse

// required int32 result = 1;
inline bool SignResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SignResponse::result() const {
  return result_;
}
inline void SignResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 resignGold = 2;
inline bool SignResponse::has_resigngold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SignResponse::set_has_resigngold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SignResponse::clear_has_resigngold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SignResponse::clear_resigngold() {
  resigngold_ = 0;
  clear_has_resigngold();
}
inline ::google::protobuf::int32 SignResponse::resigngold() const {
  return resigngold_;
}
inline void SignResponse::set_resigngold(::google::protobuf::int32 value) {
  set_has_resigngold();
  resigngold_ = value;
}

// optional .protos.common.Role role = 3;
inline bool SignResponse::has_role() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SignResponse::set_has_role() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SignResponse::clear_has_role() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SignResponse::clear_role() {
  if (role_ != NULL) role_->::protos::common::Role::Clear();
  clear_has_role();
}
inline const ::protos::common::Role& SignResponse::role() const {
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
inline ::protos::common::Role* SignResponse::mutable_role() {
  set_has_role();
  if (role_ == NULL) role_ = new ::protos::common::Role;
  return role_;
}
inline ::protos::common::Role* SignResponse::release_role() {
  clear_has_role();
  ::protos::common::Role* temp = role_;
  role_ = NULL;
  return temp;
}
inline void SignResponse::set_allocated_role(::protos::common::Role* role) {
  delete role_;
  role_ = role;
  if (role) {
    set_has_role();
  } else {
    clear_has_role();
  }
}

// -------------------------------------------------------------------

// Sign

// required int32 day = 1;
inline bool Sign::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Sign::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Sign::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Sign::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 Sign::day() const {
  return day_;
}
inline void Sign::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
}

// required int32 status = 2;
inline bool Sign::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Sign::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Sign::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Sign::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Sign::status() const {
  return status_;
}
inline void Sign::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required .protos.common.Prize prize = 3;
inline bool Sign::has_prize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Sign::set_has_prize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Sign::clear_has_prize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Sign::clear_prize() {
  if (prize_ != NULL) prize_->::protos::common::Prize::Clear();
  clear_has_prize();
}
inline const ::protos::common::Prize& Sign::prize() const {
  return prize_ != NULL ? *prize_ : *default_instance_->prize_;
}
inline ::protos::common::Prize* Sign::mutable_prize() {
  set_has_prize();
  if (prize_ == NULL) prize_ = new ::protos::common::Prize;
  return prize_;
}
inline ::protos::common::Prize* Sign::release_prize() {
  clear_has_prize();
  ::protos::common::Prize* temp = prize_;
  prize_ = NULL;
  return temp;
}
inline void Sign::set_allocated_prize(::protos::common::Prize* prize) {
  delete prize_;
  prize_ = prize;
  if (prize) {
    set_has_prize();
  } else {
    clear_has_prize();
  }
}

// optional int32 vip = 4;
inline bool Sign::has_vip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Sign::set_has_vip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Sign::clear_has_vip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Sign::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 Sign::vip() const {
  return vip_;
}
inline void Sign::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sign_5fprotocol_2eproto__INCLUDED
