// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: union_protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "union_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protos {

namespace {

const ::google::protobuf::Descriptor* UnionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnionResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_union_5fprotocol_2eproto() {
  protobuf_AddDesc_union_5fprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "union_protocol.proto");
  GOOGLE_CHECK(file != NULL);
  UnionRequest_descriptor_ = file->message_type(0);
  static const int UnionRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, stageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, boss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, starstar_),
  };
  UnionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnionRequest_descriptor_,
      UnionRequest::default_instance_,
      UnionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnionRequest));
  UnionResponse_descriptor_ = file->message_type(1);
  static const int UnionResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, hero1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, hero2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, hero3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, hero4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, hero5_),
  };
  UnionResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnionResponse_descriptor_,
      UnionResponse::default_instance_,
      UnionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnionResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_union_5fprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnionRequest_descriptor_, &UnionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnionResponse_descriptor_, &UnionResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_union_5fprotocol_2eproto() {
  delete UnionRequest::default_instance_;
  delete UnionRequest_reflection_;
  delete UnionResponse::default_instance_;
  delete UnionResponse_reflection_;
}

void protobuf_AddDesc_union_5fprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protos::common::protobuf_AddDesc_common_2fhero_5fcommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024union_protocol.proto\022\006protos\032\030common/h"
    "ero_common.proto\"\?\n\014UnionRequest\022\017\n\007stag"
    "eId\030\001 \001(\005\022\014\n\004boss\030\002 \001(\010\022\020\n\010starStar\030\003 \001("
    "\005\"\303\001\n\rUnionResponse\022\"\n\005hero1\030\001 \001(\0132\023.pro"
    "tos.common.Hero\022\"\n\005hero2\030\002 \001(\0132\023.protos."
    "common.Hero\022\"\n\005hero3\030\003 \001(\0132\023.protos.comm"
    "on.Hero\022\"\n\005hero4\030\004 \001(\0132\023.protos.common.H"
    "ero\022\"\n\005hero5\030\005 \001(\0132\023.protos.common.HeroB"
    "0\n\035dass.server.gameserver.protosB\rUnionP"
    "rotocolH\001", 369);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "union_protocol.proto", &protobuf_RegisterTypes);
  UnionRequest::default_instance_ = new UnionRequest();
  UnionResponse::default_instance_ = new UnionResponse();
  UnionRequest::default_instance_->InitAsDefaultInstance();
  UnionResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_union_5fprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_union_5fprotocol_2eproto {
  StaticDescriptorInitializer_union_5fprotocol_2eproto() {
    protobuf_AddDesc_union_5fprotocol_2eproto();
  }
} static_descriptor_initializer_union_5fprotocol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int UnionRequest::kStageIdFieldNumber;
const int UnionRequest::kBossFieldNumber;
const int UnionRequest::kStarStarFieldNumber;
#endif  // !_MSC_VER

UnionRequest::UnionRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UnionRequest::InitAsDefaultInstance() {
}

UnionRequest::UnionRequest(const UnionRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UnionRequest::SharedCtor() {
  _cached_size_ = 0;
  stageid_ = 0;
  boss_ = false;
  starstar_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnionRequest::~UnionRequest() {
  SharedDtor();
}

void UnionRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnionRequest_descriptor_;
}

const UnionRequest& UnionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_union_5fprotocol_2eproto();
  return *default_instance_;
}

UnionRequest* UnionRequest::default_instance_ = NULL;

UnionRequest* UnionRequest::New() const {
  return new UnionRequest;
}

void UnionRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stageid_ = 0;
    boss_ = false;
    starstar_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 stageId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stageid_)));
          set_has_stageid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_boss;
        break;
      }

      // optional bool boss = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &boss_)));
          set_has_boss();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_starStar;
        break;
      }

      // optional int32 starStar = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_starStar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starstar_)));
          set_has_starstar();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UnionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 stageId = 1;
  if (has_stageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stageid(), output);
  }

  // optional bool boss = 2;
  if (has_boss()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->boss(), output);
  }

  // optional int32 starStar = 3;
  if (has_starstar()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->starstar(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UnionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 stageId = 1;
  if (has_stageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stageid(), target);
  }

  // optional bool boss = 2;
  if (has_boss()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->boss(), target);
  }

  // optional int32 starStar = 3;
  if (has_starstar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->starstar(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UnionRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 stageId = 1;
    if (has_stageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stageid());
    }

    // optional bool boss = 2;
    if (has_boss()) {
      total_size += 1 + 1;
    }

    // optional int32 starStar = 3;
    if (has_starstar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->starstar());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnionRequest::MergeFrom(const UnionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stageid()) {
      set_stageid(from.stageid());
    }
    if (from.has_boss()) {
      set_boss(from.boss());
    }
    if (from.has_starstar()) {
      set_starstar(from.starstar());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnionRequest::CopyFrom(const UnionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnionRequest::IsInitialized() const {

  return true;
}

void UnionRequest::Swap(UnionRequest* other) {
  if (other != this) {
    std::swap(stageid_, other->stageid_);
    std::swap(boss_, other->boss_);
    std::swap(starstar_, other->starstar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnionRequest_descriptor_;
  metadata.reflection = UnionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnionResponse::kHero1FieldNumber;
const int UnionResponse::kHero2FieldNumber;
const int UnionResponse::kHero3FieldNumber;
const int UnionResponse::kHero4FieldNumber;
const int UnionResponse::kHero5FieldNumber;
#endif  // !_MSC_VER

UnionResponse::UnionResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UnionResponse::InitAsDefaultInstance() {
  hero1_ = const_cast< ::protos::common::Hero*>(&::protos::common::Hero::default_instance());
  hero2_ = const_cast< ::protos::common::Hero*>(&::protos::common::Hero::default_instance());
  hero3_ = const_cast< ::protos::common::Hero*>(&::protos::common::Hero::default_instance());
  hero4_ = const_cast< ::protos::common::Hero*>(&::protos::common::Hero::default_instance());
  hero5_ = const_cast< ::protos::common::Hero*>(&::protos::common::Hero::default_instance());
}

UnionResponse::UnionResponse(const UnionResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UnionResponse::SharedCtor() {
  _cached_size_ = 0;
  hero1_ = NULL;
  hero2_ = NULL;
  hero3_ = NULL;
  hero4_ = NULL;
  hero5_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnionResponse::~UnionResponse() {
  SharedDtor();
}

void UnionResponse::SharedDtor() {
  if (this != default_instance_) {
    delete hero1_;
    delete hero2_;
    delete hero3_;
    delete hero4_;
    delete hero5_;
  }
}

void UnionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnionResponse_descriptor_;
}

const UnionResponse& UnionResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_union_5fprotocol_2eproto();
  return *default_instance_;
}

UnionResponse* UnionResponse::default_instance_ = NULL;

UnionResponse* UnionResponse::New() const {
  return new UnionResponse;
}

void UnionResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_hero1()) {
      if (hero1_ != NULL) hero1_->::protos::common::Hero::Clear();
    }
    if (has_hero2()) {
      if (hero2_ != NULL) hero2_->::protos::common::Hero::Clear();
    }
    if (has_hero3()) {
      if (hero3_ != NULL) hero3_->::protos::common::Hero::Clear();
    }
    if (has_hero4()) {
      if (hero4_ != NULL) hero4_->::protos::common::Hero::Clear();
    }
    if (has_hero5()) {
      if (hero5_ != NULL) hero5_->::protos::common::Hero::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .protos.common.Hero hero1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero1()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_hero2;
        break;
      }

      // optional .protos.common.Hero hero2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero2()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_hero3;
        break;
      }

      // optional .protos.common.Hero hero3 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero3()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_hero4;
        break;
      }

      // optional .protos.common.Hero hero4 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero4()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_hero5;
        break;
      }

      // optional .protos.common.Hero hero5 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero5()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UnionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .protos.common.Hero hero1 = 1;
  if (has_hero1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->hero1(), output);
  }

  // optional .protos.common.Hero hero2 = 2;
  if (has_hero2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero2(), output);
  }

  // optional .protos.common.Hero hero3 = 3;
  if (has_hero3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->hero3(), output);
  }

  // optional .protos.common.Hero hero4 = 4;
  if (has_hero4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->hero4(), output);
  }

  // optional .protos.common.Hero hero5 = 5;
  if (has_hero5()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->hero5(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UnionResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .protos.common.Hero hero1 = 1;
  if (has_hero1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->hero1(), target);
  }

  // optional .protos.common.Hero hero2 = 2;
  if (has_hero2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero2(), target);
  }

  // optional .protos.common.Hero hero3 = 3;
  if (has_hero3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->hero3(), target);
  }

  // optional .protos.common.Hero hero4 = 4;
  if (has_hero4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->hero4(), target);
  }

  // optional .protos.common.Hero hero5 = 5;
  if (has_hero5()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->hero5(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UnionResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protos.common.Hero hero1 = 1;
    if (has_hero1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero1());
    }

    // optional .protos.common.Hero hero2 = 2;
    if (has_hero2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero2());
    }

    // optional .protos.common.Hero hero3 = 3;
    if (has_hero3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero3());
    }

    // optional .protos.common.Hero hero4 = 4;
    if (has_hero4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero4());
    }

    // optional .protos.common.Hero hero5 = 5;
    if (has_hero5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero5());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnionResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnionResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnionResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnionResponse::MergeFrom(const UnionResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hero1()) {
      mutable_hero1()->::protos::common::Hero::MergeFrom(from.hero1());
    }
    if (from.has_hero2()) {
      mutable_hero2()->::protos::common::Hero::MergeFrom(from.hero2());
    }
    if (from.has_hero3()) {
      mutable_hero3()->::protos::common::Hero::MergeFrom(from.hero3());
    }
    if (from.has_hero4()) {
      mutable_hero4()->::protos::common::Hero::MergeFrom(from.hero4());
    }
    if (from.has_hero5()) {
      mutable_hero5()->::protos::common::Hero::MergeFrom(from.hero5());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnionResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnionResponse::CopyFrom(const UnionResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnionResponse::IsInitialized() const {

  if (has_hero1()) {
    if (!this->hero1().IsInitialized()) return false;
  }
  if (has_hero2()) {
    if (!this->hero2().IsInitialized()) return false;
  }
  if (has_hero3()) {
    if (!this->hero3().IsInitialized()) return false;
  }
  if (has_hero4()) {
    if (!this->hero4().IsInitialized()) return false;
  }
  if (has_hero5()) {
    if (!this->hero5().IsInitialized()) return false;
  }
  return true;
}

void UnionResponse::Swap(UnionResponse* other) {
  if (other != this) {
    std::swap(hero1_, other->hero1_);
    std::swap(hero2_, other->hero2_);
    std::swap(hero3_, other->hero3_);
    std::swap(hero4_, other->hero4_);
    std::swap(hero5_, other->hero5_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnionResponse_descriptor_;
  metadata.reflection = UnionResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)
