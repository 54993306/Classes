// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stage_protocol.proto

#ifndef PROTOBUF_stage_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_stage_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/hero_common.pb.h"
#include "common/monster_common.pb.h"
#include "common/trap_common.pb.h"
#include "common/prize_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_stage_5fprotocol_2eproto();
void protobuf_AssignDesc_stage_5fprotocol_2eproto();
void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

class StageInfoReq;
class StageInfoRes;
class ChapterRequest;
class ChapterResponse;
class StageListRequest;
class StageListResponse;
class BattleRequest;
class BattleResponse;
class AmbushRequest;
class BattleFinish;
class BattleFinishRep;
class StageContinueRes;
class GetPrizeReq;
class GetPrizeRes;
class Chapter;
class StageInfo;
class FieldEff;

// ===================================================================

class StageInfoReq : public ::google::protobuf::Message {
 public:
  StageInfoReq();
  virtual ~StageInfoReq();

  StageInfoReq(const StageInfoReq& from);

  inline StageInfoReq& operator=(const StageInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageInfoReq& default_instance();

  void Swap(StageInfoReq* other);

  // implements Message ----------------------------------------------

  StageInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageInfoReq& from);
  void MergeFrom(const StageInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stageId = 1;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 stageid() const;
  inline void set_stageid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.StageInfoReq)
 private:
  inline void set_has_stageid();
  inline void clear_has_stageid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stageid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StageInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class StageInfoRes : public ::google::protobuf::Message {
 public:
  StageInfoRes();
  virtual ~StageInfoRes();

  StageInfoRes(const StageInfoRes& from);

  inline StageInfoRes& operator=(const StageInfoRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageInfoRes& default_instance();

  void Swap(StageInfoRes* other);

  // implements Message ----------------------------------------------

  StageInfoRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageInfoRes& from);
  void MergeFrom(const StageInfoRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 action = 1;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline ::google::protobuf::int32 action() const;
  inline void set_action(::google::protobuf::int32 value);

  // repeated .protos.common.Monster monsterList = 2;
  inline int monsterlist_size() const;
  inline void clear_monsterlist();
  static const int kMonsterListFieldNumber = 2;
  inline const ::protos::common::Monster& monsterlist(int index) const;
  inline ::protos::common::Monster* mutable_monsterlist(int index);
  inline ::protos::common::Monster* add_monsterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Monster >&
      monsterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Monster >*
      mutable_monsterlist();

  // repeated .protos.common.Prize itemList = 3;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 3;
  inline const ::protos::common::Prize& itemlist(int index) const;
  inline ::protos::common::Prize* mutable_itemlist(int index);
  inline ::protos::common::Prize* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:protos.StageInfoRes)
 private:
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::common::Monster > monsterlist_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::Prize > itemlist_;
  ::google::protobuf::int32 action_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StageInfoRes* default_instance_;
};
// -------------------------------------------------------------------

class ChapterRequest : public ::google::protobuf::Message {
 public:
  ChapterRequest();
  virtual ~ChapterRequest();

  ChapterRequest(const ChapterRequest& from);

  inline ChapterRequest& operator=(const ChapterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChapterRequest& default_instance();

  void Swap(ChapterRequest* other);

  // implements Message ----------------------------------------------

  ChapterRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChapterRequest& from);
  void MergeFrom(const ChapterRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 chapter = 2;
  inline bool has_chapter() const;
  inline void clear_chapter();
  static const int kChapterFieldNumber = 2;
  inline ::google::protobuf::int32 chapter() const;
  inline void set_chapter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.ChapterRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_chapter();
  inline void clear_has_chapter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 chapter_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ChapterRequest* default_instance_;
};
// -------------------------------------------------------------------

class ChapterResponse : public ::google::protobuf::Message {
 public:
  ChapterResponse();
  virtual ~ChapterResponse();

  ChapterResponse(const ChapterResponse& from);

  inline ChapterResponse& operator=(const ChapterResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChapterResponse& default_instance();

  void Swap(ChapterResponse* other);

  // implements Message ----------------------------------------------

  ChapterResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChapterResponse& from);
  void MergeFrom(const ChapterResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protos.Chapter chapterList = 1;
  inline int chapterlist_size() const;
  inline void clear_chapterlist();
  static const int kChapterListFieldNumber = 1;
  inline const ::protos::Chapter& chapterlist(int index) const;
  inline ::protos::Chapter* mutable_chapterlist(int index);
  inline ::protos::Chapter* add_chapterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::Chapter >&
      chapterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::Chapter >*
      mutable_chapterlist();

  // optional int32 nowChapter = 2;
  inline bool has_nowchapter() const;
  inline void clear_nowchapter();
  static const int kNowChapterFieldNumber = 2;
  inline ::google::protobuf::int32 nowchapter() const;
  inline void set_nowchapter(::google::protobuf::int32 value);

  // repeated .protos.StageInfo stageList = 3;
  inline int stagelist_size() const;
  inline void clear_stagelist();
  static const int kStageListFieldNumber = 3;
  inline const ::protos::StageInfo& stagelist(int index) const;
  inline ::protos::StageInfo* mutable_stagelist(int index);
  inline ::protos::StageInfo* add_stagelist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::StageInfo >&
      stagelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::StageInfo >*
      mutable_stagelist();

  // @@protoc_insertion_point(class_scope:protos.ChapterResponse)
 private:
  inline void set_has_nowchapter();
  inline void clear_has_nowchapter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::Chapter > chapterlist_;
  ::google::protobuf::RepeatedPtrField< ::protos::StageInfo > stagelist_;
  ::google::protobuf::int32 nowchapter_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ChapterResponse* default_instance_;
};
// -------------------------------------------------------------------

class StageListRequest : public ::google::protobuf::Message {
 public:
  StageListRequest();
  virtual ~StageListRequest();

  StageListRequest(const StageListRequest& from);

  inline StageListRequest& operator=(const StageListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageListRequest& default_instance();

  void Swap(StageListRequest* other);

  // implements Message ----------------------------------------------

  StageListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageListRequest& from);
  void MergeFrom(const StageListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 chapter = 1;
  inline bool has_chapter() const;
  inline void clear_chapter();
  static const int kChapterFieldNumber = 1;
  inline ::google::protobuf::int32 chapter() const;
  inline void set_chapter(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.StageListRequest)
 private:
  inline void set_has_chapter();
  inline void clear_has_chapter();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 chapter_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StageListRequest* default_instance_;
};
// -------------------------------------------------------------------

class StageListResponse : public ::google::protobuf::Message {
 public:
  StageListResponse();
  virtual ~StageListResponse();

  StageListResponse(const StageListResponse& from);

  inline StageListResponse& operator=(const StageListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageListResponse& default_instance();

  void Swap(StageListResponse* other);

  // implements Message ----------------------------------------------

  StageListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageListResponse& from);
  void MergeFrom(const StageListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protos.StageInfo stageList = 1;
  inline int stagelist_size() const;
  inline void clear_stagelist();
  static const int kStageListFieldNumber = 1;
  inline const ::protos::StageInfo& stagelist(int index) const;
  inline ::protos::StageInfo* mutable_stagelist(int index);
  inline ::protos::StageInfo* add_stagelist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::StageInfo >&
      stagelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::StageInfo >*
      mutable_stagelist();

  // @@protoc_insertion_point(class_scope:protos.StageListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::StageInfo > stagelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StageListResponse* default_instance_;
};
// -------------------------------------------------------------------

class BattleRequest : public ::google::protobuf::Message {
 public:
  BattleRequest();
  virtual ~BattleRequest();

  BattleRequest(const BattleRequest& from);

  inline BattleRequest& operator=(const BattleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleRequest& default_instance();

  void Swap(BattleRequest* other);

  // implements Message ----------------------------------------------

  BattleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleRequest& from);
  void MergeFrom(const BattleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stageId = 1;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 stageid() const;
  inline void set_stageid(::google::protobuf::int32 value);

  // optional int32 hero1 = 2;
  inline bool has_hero1() const;
  inline void clear_hero1();
  static const int kHero1FieldNumber = 2;
  inline ::google::protobuf::int32 hero1() const;
  inline void set_hero1(::google::protobuf::int32 value);

  // optional int32 hero2 = 3;
  inline bool has_hero2() const;
  inline void clear_hero2();
  static const int kHero2FieldNumber = 3;
  inline ::google::protobuf::int32 hero2() const;
  inline void set_hero2(::google::protobuf::int32 value);

  // optional int32 hero3 = 4;
  inline bool has_hero3() const;
  inline void clear_hero3();
  static const int kHero3FieldNumber = 4;
  inline ::google::protobuf::int32 hero3() const;
  inline void set_hero3(::google::protobuf::int32 value);

  // optional int32 hero4 = 5;
  inline bool has_hero4() const;
  inline void clear_hero4();
  static const int kHero4FieldNumber = 5;
  inline ::google::protobuf::int32 hero4() const;
  inline void set_hero4(::google::protobuf::int32 value);

  // optional int32 hero5 = 6;
  inline bool has_hero5() const;
  inline void clear_hero5();
  static const int kHero5FieldNumber = 6;
  inline ::google::protobuf::int32 hero5() const;
  inline void set_hero5(::google::protobuf::int32 value);

  // optional int32 fid = 7;
  inline bool has_fid() const;
  inline void clear_fid();
  static const int kFidFieldNumber = 7;
  inline ::google::protobuf::int32 fid() const;
  inline void set_fid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.BattleRequest)
 private:
  inline void set_has_stageid();
  inline void clear_has_stageid();
  inline void set_has_hero1();
  inline void clear_has_hero1();
  inline void set_has_hero2();
  inline void clear_has_hero2();
  inline void set_has_hero3();
  inline void clear_has_hero3();
  inline void set_has_hero4();
  inline void clear_has_hero4();
  inline void set_has_hero5();
  inline void clear_has_hero5();
  inline void set_has_fid();
  inline void clear_has_fid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stageid_;
  ::google::protobuf::int32 hero1_;
  ::google::protobuf::int32 hero2_;
  ::google::protobuf::int32 hero3_;
  ::google::protobuf::int32 hero4_;
  ::google::protobuf::int32 hero5_;
  ::google::protobuf::int32 fid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BattleRequest* default_instance_;
};
// -------------------------------------------------------------------

class BattleResponse : public ::google::protobuf::Message {
 public:
  BattleResponse();
  virtual ~BattleResponse();

  BattleResponse(const BattleResponse& from);

  inline BattleResponse& operator=(const BattleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleResponse& default_instance();

  void Swap(BattleResponse* other);

  // implements Message ----------------------------------------------

  BattleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleResponse& from);
  void MergeFrom(const BattleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 stageId = 1;
  inline bool has_stageid() const;
  inline void clear_stageid();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::int32 stageid() const;
  inline void set_stageid(::google::protobuf::int32 value);

  // required int32 batch = 2;
  inline bool has_batch() const;
  inline void clear_batch();
  static const int kBatchFieldNumber = 2;
  inline ::google::protobuf::int32 batch() const;
  inline void set_batch(::google::protobuf::int32 value);

  // repeated .protos.common.Hero heroList = 3;
  inline int herolist_size() const;
  inline void clear_herolist();
  static const int kHeroListFieldNumber = 3;
  inline const ::protos::common::Hero& herolist(int index) const;
  inline ::protos::common::Hero* mutable_herolist(int index);
  inline ::protos::common::Hero* add_herolist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Hero >&
      herolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Hero >*
      mutable_herolist();

  // repeated .protos.common.Monster monsterList = 4;
  inline int monsterlist_size() const;
  inline void clear_monsterlist();
  static const int kMonsterListFieldNumber = 4;
  inline const ::protos::common::Monster& monsterlist(int index) const;
  inline ::protos::common::Monster* mutable_monsterlist(int index);
  inline ::protos::common::Monster* add_monsterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Monster >&
      monsterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Monster >*
      mutable_monsterlist();

  // repeated .protos.common.Trap trapList = 5;
  inline int traplist_size() const;
  inline void clear_traplist();
  static const int kTrapListFieldNumber = 5;
  inline const ::protos::common::Trap& traplist(int index) const;
  inline ::protos::common::Trap* mutable_traplist(int index);
  inline ::protos::common::Trap* add_traplist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Trap >&
      traplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Trap >*
      mutable_traplist();

  // optional .protos.FieldEff field = 10;
  inline bool has_field() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 10;
  inline const ::protos::FieldEff& field() const;
  inline ::protos::FieldEff* mutable_field();
  inline ::protos::FieldEff* release_field();
  inline void set_allocated_field(::protos::FieldEff* field);

  // optional int32 maxTime = 11;
  inline bool has_maxtime() const;
  inline void clear_maxtime();
  static const int kMaxTimeFieldNumber = 11;
  inline ::google::protobuf::int32 maxtime() const;
  inline void set_maxtime(::google::protobuf::int32 value);

  // optional int32 param = 12;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 12;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.BattleResponse)
 private:
  inline void set_has_stageid();
  inline void clear_has_stageid();
  inline void set_has_batch();
  inline void clear_has_batch();
  inline void set_has_field();
  inline void clear_has_field();
  inline void set_has_maxtime();
  inline void clear_has_maxtime();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 stageid_;
  ::google::protobuf::int32 batch_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::Hero > herolist_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::Monster > monsterlist_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::Trap > traplist_;
  ::protos::FieldEff* field_;
  ::google::protobuf::int32 maxtime_;
  ::google::protobuf::int32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BattleResponse* default_instance_;
};
// -------------------------------------------------------------------

class AmbushRequest : public ::google::protobuf::Message {
 public:
  AmbushRequest();
  virtual ~AmbushRequest();

  AmbushRequest(const AmbushRequest& from);

  inline AmbushRequest& operator=(const AmbushRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AmbushRequest& default_instance();

  void Swap(AmbushRequest* other);

  // implements Message ----------------------------------------------

  AmbushRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AmbushRequest& from);
  void MergeFrom(const AmbushRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 batch = 1;
  inline bool has_batch() const;
  inline void clear_batch();
  static const int kBatchFieldNumber = 1;
  inline ::google::protobuf::int32 batch() const;
  inline void set_batch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.AmbushRequest)
 private:
  inline void set_has_batch();
  inline void clear_has_batch();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 batch_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static AmbushRequest* default_instance_;
};
// -------------------------------------------------------------------

class BattleFinish : public ::google::protobuf::Message {
 public:
  BattleFinish();
  virtual ~BattleFinish();

  BattleFinish(const BattleFinish& from);

  inline BattleFinish& operator=(const BattleFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleFinish& default_instance();

  void Swap(BattleFinish* other);

  // implements Message ----------------------------------------------

  BattleFinish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleFinish& from);
  void MergeFrom(const BattleFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 reason = 1;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 1;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // optional bool ispass = 2;
  inline bool has_ispass() const;
  inline void clear_ispass();
  static const int kIspassFieldNumber = 2;
  inline bool ispass() const;
  inline void set_ispass(bool value);

  // optional int32 blood = 3;
  inline bool has_blood() const;
  inline void clear_blood();
  static const int kBloodFieldNumber = 3;
  inline ::google::protobuf::int32 blood() const;
  inline void set_blood(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.BattleFinish)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_ispass();
  inline void clear_has_ispass();
  inline void set_has_blood();
  inline void clear_has_blood();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 reason_;
  bool ispass_;
  ::google::protobuf::int32 blood_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BattleFinish* default_instance_;
};
// -------------------------------------------------------------------

class BattleFinishRep : public ::google::protobuf::Message {
 public:
  BattleFinishRep();
  virtual ~BattleFinishRep();

  BattleFinishRep(const BattleFinishRep& from);

  inline BattleFinishRep& operator=(const BattleFinishRep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleFinishRep& default_instance();

  void Swap(BattleFinishRep* other);

  // implements Message ----------------------------------------------

  BattleFinishRep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleFinishRep& from);
  void MergeFrom(const BattleFinishRep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool win = 1;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 1;
  inline bool win() const;
  inline void set_win(bool value);

  // optional int32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 coin = 3;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 3;
  inline ::google::protobuf::int32 coin() const;
  inline void set_coin(::google::protobuf::int32 value);

  // optional int32 fcoin = 5;
  inline bool has_fcoin() const;
  inline void clear_fcoin();
  static const int kFcoinFieldNumber = 5;
  inline ::google::protobuf::int32 fcoin() const;
  inline void set_fcoin(::google::protobuf::int32 value);

  // repeated .protos.common.Hero heroList = 4;
  inline int herolist_size() const;
  inline void clear_herolist();
  static const int kHeroListFieldNumber = 4;
  inline const ::protos::common::Hero& herolist(int index) const;
  inline ::protos::common::Hero* mutable_herolist(int index);
  inline ::protos::common::Hero* add_herolist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Hero >&
      herolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Hero >*
      mutable_herolist();

  // repeated .protos.common.Prize itemList = 6;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 6;
  inline const ::protos::common::Prize& itemlist(int index) const;
  inline ::protos::common::Prize* mutable_itemlist(int index);
  inline ::protos::common::Prize* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
      mutable_itemlist();

  // optional bool mobieShop = 7;
  inline bool has_mobieshop() const;
  inline void clear_mobieshop();
  static const int kMobieShopFieldNumber = 7;
  inline bool mobieshop() const;
  inline void set_mobieshop(bool value);

  // @@protoc_insertion_point(class_scope:protos.BattleFinishRep)
 private:
  inline void set_has_win();
  inline void clear_has_win();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_fcoin();
  inline void clear_has_fcoin();
  inline void set_has_mobieshop();
  inline void clear_has_mobieshop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 coin_;
  ::google::protobuf::int32 fcoin_;
  bool win_;
  bool mobieshop_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::Hero > herolist_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::Prize > itemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BattleFinishRep* default_instance_;
};
// -------------------------------------------------------------------

class StageContinueRes : public ::google::protobuf::Message {
 public:
  StageContinueRes();
  virtual ~StageContinueRes();

  StageContinueRes(const StageContinueRes& from);

  inline StageContinueRes& operator=(const StageContinueRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageContinueRes& default_instance();

  void Swap(StageContinueRes* other);

  // implements Message ----------------------------------------------

  StageContinueRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageContinueRes& from);
  void MergeFrom(const StageContinueRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.StageContinueRes)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StageContinueRes* default_instance_;
};
// -------------------------------------------------------------------

class GetPrizeReq : public ::google::protobuf::Message {
 public:
  GetPrizeReq();
  virtual ~GetPrizeReq();

  GetPrizeReq(const GetPrizeReq& from);

  inline GetPrizeReq& operator=(const GetPrizeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPrizeReq& default_instance();

  void Swap(GetPrizeReq* other);

  // implements Message ----------------------------------------------

  GetPrizeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPrizeReq& from);
  void MergeFrom(const GetPrizeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 prizeType = 1;
  inline bool has_prizetype() const;
  inline void clear_prizetype();
  static const int kPrizeTypeFieldNumber = 1;
  inline ::google::protobuf::int32 prizetype() const;
  inline void set_prizetype(::google::protobuf::int32 value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.GetPrizeReq)
 private:
  inline void set_has_prizetype();
  inline void clear_has_prizetype();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 prizetype_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetPrizeReq* default_instance_;
};
// -------------------------------------------------------------------

class GetPrizeRes : public ::google::protobuf::Message {
 public:
  GetPrizeRes();
  virtual ~GetPrizeRes();

  GetPrizeRes(const GetPrizeRes& from);

  inline GetPrizeRes& operator=(const GetPrizeRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPrizeRes& default_instance();

  void Swap(GetPrizeRes* other);

  // implements Message ----------------------------------------------

  GetPrizeRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPrizeRes& from);
  void MergeFrom(const GetPrizeRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);

  // repeated .protos.common.Prize prizes = 2;
  inline int prizes_size() const;
  inline void clear_prizes();
  static const int kPrizesFieldNumber = 2;
  inline const ::protos::common::Prize& prizes(int index) const;
  inline ::protos::common::Prize* mutable_prizes(int index);
  inline ::protos::common::Prize* add_prizes();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
      prizes() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
      mutable_prizes();

  // @@protoc_insertion_point(class_scope:protos.GetPrizeRes)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::common::Prize > prizes_;
  bool result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GetPrizeRes* default_instance_;
};
// -------------------------------------------------------------------

class Chapter : public ::google::protobuf::Message {
 public:
  Chapter();
  virtual ~Chapter();

  Chapter(const Chapter& from);

  inline Chapter& operator=(const Chapter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Chapter& default_instance();

  void Swap(Chapter* other);

  // implements Message ----------------------------------------------

  Chapter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Chapter& from);
  void MergeFrom(const Chapter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool isOpen = 3;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOpenFieldNumber = 3;
  inline bool isopen() const;
  inline void set_isopen(bool value);

  // optional int32 star = 4;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 4;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 totalStar = 5;
  inline bool has_totalstar() const;
  inline void clear_totalstar();
  static const int kTotalStarFieldNumber = 5;
  inline ::google::protobuf::int32 totalstar() const;
  inline void set_totalstar(::google::protobuf::int32 value);

  // optional int32 prize = 6;
  inline bool has_prize() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 6;
  inline ::google::protobuf::int32 prize() const;
  inline void set_prize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.Chapter)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_isopen();
  inline void clear_has_isopen();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_totalstar();
  inline void clear_has_totalstar();
  inline void set_has_prize();
  inline void clear_has_prize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;
  bool isopen_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 totalstar_;
  ::google::protobuf::int32 prize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Chapter* default_instance_;
};
// -------------------------------------------------------------------

class StageInfo : public ::google::protobuf::Message {
 public:
  StageInfo();
  virtual ~StageInfo();

  StageInfo(const StageInfo& from);

  inline StageInfo& operator=(const StageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StageInfo& default_instance();

  void Swap(StageInfo* other);

  // implements Message ----------------------------------------------

  StageInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StageInfo& from);
  void MergeFrom(const StageInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 inLevel = 3;
  inline bool has_inlevel() const;
  inline void clear_inlevel();
  static const int kInLevelFieldNumber = 3;
  inline ::google::protobuf::int32 inlevel() const;
  inline void set_inlevel(::google::protobuf::int32 value);

  // optional bool isOpen = 4;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOpenFieldNumber = 4;
  inline bool isopen() const;
  inline void set_isopen(bool value);

  // optional int32 star = 5;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 5;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 action = 6;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 6;
  inline ::google::protobuf::int32 action() const;
  inline void set_action(::google::protobuf::int32 value);

  // optional bool isMain = 7;
  inline bool has_ismain() const;
  inline void clear_ismain();
  static const int kIsMainFieldNumber = 7;
  inline bool ismain() const;
  inline void set_ismain(bool value);

  // optional int32 prize = 8;
  inline bool has_prize() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 8;
  inline ::google::protobuf::int32 prize() const;
  inline void set_prize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.StageInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_inlevel();
  inline void clear_has_inlevel();
  inline void set_has_isopen();
  inline void clear_has_isopen();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_ismain();
  inline void clear_has_ismain();
  inline void set_has_prize();
  inline void clear_has_prize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 inlevel_;
  ::google::protobuf::int32 star_;
  bool isopen_;
  bool ismain_;
  ::google::protobuf::int32 action_;
  ::google::protobuf::int32 prize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static StageInfo* default_instance_;
};
// -------------------------------------------------------------------

class FieldEff : public ::google::protobuf::Message {
 public:
  FieldEff();
  virtual ~FieldEff();

  FieldEff(const FieldEff& from);

  inline FieldEff& operator=(const FieldEff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldEff& default_instance();

  void Swap(FieldEff* other);

  // implements Message ----------------------------------------------

  FieldEff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FieldEff& from);
  void MergeFrom(const FieldEff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 interval = 4;
  inline bool has_interval() const;
  inline void clear_interval();
  static const int kIntervalFieldNumber = 4;
  inline ::google::protobuf::int32 interval() const;
  inline void set_interval(::google::protobuf::int32 value);

  // required int32 limit = 5;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 5;
  inline ::google::protobuf::int32 limit() const;
  inline void set_limit(::google::protobuf::int32 value);

  // optional int32 param1 = 6;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 6;
  inline ::google::protobuf::int32 param1() const;
  inline void set_param1(::google::protobuf::int32 value);

  // optional int32 param2 = 7;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 7;
  inline ::google::protobuf::int32 param2() const;
  inline void set_param2(::google::protobuf::int32 value);

  // optional .protos.common.Monster monster = 8;
  inline bool has_monster() const;
  inline void clear_monster();
  static const int kMonsterFieldNumber = 8;
  inline const ::protos::common::Monster& monster() const;
  inline ::protos::common::Monster* mutable_monster();
  inline ::protos::common::Monster* release_monster();
  inline void set_allocated_monster(::protos::common::Monster* monster);

  // optional int32 batch = 9;
  inline bool has_batch() const;
  inline void clear_batch();
  static const int kBatchFieldNumber = 9;
  inline ::google::protobuf::int32 batch() const;
  inline void set_batch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.FieldEff)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_interval();
  inline void clear_has_interval();
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_monster();
  inline void clear_has_monster();
  inline void set_has_batch();
  inline void clear_has_batch();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::std::string* name_;
  ::google::protobuf::int32 interval_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param2_;
  ::protos::common::Monster* monster_;
  ::google::protobuf::int32 batch_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_stage_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_stage_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_stage_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static FieldEff* default_instance_;
};
// ===================================================================


// ===================================================================

// StageInfoReq

// required int32 stageId = 1;
inline bool StageInfoReq::has_stageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageInfoReq::set_has_stageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageInfoReq::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageInfoReq::clear_stageid() {
  stageid_ = 0;
  clear_has_stageid();
}
inline ::google::protobuf::int32 StageInfoReq::stageid() const {
  return stageid_;
}
inline void StageInfoReq::set_stageid(::google::protobuf::int32 value) {
  set_has_stageid();
  stageid_ = value;
}

// -------------------------------------------------------------------

// StageInfoRes

// optional int32 action = 1;
inline bool StageInfoRes::has_action() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageInfoRes::set_has_action() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageInfoRes::clear_has_action() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageInfoRes::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::google::protobuf::int32 StageInfoRes::action() const {
  return action_;
}
inline void StageInfoRes::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
}

// repeated .protos.common.Monster monsterList = 2;
inline int StageInfoRes::monsterlist_size() const {
  return monsterlist_.size();
}
inline void StageInfoRes::clear_monsterlist() {
  monsterlist_.Clear();
}
inline const ::protos::common::Monster& StageInfoRes::monsterlist(int index) const {
  return monsterlist_.Get(index);
}
inline ::protos::common::Monster* StageInfoRes::mutable_monsterlist(int index) {
  return monsterlist_.Mutable(index);
}
inline ::protos::common::Monster* StageInfoRes::add_monsterlist() {
  return monsterlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Monster >&
StageInfoRes::monsterlist() const {
  return monsterlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Monster >*
StageInfoRes::mutable_monsterlist() {
  return &monsterlist_;
}

// repeated .protos.common.Prize itemList = 3;
inline int StageInfoRes::itemlist_size() const {
  return itemlist_.size();
}
inline void StageInfoRes::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::protos::common::Prize& StageInfoRes::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::protos::common::Prize* StageInfoRes::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::protos::common::Prize* StageInfoRes::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
StageInfoRes::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
StageInfoRes::mutable_itemlist() {
  return &itemlist_;
}

// -------------------------------------------------------------------

// ChapterRequest

// required int32 type = 1;
inline bool ChapterRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChapterRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChapterRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChapterRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ChapterRequest::type() const {
  return type_;
}
inline void ChapterRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 chapter = 2;
inline bool ChapterRequest::has_chapter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChapterRequest::set_has_chapter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChapterRequest::clear_has_chapter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChapterRequest::clear_chapter() {
  chapter_ = 0;
  clear_has_chapter();
}
inline ::google::protobuf::int32 ChapterRequest::chapter() const {
  return chapter_;
}
inline void ChapterRequest::set_chapter(::google::protobuf::int32 value) {
  set_has_chapter();
  chapter_ = value;
}

// -------------------------------------------------------------------

// ChapterResponse

// repeated .protos.Chapter chapterList = 1;
inline int ChapterResponse::chapterlist_size() const {
  return chapterlist_.size();
}
inline void ChapterResponse::clear_chapterlist() {
  chapterlist_.Clear();
}
inline const ::protos::Chapter& ChapterResponse::chapterlist(int index) const {
  return chapterlist_.Get(index);
}
inline ::protos::Chapter* ChapterResponse::mutable_chapterlist(int index) {
  return chapterlist_.Mutable(index);
}
inline ::protos::Chapter* ChapterResponse::add_chapterlist() {
  return chapterlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::Chapter >&
ChapterResponse::chapterlist() const {
  return chapterlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::Chapter >*
ChapterResponse::mutable_chapterlist() {
  return &chapterlist_;
}

// optional int32 nowChapter = 2;
inline bool ChapterResponse::has_nowchapter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChapterResponse::set_has_nowchapter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChapterResponse::clear_has_nowchapter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChapterResponse::clear_nowchapter() {
  nowchapter_ = 0;
  clear_has_nowchapter();
}
inline ::google::protobuf::int32 ChapterResponse::nowchapter() const {
  return nowchapter_;
}
inline void ChapterResponse::set_nowchapter(::google::protobuf::int32 value) {
  set_has_nowchapter();
  nowchapter_ = value;
}

// repeated .protos.StageInfo stageList = 3;
inline int ChapterResponse::stagelist_size() const {
  return stagelist_.size();
}
inline void ChapterResponse::clear_stagelist() {
  stagelist_.Clear();
}
inline const ::protos::StageInfo& ChapterResponse::stagelist(int index) const {
  return stagelist_.Get(index);
}
inline ::protos::StageInfo* ChapterResponse::mutable_stagelist(int index) {
  return stagelist_.Mutable(index);
}
inline ::protos::StageInfo* ChapterResponse::add_stagelist() {
  return stagelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::StageInfo >&
ChapterResponse::stagelist() const {
  return stagelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::StageInfo >*
ChapterResponse::mutable_stagelist() {
  return &stagelist_;
}

// -------------------------------------------------------------------

// StageListRequest

// required int32 chapter = 1;
inline bool StageListRequest::has_chapter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageListRequest::set_has_chapter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageListRequest::clear_has_chapter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageListRequest::clear_chapter() {
  chapter_ = 0;
  clear_has_chapter();
}
inline ::google::protobuf::int32 StageListRequest::chapter() const {
  return chapter_;
}
inline void StageListRequest::set_chapter(::google::protobuf::int32 value) {
  set_has_chapter();
  chapter_ = value;
}

// -------------------------------------------------------------------

// StageListResponse

// repeated .protos.StageInfo stageList = 1;
inline int StageListResponse::stagelist_size() const {
  return stagelist_.size();
}
inline void StageListResponse::clear_stagelist() {
  stagelist_.Clear();
}
inline const ::protos::StageInfo& StageListResponse::stagelist(int index) const {
  return stagelist_.Get(index);
}
inline ::protos::StageInfo* StageListResponse::mutable_stagelist(int index) {
  return stagelist_.Mutable(index);
}
inline ::protos::StageInfo* StageListResponse::add_stagelist() {
  return stagelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::StageInfo >&
StageListResponse::stagelist() const {
  return stagelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::StageInfo >*
StageListResponse::mutable_stagelist() {
  return &stagelist_;
}

// -------------------------------------------------------------------

// BattleRequest

// optional int32 stageId = 1;
inline bool BattleRequest::has_stageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleRequest::set_has_stageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleRequest::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleRequest::clear_stageid() {
  stageid_ = 0;
  clear_has_stageid();
}
inline ::google::protobuf::int32 BattleRequest::stageid() const {
  return stageid_;
}
inline void BattleRequest::set_stageid(::google::protobuf::int32 value) {
  set_has_stageid();
  stageid_ = value;
}

// optional int32 hero1 = 2;
inline bool BattleRequest::has_hero1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleRequest::set_has_hero1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleRequest::clear_has_hero1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleRequest::clear_hero1() {
  hero1_ = 0;
  clear_has_hero1();
}
inline ::google::protobuf::int32 BattleRequest::hero1() const {
  return hero1_;
}
inline void BattleRequest::set_hero1(::google::protobuf::int32 value) {
  set_has_hero1();
  hero1_ = value;
}

// optional int32 hero2 = 3;
inline bool BattleRequest::has_hero2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleRequest::set_has_hero2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleRequest::clear_has_hero2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleRequest::clear_hero2() {
  hero2_ = 0;
  clear_has_hero2();
}
inline ::google::protobuf::int32 BattleRequest::hero2() const {
  return hero2_;
}
inline void BattleRequest::set_hero2(::google::protobuf::int32 value) {
  set_has_hero2();
  hero2_ = value;
}

// optional int32 hero3 = 4;
inline bool BattleRequest::has_hero3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleRequest::set_has_hero3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleRequest::clear_has_hero3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleRequest::clear_hero3() {
  hero3_ = 0;
  clear_has_hero3();
}
inline ::google::protobuf::int32 BattleRequest::hero3() const {
  return hero3_;
}
inline void BattleRequest::set_hero3(::google::protobuf::int32 value) {
  set_has_hero3();
  hero3_ = value;
}

// optional int32 hero4 = 5;
inline bool BattleRequest::has_hero4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleRequest::set_has_hero4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleRequest::clear_has_hero4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleRequest::clear_hero4() {
  hero4_ = 0;
  clear_has_hero4();
}
inline ::google::protobuf::int32 BattleRequest::hero4() const {
  return hero4_;
}
inline void BattleRequest::set_hero4(::google::protobuf::int32 value) {
  set_has_hero4();
  hero4_ = value;
}

// optional int32 hero5 = 6;
inline bool BattleRequest::has_hero5() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BattleRequest::set_has_hero5() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BattleRequest::clear_has_hero5() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BattleRequest::clear_hero5() {
  hero5_ = 0;
  clear_has_hero5();
}
inline ::google::protobuf::int32 BattleRequest::hero5() const {
  return hero5_;
}
inline void BattleRequest::set_hero5(::google::protobuf::int32 value) {
  set_has_hero5();
  hero5_ = value;
}

// optional int32 fid = 7;
inline bool BattleRequest::has_fid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattleRequest::set_has_fid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattleRequest::clear_has_fid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattleRequest::clear_fid() {
  fid_ = 0;
  clear_has_fid();
}
inline ::google::protobuf::int32 BattleRequest::fid() const {
  return fid_;
}
inline void BattleRequest::set_fid(::google::protobuf::int32 value) {
  set_has_fid();
  fid_ = value;
}

// -------------------------------------------------------------------

// BattleResponse

// required int32 stageId = 1;
inline bool BattleResponse::has_stageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleResponse::set_has_stageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleResponse::clear_has_stageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleResponse::clear_stageid() {
  stageid_ = 0;
  clear_has_stageid();
}
inline ::google::protobuf::int32 BattleResponse::stageid() const {
  return stageid_;
}
inline void BattleResponse::set_stageid(::google::protobuf::int32 value) {
  set_has_stageid();
  stageid_ = value;
}

// required int32 batch = 2;
inline bool BattleResponse::has_batch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleResponse::set_has_batch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleResponse::clear_has_batch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleResponse::clear_batch() {
  batch_ = 0;
  clear_has_batch();
}
inline ::google::protobuf::int32 BattleResponse::batch() const {
  return batch_;
}
inline void BattleResponse::set_batch(::google::protobuf::int32 value) {
  set_has_batch();
  batch_ = value;
}

// repeated .protos.common.Hero heroList = 3;
inline int BattleResponse::herolist_size() const {
  return herolist_.size();
}
inline void BattleResponse::clear_herolist() {
  herolist_.Clear();
}
inline const ::protos::common::Hero& BattleResponse::herolist(int index) const {
  return herolist_.Get(index);
}
inline ::protos::common::Hero* BattleResponse::mutable_herolist(int index) {
  return herolist_.Mutable(index);
}
inline ::protos::common::Hero* BattleResponse::add_herolist() {
  return herolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Hero >&
BattleResponse::herolist() const {
  return herolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Hero >*
BattleResponse::mutable_herolist() {
  return &herolist_;
}

// repeated .protos.common.Monster monsterList = 4;
inline int BattleResponse::monsterlist_size() const {
  return monsterlist_.size();
}
inline void BattleResponse::clear_monsterlist() {
  monsterlist_.Clear();
}
inline const ::protos::common::Monster& BattleResponse::monsterlist(int index) const {
  return monsterlist_.Get(index);
}
inline ::protos::common::Monster* BattleResponse::mutable_monsterlist(int index) {
  return monsterlist_.Mutable(index);
}
inline ::protos::common::Monster* BattleResponse::add_monsterlist() {
  return monsterlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Monster >&
BattleResponse::monsterlist() const {
  return monsterlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Monster >*
BattleResponse::mutable_monsterlist() {
  return &monsterlist_;
}

// repeated .protos.common.Trap trapList = 5;
inline int BattleResponse::traplist_size() const {
  return traplist_.size();
}
inline void BattleResponse::clear_traplist() {
  traplist_.Clear();
}
inline const ::protos::common::Trap& BattleResponse::traplist(int index) const {
  return traplist_.Get(index);
}
inline ::protos::common::Trap* BattleResponse::mutable_traplist(int index) {
  return traplist_.Mutable(index);
}
inline ::protos::common::Trap* BattleResponse::add_traplist() {
  return traplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Trap >&
BattleResponse::traplist() const {
  return traplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Trap >*
BattleResponse::mutable_traplist() {
  return &traplist_;
}

// optional .protos.FieldEff field = 10;
inline bool BattleResponse::has_field() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BattleResponse::set_has_field() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BattleResponse::clear_has_field() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BattleResponse::clear_field() {
  if (field_ != NULL) field_->::protos::FieldEff::Clear();
  clear_has_field();
}
inline const ::protos::FieldEff& BattleResponse::field() const {
  return field_ != NULL ? *field_ : *default_instance_->field_;
}
inline ::protos::FieldEff* BattleResponse::mutable_field() {
  set_has_field();
  if (field_ == NULL) field_ = new ::protos::FieldEff;
  return field_;
}
inline ::protos::FieldEff* BattleResponse::release_field() {
  clear_has_field();
  ::protos::FieldEff* temp = field_;
  field_ = NULL;
  return temp;
}
inline void BattleResponse::set_allocated_field(::protos::FieldEff* field) {
  delete field_;
  field_ = field;
  if (field) {
    set_has_field();
  } else {
    clear_has_field();
  }
}

// optional int32 maxTime = 11;
inline bool BattleResponse::has_maxtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattleResponse::set_has_maxtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattleResponse::clear_has_maxtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattleResponse::clear_maxtime() {
  maxtime_ = 0;
  clear_has_maxtime();
}
inline ::google::protobuf::int32 BattleResponse::maxtime() const {
  return maxtime_;
}
inline void BattleResponse::set_maxtime(::google::protobuf::int32 value) {
  set_has_maxtime();
  maxtime_ = value;
}

// optional int32 param = 12;
inline bool BattleResponse::has_param() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BattleResponse::set_has_param() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BattleResponse::clear_has_param() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BattleResponse::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 BattleResponse::param() const {
  return param_;
}
inline void BattleResponse::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// AmbushRequest

// required int32 batch = 1;
inline bool AmbushRequest::has_batch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AmbushRequest::set_has_batch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AmbushRequest::clear_has_batch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AmbushRequest::clear_batch() {
  batch_ = 0;
  clear_has_batch();
}
inline ::google::protobuf::int32 AmbushRequest::batch() const {
  return batch_;
}
inline void AmbushRequest::set_batch(::google::protobuf::int32 value) {
  set_has_batch();
  batch_ = value;
}

// -------------------------------------------------------------------

// BattleFinish

// required int32 reason = 1;
inline bool BattleFinish::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleFinish::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleFinish::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleFinish::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 BattleFinish::reason() const {
  return reason_;
}
inline void BattleFinish::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
}

// optional bool ispass = 2;
inline bool BattleFinish::has_ispass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleFinish::set_has_ispass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleFinish::clear_has_ispass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleFinish::clear_ispass() {
  ispass_ = false;
  clear_has_ispass();
}
inline bool BattleFinish::ispass() const {
  return ispass_;
}
inline void BattleFinish::set_ispass(bool value) {
  set_has_ispass();
  ispass_ = value;
}

// optional int32 blood = 3;
inline bool BattleFinish::has_blood() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleFinish::set_has_blood() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleFinish::clear_has_blood() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleFinish::clear_blood() {
  blood_ = 0;
  clear_has_blood();
}
inline ::google::protobuf::int32 BattleFinish::blood() const {
  return blood_;
}
inline void BattleFinish::set_blood(::google::protobuf::int32 value) {
  set_has_blood();
  blood_ = value;
}

// -------------------------------------------------------------------

// BattleFinishRep

// required bool win = 1;
inline bool BattleFinishRep::has_win() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleFinishRep::set_has_win() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleFinishRep::clear_has_win() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleFinishRep::clear_win() {
  win_ = false;
  clear_has_win();
}
inline bool BattleFinishRep::win() const {
  return win_;
}
inline void BattleFinishRep::set_win(bool value) {
  set_has_win();
  win_ = value;
}

// optional int32 star = 2;
inline bool BattleFinishRep::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleFinishRep::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleFinishRep::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleFinishRep::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 BattleFinishRep::star() const {
  return star_;
}
inline void BattleFinishRep::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 coin = 3;
inline bool BattleFinishRep::has_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleFinishRep::set_has_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleFinishRep::clear_has_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleFinishRep::clear_coin() {
  coin_ = 0;
  clear_has_coin();
}
inline ::google::protobuf::int32 BattleFinishRep::coin() const {
  return coin_;
}
inline void BattleFinishRep::set_coin(::google::protobuf::int32 value) {
  set_has_coin();
  coin_ = value;
}

// optional int32 fcoin = 5;
inline bool BattleFinishRep::has_fcoin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleFinishRep::set_has_fcoin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleFinishRep::clear_has_fcoin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleFinishRep::clear_fcoin() {
  fcoin_ = 0;
  clear_has_fcoin();
}
inline ::google::protobuf::int32 BattleFinishRep::fcoin() const {
  return fcoin_;
}
inline void BattleFinishRep::set_fcoin(::google::protobuf::int32 value) {
  set_has_fcoin();
  fcoin_ = value;
}

// repeated .protos.common.Hero heroList = 4;
inline int BattleFinishRep::herolist_size() const {
  return herolist_.size();
}
inline void BattleFinishRep::clear_herolist() {
  herolist_.Clear();
}
inline const ::protos::common::Hero& BattleFinishRep::herolist(int index) const {
  return herolist_.Get(index);
}
inline ::protos::common::Hero* BattleFinishRep::mutable_herolist(int index) {
  return herolist_.Mutable(index);
}
inline ::protos::common::Hero* BattleFinishRep::add_herolist() {
  return herolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Hero >&
BattleFinishRep::herolist() const {
  return herolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Hero >*
BattleFinishRep::mutable_herolist() {
  return &herolist_;
}

// repeated .protos.common.Prize itemList = 6;
inline int BattleFinishRep::itemlist_size() const {
  return itemlist_.size();
}
inline void BattleFinishRep::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::protos::common::Prize& BattleFinishRep::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::protos::common::Prize* BattleFinishRep::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::protos::common::Prize* BattleFinishRep::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
BattleFinishRep::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
BattleFinishRep::mutable_itemlist() {
  return &itemlist_;
}

// optional bool mobieShop = 7;
inline bool BattleFinishRep::has_mobieshop() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BattleFinishRep::set_has_mobieshop() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BattleFinishRep::clear_has_mobieshop() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BattleFinishRep::clear_mobieshop() {
  mobieshop_ = false;
  clear_has_mobieshop();
}
inline bool BattleFinishRep::mobieshop() const {
  return mobieshop_;
}
inline void BattleFinishRep::set_mobieshop(bool value) {
  set_has_mobieshop();
  mobieshop_ = value;
}

// -------------------------------------------------------------------

// StageContinueRes

// required int32 result = 1;
inline bool StageContinueRes::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageContinueRes::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageContinueRes::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageContinueRes::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 StageContinueRes::result() const {
  return result_;
}
inline void StageContinueRes::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// GetPrizeReq

// required int32 prizeType = 1;
inline bool GetPrizeReq::has_prizetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPrizeReq::set_has_prizetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPrizeReq::clear_has_prizetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPrizeReq::clear_prizetype() {
  prizetype_ = 0;
  clear_has_prizetype();
}
inline ::google::protobuf::int32 GetPrizeReq::prizetype() const {
  return prizetype_;
}
inline void GetPrizeReq::set_prizetype(::google::protobuf::int32 value) {
  set_has_prizetype();
  prizetype_ = value;
}

// required int32 id = 2;
inline bool GetPrizeReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetPrizeReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetPrizeReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetPrizeReq::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GetPrizeReq::id() const {
  return id_;
}
inline void GetPrizeReq::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// GetPrizeRes

// required bool result = 1;
inline bool GetPrizeRes::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPrizeRes::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPrizeRes::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPrizeRes::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool GetPrizeRes::result() const {
  return result_;
}
inline void GetPrizeRes::set_result(bool value) {
  set_has_result();
  result_ = value;
}

// repeated .protos.common.Prize prizes = 2;
inline int GetPrizeRes::prizes_size() const {
  return prizes_.size();
}
inline void GetPrizeRes::clear_prizes() {
  prizes_.Clear();
}
inline const ::protos::common::Prize& GetPrizeRes::prizes(int index) const {
  return prizes_.Get(index);
}
inline ::protos::common::Prize* GetPrizeRes::mutable_prizes(int index) {
  return prizes_.Mutable(index);
}
inline ::protos::common::Prize* GetPrizeRes::add_prizes() {
  return prizes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
GetPrizeRes::prizes() const {
  return prizes_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
GetPrizeRes::mutable_prizes() {
  return &prizes_;
}

// -------------------------------------------------------------------

// Chapter

// required int32 id = 1;
inline bool Chapter::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Chapter::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Chapter::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Chapter::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Chapter::id() const {
  return id_;
}
inline void Chapter::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool Chapter::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Chapter::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Chapter::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Chapter::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Chapter::name() const {
  return *name_;
}
inline void Chapter::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Chapter::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Chapter::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Chapter::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Chapter::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Chapter::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool isOpen = 3;
inline bool Chapter::has_isopen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Chapter::set_has_isopen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Chapter::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Chapter::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool Chapter::isopen() const {
  return isopen_;
}
inline void Chapter::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// optional int32 star = 4;
inline bool Chapter::has_star() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Chapter::set_has_star() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Chapter::clear_has_star() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Chapter::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 Chapter::star() const {
  return star_;
}
inline void Chapter::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 totalStar = 5;
inline bool Chapter::has_totalstar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Chapter::set_has_totalstar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Chapter::clear_has_totalstar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Chapter::clear_totalstar() {
  totalstar_ = 0;
  clear_has_totalstar();
}
inline ::google::protobuf::int32 Chapter::totalstar() const {
  return totalstar_;
}
inline void Chapter::set_totalstar(::google::protobuf::int32 value) {
  set_has_totalstar();
  totalstar_ = value;
}

// optional int32 prize = 6;
inline bool Chapter::has_prize() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Chapter::set_has_prize() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Chapter::clear_has_prize() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Chapter::clear_prize() {
  prize_ = 0;
  clear_has_prize();
}
inline ::google::protobuf::int32 Chapter::prize() const {
  return prize_;
}
inline void Chapter::set_prize(::google::protobuf::int32 value) {
  set_has_prize();
  prize_ = value;
}

// -------------------------------------------------------------------

// StageInfo

// required int32 id = 1;
inline bool StageInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StageInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StageInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StageInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 StageInfo::id() const {
  return id_;
}
inline void StageInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool StageInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StageInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StageInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StageInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& StageInfo::name() const {
  return *name_;
}
inline void StageInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void StageInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void StageInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StageInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* StageInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StageInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 inLevel = 3;
inline bool StageInfo::has_inlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StageInfo::set_has_inlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StageInfo::clear_has_inlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StageInfo::clear_inlevel() {
  inlevel_ = 0;
  clear_has_inlevel();
}
inline ::google::protobuf::int32 StageInfo::inlevel() const {
  return inlevel_;
}
inline void StageInfo::set_inlevel(::google::protobuf::int32 value) {
  set_has_inlevel();
  inlevel_ = value;
}

// optional bool isOpen = 4;
inline bool StageInfo::has_isopen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StageInfo::set_has_isopen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StageInfo::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StageInfo::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool StageInfo::isopen() const {
  return isopen_;
}
inline void StageInfo::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// optional int32 star = 5;
inline bool StageInfo::has_star() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StageInfo::set_has_star() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StageInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StageInfo::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 StageInfo::star() const {
  return star_;
}
inline void StageInfo::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 action = 6;
inline bool StageInfo::has_action() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StageInfo::set_has_action() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StageInfo::clear_has_action() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StageInfo::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::google::protobuf::int32 StageInfo::action() const {
  return action_;
}
inline void StageInfo::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
}

// optional bool isMain = 7;
inline bool StageInfo::has_ismain() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StageInfo::set_has_ismain() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StageInfo::clear_has_ismain() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StageInfo::clear_ismain() {
  ismain_ = false;
  clear_has_ismain();
}
inline bool StageInfo::ismain() const {
  return ismain_;
}
inline void StageInfo::set_ismain(bool value) {
  set_has_ismain();
  ismain_ = value;
}

// optional int32 prize = 8;
inline bool StageInfo::has_prize() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StageInfo::set_has_prize() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StageInfo::clear_has_prize() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StageInfo::clear_prize() {
  prize_ = 0;
  clear_has_prize();
}
inline ::google::protobuf::int32 StageInfo::prize() const {
  return prize_;
}
inline void StageInfo::set_prize(::google::protobuf::int32 value) {
  set_has_prize();
  prize_ = value;
}

// -------------------------------------------------------------------

// FieldEff

// required int32 id = 1;
inline bool FieldEff::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FieldEff::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FieldEff::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FieldEff::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 FieldEff::id() const {
  return id_;
}
inline void FieldEff::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 type = 2;
inline bool FieldEff::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FieldEff::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FieldEff::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FieldEff::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 FieldEff::type() const {
  return type_;
}
inline void FieldEff::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string name = 3;
inline bool FieldEff::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FieldEff::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FieldEff::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FieldEff::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FieldEff::name() const {
  return *name_;
}
inline void FieldEff::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FieldEff::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FieldEff::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FieldEff::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* FieldEff::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FieldEff::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 interval = 4;
inline bool FieldEff::has_interval() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FieldEff::set_has_interval() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FieldEff::clear_has_interval() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FieldEff::clear_interval() {
  interval_ = 0;
  clear_has_interval();
}
inline ::google::protobuf::int32 FieldEff::interval() const {
  return interval_;
}
inline void FieldEff::set_interval(::google::protobuf::int32 value) {
  set_has_interval();
  interval_ = value;
}

// required int32 limit = 5;
inline bool FieldEff::has_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FieldEff::set_has_limit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FieldEff::clear_has_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FieldEff::clear_limit() {
  limit_ = 0;
  clear_has_limit();
}
inline ::google::protobuf::int32 FieldEff::limit() const {
  return limit_;
}
inline void FieldEff::set_limit(::google::protobuf::int32 value) {
  set_has_limit();
  limit_ = value;
}

// optional int32 param1 = 6;
inline bool FieldEff::has_param1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FieldEff::set_has_param1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FieldEff::clear_has_param1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FieldEff::clear_param1() {
  param1_ = 0;
  clear_has_param1();
}
inline ::google::protobuf::int32 FieldEff::param1() const {
  return param1_;
}
inline void FieldEff::set_param1(::google::protobuf::int32 value) {
  set_has_param1();
  param1_ = value;
}

// optional int32 param2 = 7;
inline bool FieldEff::has_param2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FieldEff::set_has_param2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FieldEff::clear_has_param2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FieldEff::clear_param2() {
  param2_ = 0;
  clear_has_param2();
}
inline ::google::protobuf::int32 FieldEff::param2() const {
  return param2_;
}
inline void FieldEff::set_param2(::google::protobuf::int32 value) {
  set_has_param2();
  param2_ = value;
}

// optional .protos.common.Monster monster = 8;
inline bool FieldEff::has_monster() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FieldEff::set_has_monster() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FieldEff::clear_has_monster() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FieldEff::clear_monster() {
  if (monster_ != NULL) monster_->::protos::common::Monster::Clear();
  clear_has_monster();
}
inline const ::protos::common::Monster& FieldEff::monster() const {
  return monster_ != NULL ? *monster_ : *default_instance_->monster_;
}
inline ::protos::common::Monster* FieldEff::mutable_monster() {
  set_has_monster();
  if (monster_ == NULL) monster_ = new ::protos::common::Monster;
  return monster_;
}
inline ::protos::common::Monster* FieldEff::release_monster() {
  clear_has_monster();
  ::protos::common::Monster* temp = monster_;
  monster_ = NULL;
  return temp;
}
inline void FieldEff::set_allocated_monster(::protos::common::Monster* monster) {
  delete monster_;
  monster_ = monster;
  if (monster) {
    set_has_monster();
  } else {
    clear_has_monster();
  }
}

// optional int32 batch = 9;
inline bool FieldEff::has_batch() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FieldEff::set_has_batch() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FieldEff::clear_has_batch() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FieldEff::clear_batch() {
  batch_ = 0;
  clear_has_batch();
}
inline ::google::protobuf::int32 FieldEff::batch() const {
  return batch_;
}
inline void FieldEff::set_batch(::google::protobuf::int32 value) {
  set_has_batch();
  batch_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_stage_5fprotocol_2eproto__INCLUDED
