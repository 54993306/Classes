// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: exchange_protocol.proto

#ifndef PROTOBUF_exchange_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_exchange_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_exchange_5fprotocol_2eproto();
void protobuf_AssignDesc_exchange_5fprotocol_2eproto();
void protobuf_ShutdownFile_exchange_5fprotocol_2eproto();

class ExchangeInfoReq;
class ExchangeInfoRes;
class ExchangeReq;
class ExchangeRes;
class ExRes;

// ===================================================================

class ExchangeInfoReq : public ::google::protobuf::Message {
 public:
  ExchangeInfoReq();
  virtual ~ExchangeInfoReq();

  ExchangeInfoReq(const ExchangeInfoReq& from);

  inline ExchangeInfoReq& operator=(const ExchangeInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeInfoReq& default_instance();

  void Swap(ExchangeInfoReq* other);

  // implements Message ----------------------------------------------

  ExchangeInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeInfoReq& from);
  void MergeFrom(const ExchangeInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.ExchangeInfoReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_exchange_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_exchange_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ExchangeInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeInfoRes : public ::google::protobuf::Message {
 public:
  ExchangeInfoRes();
  virtual ~ExchangeInfoRes();

  ExchangeInfoRes(const ExchangeInfoRes& from);

  inline ExchangeInfoRes& operator=(const ExchangeInfoRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeInfoRes& default_instance();

  void Swap(ExchangeInfoRes* other);

  // implements Message ----------------------------------------------

  ExchangeInfoRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeInfoRes& from);
  void MergeFrom(const ExchangeInfoRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 gold = 1;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 1;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 exchange = 2;
  inline bool has_exchange() const;
  inline void clear_exchange();
  static const int kExchangeFieldNumber = 2;
  inline ::google::protobuf::int32 exchange() const;
  inline void set_exchange(::google::protobuf::int32 value);

  // optional int32 exTime = 3;
  inline bool has_extime() const;
  inline void clear_extime();
  static const int kExTimeFieldNumber = 3;
  inline ::google::protobuf::int32 extime() const;
  inline void set_extime(::google::protobuf::int32 value);

  // optional int32 maxTime = 4;
  inline bool has_maxtime() const;
  inline void clear_maxtime();
  static const int kMaxTimeFieldNumber = 4;
  inline ::google::protobuf::int32 maxtime() const;
  inline void set_maxtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.ExchangeInfoRes)
 private:
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_exchange();
  inline void clear_has_exchange();
  inline void set_has_extime();
  inline void clear_has_extime();
  inline void set_has_maxtime();
  inline void clear_has_maxtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 exchange_;
  ::google::protobuf::int32 extime_;
  ::google::protobuf::int32 maxtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_exchange_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_exchange_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ExchangeInfoRes* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeReq : public ::google::protobuf::Message {
 public:
  ExchangeReq();
  virtual ~ExchangeReq();

  ExchangeReq(const ExchangeReq& from);

  inline ExchangeReq& operator=(const ExchangeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeReq& default_instance();

  void Swap(ExchangeReq* other);

  // implements Message ----------------------------------------------

  ExchangeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeReq& from);
  void MergeFrom(const ExchangeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 way = 2;
  inline bool has_way() const;
  inline void clear_way();
  static const int kWayFieldNumber = 2;
  inline ::google::protobuf::int32 way() const;
  inline void set_way(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.ExchangeReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_way();
  inline void clear_has_way();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 way_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_exchange_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_exchange_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ExchangeReq* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeRes : public ::google::protobuf::Message {
 public:
  ExchangeRes();
  virtual ~ExchangeRes();

  ExchangeRes(const ExchangeRes& from);

  inline ExchangeRes& operator=(const ExchangeRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeRes& default_instance();

  void Swap(ExchangeRes* other);

  // implements Message ----------------------------------------------

  ExchangeRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeRes& from);
  void MergeFrom(const ExchangeRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 exchange = 5;
  inline bool has_exchange() const;
  inline void clear_exchange();
  static const int kExchangeFieldNumber = 5;
  inline ::google::protobuf::int32 exchange() const;
  inline void set_exchange(::google::protobuf::int32 value);

  // optional int32 exTime = 3;
  inline bool has_extime() const;
  inline void clear_extime();
  static const int kExTimeFieldNumber = 3;
  inline ::google::protobuf::int32 extime() const;
  inline void set_extime(::google::protobuf::int32 value);

  // repeated .protos.ExRes result = 4;
  inline int result_size() const;
  inline void clear_result();
  static const int kResultFieldNumber = 4;
  inline const ::protos::ExRes& result(int index) const;
  inline ::protos::ExRes* mutable_result(int index);
  inline ::protos::ExRes* add_result();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::ExRes >&
      result() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::ExRes >*
      mutable_result();

  // @@protoc_insertion_point(class_scope:protos.ExchangeRes)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_exchange();
  inline void clear_has_exchange();
  inline void set_has_extime();
  inline void clear_has_extime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 exchange_;
  ::google::protobuf::int32 extime_;
  ::google::protobuf::RepeatedPtrField< ::protos::ExRes > result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_exchange_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_exchange_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ExchangeRes* default_instance_;
};
// -------------------------------------------------------------------

class ExRes : public ::google::protobuf::Message {
 public:
  ExRes();
  virtual ~ExRes();

  ExRes(const ExRes& from);

  inline ExRes& operator=(const ExRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExRes& default_instance();

  void Swap(ExRes* other);

  // implements Message ----------------------------------------------

  ExRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExRes& from);
  void MergeFrom(const ExRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 gold = 1;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 1;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 exchange = 2;
  inline bool has_exchange() const;
  inline void clear_exchange();
  static const int kExchangeFieldNumber = 2;
  inline ::google::protobuf::int32 exchange() const;
  inline void set_exchange(::google::protobuf::int32 value);

  // optional int32 crit = 3;
  inline bool has_crit() const;
  inline void clear_crit();
  static const int kCritFieldNumber = 3;
  inline ::google::protobuf::int32 crit() const;
  inline void set_crit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.ExRes)
 private:
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_exchange();
  inline void clear_has_exchange();
  inline void set_has_crit();
  inline void clear_has_crit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 exchange_;
  ::google::protobuf::int32 crit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_exchange_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_exchange_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_exchange_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ExRes* default_instance_;
};
// ===================================================================


// ===================================================================

// ExchangeInfoReq

// required int32 type = 1;
inline bool ExchangeInfoReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeInfoReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeInfoReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeInfoReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ExchangeInfoReq::type() const {
  return type_;
}
inline void ExchangeInfoReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ExchangeInfoRes

// optional int32 gold = 1;
inline bool ExchangeInfoRes::has_gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeInfoRes::set_has_gold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeInfoRes::clear_has_gold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeInfoRes::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 ExchangeInfoRes::gold() const {
  return gold_;
}
inline void ExchangeInfoRes::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 exchange = 2;
inline bool ExchangeInfoRes::has_exchange() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeInfoRes::set_has_exchange() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeInfoRes::clear_has_exchange() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeInfoRes::clear_exchange() {
  exchange_ = 0;
  clear_has_exchange();
}
inline ::google::protobuf::int32 ExchangeInfoRes::exchange() const {
  return exchange_;
}
inline void ExchangeInfoRes::set_exchange(::google::protobuf::int32 value) {
  set_has_exchange();
  exchange_ = value;
}

// optional int32 exTime = 3;
inline bool ExchangeInfoRes::has_extime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeInfoRes::set_has_extime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeInfoRes::clear_has_extime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeInfoRes::clear_extime() {
  extime_ = 0;
  clear_has_extime();
}
inline ::google::protobuf::int32 ExchangeInfoRes::extime() const {
  return extime_;
}
inline void ExchangeInfoRes::set_extime(::google::protobuf::int32 value) {
  set_has_extime();
  extime_ = value;
}

// optional int32 maxTime = 4;
inline bool ExchangeInfoRes::has_maxtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangeInfoRes::set_has_maxtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangeInfoRes::clear_has_maxtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangeInfoRes::clear_maxtime() {
  maxtime_ = 0;
  clear_has_maxtime();
}
inline ::google::protobuf::int32 ExchangeInfoRes::maxtime() const {
  return maxtime_;
}
inline void ExchangeInfoRes::set_maxtime(::google::protobuf::int32 value) {
  set_has_maxtime();
  maxtime_ = value;
}

// -------------------------------------------------------------------

// ExchangeReq

// required int32 type = 1;
inline bool ExchangeReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ExchangeReq::type() const {
  return type_;
}
inline void ExchangeReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 way = 2;
inline bool ExchangeReq::has_way() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeReq::set_has_way() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeReq::clear_has_way() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeReq::clear_way() {
  way_ = 0;
  clear_has_way();
}
inline ::google::protobuf::int32 ExchangeReq::way() const {
  return way_;
}
inline void ExchangeReq::set_way(::google::protobuf::int32 value) {
  set_has_way();
  way_ = value;
}

// -------------------------------------------------------------------

// ExchangeRes

// required int32 status = 1;
inline bool ExchangeRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ExchangeRes::status() const {
  return status_;
}
inline void ExchangeRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 gold = 2;
inline bool ExchangeRes::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeRes::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeRes::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeRes::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 ExchangeRes::gold() const {
  return gold_;
}
inline void ExchangeRes::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 exchange = 5;
inline bool ExchangeRes::has_exchange() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeRes::set_has_exchange() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeRes::clear_has_exchange() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeRes::clear_exchange() {
  exchange_ = 0;
  clear_has_exchange();
}
inline ::google::protobuf::int32 ExchangeRes::exchange() const {
  return exchange_;
}
inline void ExchangeRes::set_exchange(::google::protobuf::int32 value) {
  set_has_exchange();
  exchange_ = value;
}

// optional int32 exTime = 3;
inline bool ExchangeRes::has_extime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangeRes::set_has_extime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangeRes::clear_has_extime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangeRes::clear_extime() {
  extime_ = 0;
  clear_has_extime();
}
inline ::google::protobuf::int32 ExchangeRes::extime() const {
  return extime_;
}
inline void ExchangeRes::set_extime(::google::protobuf::int32 value) {
  set_has_extime();
  extime_ = value;
}

// repeated .protos.ExRes result = 4;
inline int ExchangeRes::result_size() const {
  return result_.size();
}
inline void ExchangeRes::clear_result() {
  result_.Clear();
}
inline const ::protos::ExRes& ExchangeRes::result(int index) const {
  return result_.Get(index);
}
inline ::protos::ExRes* ExchangeRes::mutable_result(int index) {
  return result_.Mutable(index);
}
inline ::protos::ExRes* ExchangeRes::add_result() {
  return result_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::ExRes >&
ExchangeRes::result() const {
  return result_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::ExRes >*
ExchangeRes::mutable_result() {
  return &result_;
}

// -------------------------------------------------------------------

// ExRes

// optional int32 gold = 1;
inline bool ExRes::has_gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExRes::set_has_gold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExRes::clear_has_gold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExRes::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 ExRes::gold() const {
  return gold_;
}
inline void ExRes::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 exchange = 2;
inline bool ExRes::has_exchange() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExRes::set_has_exchange() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExRes::clear_has_exchange() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExRes::clear_exchange() {
  exchange_ = 0;
  clear_has_exchange();
}
inline ::google::protobuf::int32 ExRes::exchange() const {
  return exchange_;
}
inline void ExRes::set_exchange(::google::protobuf::int32 value) {
  set_has_exchange();
  exchange_ = value;
}

// optional int32 crit = 3;
inline bool ExRes::has_crit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExRes::set_has_crit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExRes::clear_has_crit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExRes::clear_crit() {
  crit_ = 0;
  clear_has_crit();
}
inline ::google::protobuf::int32 ExRes::crit() const {
  return crit_;
}
inline void ExRes::set_crit(::google::protobuf::int32 value) {
  set_has_crit();
  crit_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_exchange_5fprotocol_2eproto__INCLUDED
