// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: act_protocol.proto

#ifndef PROTOBUF_act_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_act_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/prize_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_act_5fprotocol_2eproto();
void protobuf_AssignDesc_act_5fprotocol_2eproto();
void protobuf_ShutdownFile_act_5fprotocol_2eproto();

class ActListReq;
class ActListRes;
class BuyGiftReq;
class BuyGiftRes;
class OnlinePrize;
class Activity;
class ExList;

// ===================================================================

class ActListReq : public ::google::protobuf::Message {
 public:
  ActListReq();
  virtual ~ActListReq();

  ActListReq(const ActListReq& from);

  inline ActListReq& operator=(const ActListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActListReq& default_instance();

  void Swap(ActListReq* other);

  // implements Message ----------------------------------------------

  ActListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActListReq& from);
  void MergeFrom(const ActListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 tab = 1;
  inline bool has_tab() const;
  inline void clear_tab();
  static const int kTabFieldNumber = 1;
  inline ::google::protobuf::int32 tab() const;
  inline void set_tab(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.ActListReq)
 private:
  inline void set_has_tab();
  inline void clear_has_tab();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 tab_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_act_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_act_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_act_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ActListReq* default_instance_;
};
// -------------------------------------------------------------------

class ActListRes : public ::google::protobuf::Message {
 public:
  ActListRes();
  virtual ~ActListRes();

  ActListRes(const ActListRes& from);

  inline ActListRes& operator=(const ActListRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActListRes& default_instance();

  void Swap(ActListRes* other);

  // implements Message ----------------------------------------------

  ActListRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActListRes& from);
  void MergeFrom(const ActListRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string baseUrl = 1;
  inline bool has_baseurl() const;
  inline void clear_baseurl();
  static const int kBaseUrlFieldNumber = 1;
  inline const ::std::string& baseurl() const;
  inline void set_baseurl(const ::std::string& value);
  inline void set_baseurl(const char* value);
  inline void set_baseurl(const char* value, size_t size);
  inline ::std::string* mutable_baseurl();
  inline ::std::string* release_baseurl();
  inline void set_allocated_baseurl(::std::string* baseurl);

  // optional int32 tab = 3;
  inline bool has_tab() const;
  inline void clear_tab();
  static const int kTabFieldNumber = 3;
  inline ::google::protobuf::int32 tab() const;
  inline void set_tab(::google::protobuf::int32 value);

  // repeated .protos.Activity actList = 2;
  inline int actlist_size() const;
  inline void clear_actlist();
  static const int kActListFieldNumber = 2;
  inline const ::protos::Activity& actlist(int index) const;
  inline ::protos::Activity* mutable_actlist(int index);
  inline ::protos::Activity* add_actlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::Activity >&
      actlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::Activity >*
      mutable_actlist();

  // @@protoc_insertion_point(class_scope:protos.ActListRes)
 private:
  inline void set_has_baseurl();
  inline void clear_has_baseurl();
  inline void set_has_tab();
  inline void clear_has_tab();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* baseurl_;
  ::google::protobuf::RepeatedPtrField< ::protos::Activity > actlist_;
  ::google::protobuf::int32 tab_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_act_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_act_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_act_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ActListRes* default_instance_;
};
// -------------------------------------------------------------------

class BuyGiftReq : public ::google::protobuf::Message {
 public:
  BuyGiftReq();
  virtual ~BuyGiftReq();

  BuyGiftReq(const BuyGiftReq& from);

  inline BuyGiftReq& operator=(const BuyGiftReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyGiftReq& default_instance();

  void Swap(BuyGiftReq* other);

  // implements Message ----------------------------------------------

  BuyGiftReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyGiftReq& from);
  void MergeFrom(const BuyGiftReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 actId = 1;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActIdFieldNumber = 1;
  inline ::google::protobuf::int32 actid() const;
  inline void set_actid(::google::protobuf::int32 value);

  // optional int32 exId = 2;
  inline bool has_exid() const;
  inline void clear_exid();
  static const int kExIdFieldNumber = 2;
  inline ::google::protobuf::int32 exid() const;
  inline void set_exid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.BuyGiftReq)
 private:
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_exid();
  inline void clear_has_exid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 actid_;
  ::google::protobuf::int32 exid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_act_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_act_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_act_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BuyGiftReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyGiftRes : public ::google::protobuf::Message {
 public:
  BuyGiftRes();
  virtual ~BuyGiftRes();

  BuyGiftRes(const BuyGiftRes& from);

  inline BuyGiftRes& operator=(const BuyGiftRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyGiftRes& default_instance();

  void Swap(BuyGiftRes* other);

  // implements Message ----------------------------------------------

  BuyGiftRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyGiftRes& from);
  void MergeFrom(const BuyGiftRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .protos.common.Prize items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::protos::common::Prize& items(int index) const;
  inline ::protos::common::Prize* mutable_items(int index);
  inline ::protos::common::Prize* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:protos.BuyGiftRes)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::common::Prize > items_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_act_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_act_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_act_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BuyGiftRes* default_instance_;
};
// -------------------------------------------------------------------

class OnlinePrize : public ::google::protobuf::Message {
 public:
  OnlinePrize();
  virtual ~OnlinePrize();

  OnlinePrize(const OnlinePrize& from);

  inline OnlinePrize& operator=(const OnlinePrize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlinePrize& default_instance();

  void Swap(OnlinePrize* other);

  // implements Message ----------------------------------------------

  OnlinePrize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlinePrize& from);
  void MergeFrom(const OnlinePrize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // repeated .protos.common.Prize prizes = 2;
  inline int prizes_size() const;
  inline void clear_prizes();
  static const int kPrizesFieldNumber = 2;
  inline const ::protos::common::Prize& prizes(int index) const;
  inline ::protos::common::Prize* mutable_prizes(int index);
  inline ::protos::common::Prize* add_prizes();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
      prizes() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
      mutable_prizes();

  // optional sint32 nextTime = 3;
  inline bool has_nexttime() const;
  inline void clear_nexttime();
  static const int kNextTimeFieldNumber = 3;
  inline ::google::protobuf::int32 nexttime() const;
  inline void set_nexttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.OnlinePrize)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_nexttime();
  inline void clear_has_nexttime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::common::Prize > prizes_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 nexttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_act_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_act_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_act_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static OnlinePrize* default_instance_;
};
// -------------------------------------------------------------------

class Activity : public ::google::protobuf::Message {
 public:
  Activity();
  virtual ~Activity();

  Activity(const Activity& from);

  inline Activity& operator=(const Activity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity& default_instance();

  void Swap(Activity* other);

  // implements Message ----------------------------------------------

  Activity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity& from);
  void MergeFrom(const Activity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 actId = 1;
  inline bool has_actid() const;
  inline void clear_actid();
  static const int kActIdFieldNumber = 1;
  inline ::google::protobuf::int32 actid() const;
  inline void set_actid(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional string icon = 5;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 5;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  inline void set_allocated_icon(::std::string* icon);

  // optional string pic = 6;
  inline bool has_pic() const;
  inline void clear_pic();
  static const int kPicFieldNumber = 6;
  inline const ::std::string& pic() const;
  inline void set_pic(const ::std::string& value);
  inline void set_pic(const char* value);
  inline void set_pic(const char* value, size_t size);
  inline ::std::string* mutable_pic();
  inline ::std::string* release_pic();
  inline void set_allocated_pic(::std::string* pic);

  // optional int32 param = 7;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 7;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // optional bool tips = 9;
  inline bool has_tips() const;
  inline void clear_tips();
  static const int kTipsFieldNumber = 9;
  inline bool tips() const;
  inline void set_tips(bool value);

  // repeated .protos.ExList exchange = 8;
  inline int exchange_size() const;
  inline void clear_exchange();
  static const int kExchangeFieldNumber = 8;
  inline const ::protos::ExList& exchange(int index) const;
  inline ::protos::ExList* mutable_exchange(int index);
  inline ::protos::ExList* add_exchange();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::ExList >&
      exchange() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::ExList >*
      mutable_exchange();

  // @@protoc_insertion_point(class_scope:protos.Activity)
 private:
  inline void set_has_actid();
  inline void clear_has_actid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_pic();
  inline void clear_has_pic();
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_tips();
  inline void clear_has_tips();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 actid_;
  ::google::protobuf::int32 type_;
  ::std::string* name_;
  ::std::string* icon_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 param_;
  ::std::string* pic_;
  ::google::protobuf::RepeatedPtrField< ::protos::ExList > exchange_;
  bool tips_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_act_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_act_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_act_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Activity* default_instance_;
};
// -------------------------------------------------------------------

class ExList : public ::google::protobuf::Message {
 public:
  ExList();
  virtual ~ExList();

  ExList(const ExList& from);

  inline ExList& operator=(const ExList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExList& default_instance();

  void Swap(ExList* other);

  // implements Message ----------------------------------------------

  ExList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExList& from);
  void MergeFrom(const ExList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 exId = 1;
  inline bool has_exid() const;
  inline void clear_exid();
  static const int kExIdFieldNumber = 1;
  inline ::google::protobuf::int32 exid() const;
  inline void set_exid(::google::protobuf::int32 value);

  // repeated .protos.common.Prize oItems = 2;
  inline int oitems_size() const;
  inline void clear_oitems();
  static const int kOItemsFieldNumber = 2;
  inline const ::protos::common::Prize& oitems(int index) const;
  inline ::protos::common::Prize* mutable_oitems(int index);
  inline ::protos::common::Prize* add_oitems();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
      oitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
      mutable_oitems();

  // repeated .protos.common.Prize tItems = 3;
  inline int titems_size() const;
  inline void clear_titems();
  static const int kTItemsFieldNumber = 3;
  inline const ::protos::common::Prize& titems(int index) const;
  inline ::protos::common::Prize* mutable_titems(int index);
  inline ::protos::common::Prize* add_titems();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
      titems() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
      mutable_titems();

  // optional bool achieve = 4;
  inline bool has_achieve() const;
  inline void clear_achieve();
  static const int kAchieveFieldNumber = 4;
  inline bool achieve() const;
  inline void set_achieve(bool value);

  // optional int32 exLevel = 5;
  inline bool has_exlevel() const;
  inline void clear_exlevel();
  static const int kExLevelFieldNumber = 5;
  inline ::google::protobuf::int32 exlevel() const;
  inline void set_exlevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.ExList)
 private:
  inline void set_has_exid();
  inline void clear_has_exid();
  inline void set_has_achieve();
  inline void clear_has_achieve();
  inline void set_has_exlevel();
  inline void clear_has_exlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::common::Prize > oitems_;
  ::google::protobuf::int32 exid_;
  bool achieve_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::Prize > titems_;
  ::google::protobuf::int32 exlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_act_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_act_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_act_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ExList* default_instance_;
};
// ===================================================================


// ===================================================================

// ActListReq

// required int32 tab = 1;
inline bool ActListReq::has_tab() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActListReq::set_has_tab() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActListReq::clear_has_tab() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActListReq::clear_tab() {
  tab_ = 0;
  clear_has_tab();
}
inline ::google::protobuf::int32 ActListReq::tab() const {
  return tab_;
}
inline void ActListReq::set_tab(::google::protobuf::int32 value) {
  set_has_tab();
  tab_ = value;
}

// -------------------------------------------------------------------

// ActListRes

// required string baseUrl = 1;
inline bool ActListRes::has_baseurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActListRes::set_has_baseurl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActListRes::clear_has_baseurl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActListRes::clear_baseurl() {
  if (baseurl_ != &::google::protobuf::internal::kEmptyString) {
    baseurl_->clear();
  }
  clear_has_baseurl();
}
inline const ::std::string& ActListRes::baseurl() const {
  return *baseurl_;
}
inline void ActListRes::set_baseurl(const ::std::string& value) {
  set_has_baseurl();
  if (baseurl_ == &::google::protobuf::internal::kEmptyString) {
    baseurl_ = new ::std::string;
  }
  baseurl_->assign(value);
}
inline void ActListRes::set_baseurl(const char* value) {
  set_has_baseurl();
  if (baseurl_ == &::google::protobuf::internal::kEmptyString) {
    baseurl_ = new ::std::string;
  }
  baseurl_->assign(value);
}
inline void ActListRes::set_baseurl(const char* value, size_t size) {
  set_has_baseurl();
  if (baseurl_ == &::google::protobuf::internal::kEmptyString) {
    baseurl_ = new ::std::string;
  }
  baseurl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActListRes::mutable_baseurl() {
  set_has_baseurl();
  if (baseurl_ == &::google::protobuf::internal::kEmptyString) {
    baseurl_ = new ::std::string;
  }
  return baseurl_;
}
inline ::std::string* ActListRes::release_baseurl() {
  clear_has_baseurl();
  if (baseurl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = baseurl_;
    baseurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ActListRes::set_allocated_baseurl(::std::string* baseurl) {
  if (baseurl_ != &::google::protobuf::internal::kEmptyString) {
    delete baseurl_;
  }
  if (baseurl) {
    set_has_baseurl();
    baseurl_ = baseurl;
  } else {
    clear_has_baseurl();
    baseurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 tab = 3;
inline bool ActListRes::has_tab() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActListRes::set_has_tab() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActListRes::clear_has_tab() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActListRes::clear_tab() {
  tab_ = 0;
  clear_has_tab();
}
inline ::google::protobuf::int32 ActListRes::tab() const {
  return tab_;
}
inline void ActListRes::set_tab(::google::protobuf::int32 value) {
  set_has_tab();
  tab_ = value;
}

// repeated .protos.Activity actList = 2;
inline int ActListRes::actlist_size() const {
  return actlist_.size();
}
inline void ActListRes::clear_actlist() {
  actlist_.Clear();
}
inline const ::protos::Activity& ActListRes::actlist(int index) const {
  return actlist_.Get(index);
}
inline ::protos::Activity* ActListRes::mutable_actlist(int index) {
  return actlist_.Mutable(index);
}
inline ::protos::Activity* ActListRes::add_actlist() {
  return actlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::Activity >&
ActListRes::actlist() const {
  return actlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::Activity >*
ActListRes::mutable_actlist() {
  return &actlist_;
}

// -------------------------------------------------------------------

// BuyGiftReq

// required int32 actId = 1;
inline bool BuyGiftReq::has_actid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyGiftReq::set_has_actid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyGiftReq::clear_has_actid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyGiftReq::clear_actid() {
  actid_ = 0;
  clear_has_actid();
}
inline ::google::protobuf::int32 BuyGiftReq::actid() const {
  return actid_;
}
inline void BuyGiftReq::set_actid(::google::protobuf::int32 value) {
  set_has_actid();
  actid_ = value;
}

// optional int32 exId = 2;
inline bool BuyGiftReq::has_exid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyGiftReq::set_has_exid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyGiftReq::clear_has_exid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyGiftReq::clear_exid() {
  exid_ = 0;
  clear_has_exid();
}
inline ::google::protobuf::int32 BuyGiftReq::exid() const {
  return exid_;
}
inline void BuyGiftReq::set_exid(::google::protobuf::int32 value) {
  set_has_exid();
  exid_ = value;
}

// -------------------------------------------------------------------

// BuyGiftRes

// required int32 result = 1;
inline bool BuyGiftRes::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyGiftRes::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyGiftRes::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyGiftRes::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 BuyGiftRes::result() const {
  return result_;
}
inline void BuyGiftRes::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .protos.common.Prize items = 2;
inline int BuyGiftRes::items_size() const {
  return items_.size();
}
inline void BuyGiftRes::clear_items() {
  items_.Clear();
}
inline const ::protos::common::Prize& BuyGiftRes::items(int index) const {
  return items_.Get(index);
}
inline ::protos::common::Prize* BuyGiftRes::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::protos::common::Prize* BuyGiftRes::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
BuyGiftRes::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
BuyGiftRes::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// OnlinePrize

// required int32 result = 1;
inline bool OnlinePrize::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlinePrize::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlinePrize::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlinePrize::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 OnlinePrize::result() const {
  return result_;
}
inline void OnlinePrize::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// repeated .protos.common.Prize prizes = 2;
inline int OnlinePrize::prizes_size() const {
  return prizes_.size();
}
inline void OnlinePrize::clear_prizes() {
  prizes_.Clear();
}
inline const ::protos::common::Prize& OnlinePrize::prizes(int index) const {
  return prizes_.Get(index);
}
inline ::protos::common::Prize* OnlinePrize::mutable_prizes(int index) {
  return prizes_.Mutable(index);
}
inline ::protos::common::Prize* OnlinePrize::add_prizes() {
  return prizes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
OnlinePrize::prizes() const {
  return prizes_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
OnlinePrize::mutable_prizes() {
  return &prizes_;
}

// optional sint32 nextTime = 3;
inline bool OnlinePrize::has_nexttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OnlinePrize::set_has_nexttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OnlinePrize::clear_has_nexttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OnlinePrize::clear_nexttime() {
  nexttime_ = 0;
  clear_has_nexttime();
}
inline ::google::protobuf::int32 OnlinePrize::nexttime() const {
  return nexttime_;
}
inline void OnlinePrize::set_nexttime(::google::protobuf::int32 value) {
  set_has_nexttime();
  nexttime_ = value;
}

// -------------------------------------------------------------------

// Activity

// required int32 actId = 1;
inline bool Activity::has_actid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Activity::set_has_actid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Activity::clear_has_actid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Activity::clear_actid() {
  actid_ = 0;
  clear_has_actid();
}
inline ::google::protobuf::int32 Activity::actid() const {
  return actid_;
}
inline void Activity::set_actid(::google::protobuf::int32 value) {
  set_has_actid();
  actid_ = value;
}

// optional int32 type = 2;
inline bool Activity::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Activity::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Activity::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Activity::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Activity::type() const {
  return type_;
}
inline void Activity::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string name = 3;
inline bool Activity::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Activity::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Activity::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Activity::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Activity::name() const {
  return *name_;
}
inline void Activity::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Activity::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Activity::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Activity::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Activity::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Activity::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 status = 4;
inline bool Activity::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Activity::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Activity::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Activity::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Activity::status() const {
  return status_;
}
inline void Activity::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional string icon = 5;
inline bool Activity::has_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Activity::set_has_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Activity::clear_has_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Activity::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& Activity::icon() const {
  return *icon_;
}
inline void Activity::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void Activity::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void Activity::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Activity::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* Activity::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Activity::set_allocated_icon(::std::string* icon) {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    delete icon_;
  }
  if (icon) {
    set_has_icon();
    icon_ = icon;
  } else {
    clear_has_icon();
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string pic = 6;
inline bool Activity::has_pic() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Activity::set_has_pic() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Activity::clear_has_pic() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Activity::clear_pic() {
  if (pic_ != &::google::protobuf::internal::kEmptyString) {
    pic_->clear();
  }
  clear_has_pic();
}
inline const ::std::string& Activity::pic() const {
  return *pic_;
}
inline void Activity::set_pic(const ::std::string& value) {
  set_has_pic();
  if (pic_ == &::google::protobuf::internal::kEmptyString) {
    pic_ = new ::std::string;
  }
  pic_->assign(value);
}
inline void Activity::set_pic(const char* value) {
  set_has_pic();
  if (pic_ == &::google::protobuf::internal::kEmptyString) {
    pic_ = new ::std::string;
  }
  pic_->assign(value);
}
inline void Activity::set_pic(const char* value, size_t size) {
  set_has_pic();
  if (pic_ == &::google::protobuf::internal::kEmptyString) {
    pic_ = new ::std::string;
  }
  pic_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Activity::mutable_pic() {
  set_has_pic();
  if (pic_ == &::google::protobuf::internal::kEmptyString) {
    pic_ = new ::std::string;
  }
  return pic_;
}
inline ::std::string* Activity::release_pic() {
  clear_has_pic();
  if (pic_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pic_;
    pic_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Activity::set_allocated_pic(::std::string* pic) {
  if (pic_ != &::google::protobuf::internal::kEmptyString) {
    delete pic_;
  }
  if (pic) {
    set_has_pic();
    pic_ = pic;
  } else {
    clear_has_pic();
    pic_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 param = 7;
inline bool Activity::has_param() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Activity::set_has_param() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Activity::clear_has_param() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Activity::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 Activity::param() const {
  return param_;
}
inline void Activity::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
}

// optional bool tips = 9;
inline bool Activity::has_tips() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Activity::set_has_tips() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Activity::clear_has_tips() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Activity::clear_tips() {
  tips_ = false;
  clear_has_tips();
}
inline bool Activity::tips() const {
  return tips_;
}
inline void Activity::set_tips(bool value) {
  set_has_tips();
  tips_ = value;
}

// repeated .protos.ExList exchange = 8;
inline int Activity::exchange_size() const {
  return exchange_.size();
}
inline void Activity::clear_exchange() {
  exchange_.Clear();
}
inline const ::protos::ExList& Activity::exchange(int index) const {
  return exchange_.Get(index);
}
inline ::protos::ExList* Activity::mutable_exchange(int index) {
  return exchange_.Mutable(index);
}
inline ::protos::ExList* Activity::add_exchange() {
  return exchange_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::ExList >&
Activity::exchange() const {
  return exchange_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::ExList >*
Activity::mutable_exchange() {
  return &exchange_;
}

// -------------------------------------------------------------------

// ExList

// required int32 exId = 1;
inline bool ExList::has_exid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExList::set_has_exid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExList::clear_has_exid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExList::clear_exid() {
  exid_ = 0;
  clear_has_exid();
}
inline ::google::protobuf::int32 ExList::exid() const {
  return exid_;
}
inline void ExList::set_exid(::google::protobuf::int32 value) {
  set_has_exid();
  exid_ = value;
}

// repeated .protos.common.Prize oItems = 2;
inline int ExList::oitems_size() const {
  return oitems_.size();
}
inline void ExList::clear_oitems() {
  oitems_.Clear();
}
inline const ::protos::common::Prize& ExList::oitems(int index) const {
  return oitems_.Get(index);
}
inline ::protos::common::Prize* ExList::mutable_oitems(int index) {
  return oitems_.Mutable(index);
}
inline ::protos::common::Prize* ExList::add_oitems() {
  return oitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
ExList::oitems() const {
  return oitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
ExList::mutable_oitems() {
  return &oitems_;
}

// repeated .protos.common.Prize tItems = 3;
inline int ExList::titems_size() const {
  return titems_.size();
}
inline void ExList::clear_titems() {
  titems_.Clear();
}
inline const ::protos::common::Prize& ExList::titems(int index) const {
  return titems_.Get(index);
}
inline ::protos::common::Prize* ExList::mutable_titems(int index) {
  return titems_.Mutable(index);
}
inline ::protos::common::Prize* ExList::add_titems() {
  return titems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
ExList::titems() const {
  return titems_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
ExList::mutable_titems() {
  return &titems_;
}

// optional bool achieve = 4;
inline bool ExList::has_achieve() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExList::set_has_achieve() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExList::clear_has_achieve() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExList::clear_achieve() {
  achieve_ = false;
  clear_has_achieve();
}
inline bool ExList::achieve() const {
  return achieve_;
}
inline void ExList::set_achieve(bool value) {
  set_has_achieve();
  achieve_ = value;
}

// optional int32 exLevel = 5;
inline bool ExList::has_exlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExList::set_has_exlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExList::clear_has_exlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExList::clear_exlevel() {
  exlevel_ = 0;
  clear_has_exlevel();
}
inline ::google::protobuf::int32 ExList::exlevel() const {
  return exlevel_;
}
inline void ExList::set_exlevel(::google::protobuf::int32 value) {
  set_has_exlevel();
  exlevel_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_act_5fprotocol_2eproto__INCLUDED
