// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rank_protocol.proto

#ifndef PROTOBUF_rank_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_rank_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/role_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rank_5fprotocol_2eproto();
void protobuf_AssignDesc_rank_5fprotocol_2eproto();
void protobuf_ShutdownFile_rank_5fprotocol_2eproto();

class RankRequest;
class RankResponse;
class RankData;
class Teams;

// ===================================================================

class RankRequest : public ::google::protobuf::Message {
 public:
  RankRequest();
  virtual ~RankRequest();

  RankRequest(const RankRequest& from);

  inline RankRequest& operator=(const RankRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankRequest& default_instance();

  void Swap(RankRequest* other);

  // implements Message ----------------------------------------------

  RankRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankRequest& from);
  void MergeFrom(const RankRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rankType = 1;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRankTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ranktype() const;
  inline void set_ranktype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.RankRequest)
 private:
  inline void set_has_ranktype();
  inline void clear_has_ranktype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ranktype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_rank_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_rank_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_rank_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RankRequest* default_instance_;
};
// -------------------------------------------------------------------

class RankResponse : public ::google::protobuf::Message {
 public:
  RankResponse();
  virtual ~RankResponse();

  RankResponse(const RankResponse& from);

  inline RankResponse& operator=(const RankResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankResponse& default_instance();

  void Swap(RankResponse* other);

  // implements Message ----------------------------------------------

  RankResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankResponse& from);
  void MergeFrom(const RankResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protos.RankData myRank = 1;
  inline bool has_myrank() const;
  inline void clear_myrank();
  static const int kMyRankFieldNumber = 1;
  inline const ::protos::RankData& myrank() const;
  inline ::protos::RankData* mutable_myrank();
  inline ::protos::RankData* release_myrank();
  inline void set_allocated_myrank(::protos::RankData* myrank);

  // repeated .protos.RankData rankList = 2;
  inline int ranklist_size() const;
  inline void clear_ranklist();
  static const int kRankListFieldNumber = 2;
  inline const ::protos::RankData& ranklist(int index) const;
  inline ::protos::RankData* mutable_ranklist(int index);
  inline ::protos::RankData* add_ranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::RankData >&
      ranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::RankData >*
      mutable_ranklist();

  // @@protoc_insertion_point(class_scope:protos.RankResponse)
 private:
  inline void set_has_myrank();
  inline void clear_has_myrank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protos::RankData* myrank_;
  ::google::protobuf::RepeatedPtrField< ::protos::RankData > ranklist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_rank_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_rank_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_rank_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RankResponse* default_instance_;
};
// -------------------------------------------------------------------

class RankData : public ::google::protobuf::Message {
 public:
  RankData();
  virtual ~RankData();

  RankData(const RankData& from);

  inline RankData& operator=(const RankData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankData& default_instance();

  void Swap(RankData* other);

  // implements Message ----------------------------------------------

  RankData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankData& from);
  void MergeFrom(const RankData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);

  // optional .protos.common.Role roleData = 2;
  inline bool has_roledata() const;
  inline void clear_roledata();
  static const int kRoleDataFieldNumber = 2;
  inline const ::protos::common::Role& roledata() const;
  inline ::protos::common::Role* mutable_roledata();
  inline ::protos::common::Role* release_roledata();
  inline void set_allocated_roledata(::protos::common::Role* roledata);

  // optional int32 hurt = 3;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 3;
  inline ::google::protobuf::int32 hurt() const;
  inline void set_hurt(::google::protobuf::int32 value);

  // repeated .protos.Teams teamList = 4;
  inline int teamlist_size() const;
  inline void clear_teamlist();
  static const int kTeamListFieldNumber = 4;
  inline const ::protos::Teams& teamlist(int index) const;
  inline ::protos::Teams* mutable_teamlist(int index);
  inline ::protos::Teams* add_teamlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::Teams >&
      teamlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::Teams >*
      mutable_teamlist();

  // @@protoc_insertion_point(class_scope:protos.RankData)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_roledata();
  inline void clear_has_roledata();
  inline void set_has_hurt();
  inline void clear_has_hurt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protos::common::Role* roledata_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 hurt_;
  ::google::protobuf::RepeatedPtrField< ::protos::Teams > teamlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_rank_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_rank_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_rank_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RankData* default_instance_;
};
// -------------------------------------------------------------------

class Teams : public ::google::protobuf::Message {
 public:
  Teams();
  virtual ~Teams();

  Teams(const Teams& from);

  inline Teams& operator=(const Teams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Teams& default_instance();

  void Swap(Teams* other);

  // implements Message ----------------------------------------------

  Teams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Teams& from);
  void MergeFrom(const Teams& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 thumb = 2;
  inline bool has_thumb() const;
  inline void clear_thumb();
  static const int kThumbFieldNumber = 2;
  inline ::google::protobuf::int32 thumb() const;
  inline void set_thumb(::google::protobuf::int32 value);

  // optional int32 quality = 4;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 4;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 color = 5;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 5;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.Teams)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_thumb();
  inline void clear_has_thumb();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_color();
  inline void clear_has_color();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 thumb_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 color_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_rank_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_rank_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_rank_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Teams* default_instance_;
};
// ===================================================================


// ===================================================================

// RankRequest

// required int32 rankType = 1;
inline bool RankRequest::has_ranktype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankRequest::set_has_ranktype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankRequest::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankRequest::clear_ranktype() {
  ranktype_ = 0;
  clear_has_ranktype();
}
inline ::google::protobuf::int32 RankRequest::ranktype() const {
  return ranktype_;
}
inline void RankRequest::set_ranktype(::google::protobuf::int32 value) {
  set_has_ranktype();
  ranktype_ = value;
}

// -------------------------------------------------------------------

// RankResponse

// optional .protos.RankData myRank = 1;
inline bool RankResponse::has_myrank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankResponse::set_has_myrank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankResponse::clear_has_myrank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankResponse::clear_myrank() {
  if (myrank_ != NULL) myrank_->::protos::RankData::Clear();
  clear_has_myrank();
}
inline const ::protos::RankData& RankResponse::myrank() const {
  return myrank_ != NULL ? *myrank_ : *default_instance_->myrank_;
}
inline ::protos::RankData* RankResponse::mutable_myrank() {
  set_has_myrank();
  if (myrank_ == NULL) myrank_ = new ::protos::RankData;
  return myrank_;
}
inline ::protos::RankData* RankResponse::release_myrank() {
  clear_has_myrank();
  ::protos::RankData* temp = myrank_;
  myrank_ = NULL;
  return temp;
}
inline void RankResponse::set_allocated_myrank(::protos::RankData* myrank) {
  delete myrank_;
  myrank_ = myrank;
  if (myrank) {
    set_has_myrank();
  } else {
    clear_has_myrank();
  }
}

// repeated .protos.RankData rankList = 2;
inline int RankResponse::ranklist_size() const {
  return ranklist_.size();
}
inline void RankResponse::clear_ranklist() {
  ranklist_.Clear();
}
inline const ::protos::RankData& RankResponse::ranklist(int index) const {
  return ranklist_.Get(index);
}
inline ::protos::RankData* RankResponse::mutable_ranklist(int index) {
  return ranklist_.Mutable(index);
}
inline ::protos::RankData* RankResponse::add_ranklist() {
  return ranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::RankData >&
RankResponse::ranklist() const {
  return ranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::RankData >*
RankResponse::mutable_ranklist() {
  return &ranklist_;
}

// -------------------------------------------------------------------

// RankData

// required int32 rank = 1;
inline bool RankData::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankData::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankData::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 RankData::rank() const {
  return rank_;
}
inline void RankData::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional .protos.common.Role roleData = 2;
inline bool RankData::has_roledata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankData::set_has_roledata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankData::clear_has_roledata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankData::clear_roledata() {
  if (roledata_ != NULL) roledata_->::protos::common::Role::Clear();
  clear_has_roledata();
}
inline const ::protos::common::Role& RankData::roledata() const {
  return roledata_ != NULL ? *roledata_ : *default_instance_->roledata_;
}
inline ::protos::common::Role* RankData::mutable_roledata() {
  set_has_roledata();
  if (roledata_ == NULL) roledata_ = new ::protos::common::Role;
  return roledata_;
}
inline ::protos::common::Role* RankData::release_roledata() {
  clear_has_roledata();
  ::protos::common::Role* temp = roledata_;
  roledata_ = NULL;
  return temp;
}
inline void RankData::set_allocated_roledata(::protos::common::Role* roledata) {
  delete roledata_;
  roledata_ = roledata;
  if (roledata) {
    set_has_roledata();
  } else {
    clear_has_roledata();
  }
}

// optional int32 hurt = 3;
inline bool RankData::has_hurt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankData::set_has_hurt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankData::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankData::clear_hurt() {
  hurt_ = 0;
  clear_has_hurt();
}
inline ::google::protobuf::int32 RankData::hurt() const {
  return hurt_;
}
inline void RankData::set_hurt(::google::protobuf::int32 value) {
  set_has_hurt();
  hurt_ = value;
}

// repeated .protos.Teams teamList = 4;
inline int RankData::teamlist_size() const {
  return teamlist_.size();
}
inline void RankData::clear_teamlist() {
  teamlist_.Clear();
}
inline const ::protos::Teams& RankData::teamlist(int index) const {
  return teamlist_.Get(index);
}
inline ::protos::Teams* RankData::mutable_teamlist(int index) {
  return teamlist_.Mutable(index);
}
inline ::protos::Teams* RankData::add_teamlist() {
  return teamlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::Teams >&
RankData::teamlist() const {
  return teamlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::Teams >*
RankData::mutable_teamlist() {
  return &teamlist_;
}

// -------------------------------------------------------------------

// Teams

// required int32 id = 1;
inline bool Teams::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Teams::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Teams::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Teams::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Teams::id() const {
  return id_;
}
inline void Teams::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 thumb = 2;
inline bool Teams::has_thumb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Teams::set_has_thumb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Teams::clear_has_thumb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Teams::clear_thumb() {
  thumb_ = 0;
  clear_has_thumb();
}
inline ::google::protobuf::int32 Teams::thumb() const {
  return thumb_;
}
inline void Teams::set_thumb(::google::protobuf::int32 value) {
  set_has_thumb();
  thumb_ = value;
}

// optional int32 quality = 4;
inline bool Teams::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Teams::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Teams::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Teams::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 Teams::quality() const {
  return quality_;
}
inline void Teams::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 color = 5;
inline bool Teams::has_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Teams::set_has_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Teams::clear_has_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Teams::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 Teams::color() const {
  return color_;
}
inline void Teams::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rank_5fprotocol_2eproto__INCLUDED
