// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_protocol.proto

#ifndef PROTOBUF_role_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_role_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/role_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_role_5fprotocol_2eproto();
void protobuf_AssignDesc_role_5fprotocol_2eproto();
void protobuf_ShutdownFile_role_5fprotocol_2eproto();

class CreateRequest;
class CreateResponse;
class RoleListRequest;
class RoleListResponse;
class MoveRequest;
class MoveResponse;
class ChangeNameReq;
class RoleIcons;
class ChangeRoleIcon;
class RoleCtrlRes;

// ===================================================================

class CreateRequest : public ::google::protobuf::Message {
 public:
  CreateRequest();
  virtual ~CreateRequest();

  CreateRequest(const CreateRequest& from);

  inline CreateRequest& operator=(const CreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRequest& default_instance();

  void Swap(CreateRequest* other);

  // implements Message ----------------------------------------------

  CreateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateRequest& from);
  void MergeFrom(const CreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleNation = 1;
  inline bool has_rolenation() const;
  inline void clear_rolenation();
  static const int kRoleNationFieldNumber = 1;
  inline ::google::protobuf::int32 rolenation() const;
  inline void set_rolenation(::google::protobuf::int32 value);

  // required string roleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // @@protoc_insertion_point(class_scope:protos.CreateRequest)
 private:
  inline void set_has_rolenation();
  inline void clear_has_rolenation();
  inline void set_has_rolename();
  inline void clear_has_rolename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 rolenation_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_role_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_role_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateResponse : public ::google::protobuf::Message {
 public:
  CreateResponse();
  virtual ~CreateResponse();

  CreateResponse(const CreateResponse& from);

  inline CreateResponse& operator=(const CreateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateResponse& default_instance();

  void Swap(CreateResponse* other);

  // implements Message ----------------------------------------------

  CreateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateResponse& from);
  void MergeFrom(const CreateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 createRecode = 1;
  inline bool has_createrecode() const;
  inline void clear_createrecode();
  static const int kCreateRecodeFieldNumber = 1;
  inline ::google::protobuf::int32 createrecode() const;
  inline void set_createrecode(::google::protobuf::int32 value);

  // repeated .protos.common.Role roleList = 2;
  inline int rolelist_size() const;
  inline void clear_rolelist();
  static const int kRoleListFieldNumber = 2;
  inline const ::protos::common::Role& rolelist(int index) const;
  inline ::protos::common::Role* mutable_rolelist(int index);
  inline ::protos::common::Role* add_rolelist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Role >&
      rolelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Role >*
      mutable_rolelist();

  // @@protoc_insertion_point(class_scope:protos.CreateResponse)
 private:
  inline void set_has_createrecode();
  inline void clear_has_createrecode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::common::Role > rolelist_;
  ::google::protobuf::int32 createrecode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_role_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_role_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static CreateResponse* default_instance_;
};
// -------------------------------------------------------------------

class RoleListRequest : public ::google::protobuf::Message {
 public:
  RoleListRequest();
  virtual ~RoleListRequest();

  RoleListRequest(const RoleListRequest& from);

  inline RoleListRequest& operator=(const RoleListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListRequest& default_instance();

  void Swap(RoleListRequest* other);

  // implements Message ----------------------------------------------

  RoleListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListRequest& from);
  void MergeFrom(const RoleListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.RoleListRequest)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_role_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_role_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoleListRequest* default_instance_;
};
// -------------------------------------------------------------------

class RoleListResponse : public ::google::protobuf::Message {
 public:
  RoleListResponse();
  virtual ~RoleListResponse();

  RoleListResponse(const RoleListResponse& from);

  inline RoleListResponse& operator=(const RoleListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListResponse& default_instance();

  void Swap(RoleListResponse* other);

  // implements Message ----------------------------------------------

  RoleListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleListResponse& from);
  void MergeFrom(const RoleListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protos.common.Role roleList = 1;
  inline int rolelist_size() const;
  inline void clear_rolelist();
  static const int kRoleListFieldNumber = 1;
  inline const ::protos::common::Role& rolelist(int index) const;
  inline ::protos::common::Role* mutable_rolelist(int index);
  inline ::protos::common::Role* add_rolelist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Role >&
      rolelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Role >*
      mutable_rolelist();

  // @@protoc_insertion_point(class_scope:protos.RoleListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::common::Role > rolelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_role_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_role_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoleListResponse* default_instance_;
};
// -------------------------------------------------------------------

class MoveRequest : public ::google::protobuf::Message {
 public:
  MoveRequest();
  virtual ~MoveRequest();

  MoveRequest(const MoveRequest& from);

  inline MoveRequest& operator=(const MoveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveRequest& default_instance();

  void Swap(MoveRequest* other);

  // implements Message ----------------------------------------------

  MoveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveRequest& from);
  void MergeFrom(const MoveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 moveX = 1;
  inline bool has_movex() const;
  inline void clear_movex();
  static const int kMoveXFieldNumber = 1;
  inline ::google::protobuf::int32 movex() const;
  inline void set_movex(::google::protobuf::int32 value);

  // required int32 moveY = 2;
  inline bool has_movey() const;
  inline void clear_movey();
  static const int kMoveYFieldNumber = 2;
  inline ::google::protobuf::int32 movey() const;
  inline void set_movey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.MoveRequest)
 private:
  inline void set_has_movex();
  inline void clear_has_movex();
  inline void set_has_movey();
  inline void clear_has_movey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 movex_;
  ::google::protobuf::int32 movey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_role_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_role_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MoveRequest* default_instance_;
};
// -------------------------------------------------------------------

class MoveResponse : public ::google::protobuf::Message {
 public:
  MoveResponse();
  virtual ~MoveResponse();

  MoveResponse(const MoveResponse& from);

  inline MoveResponse& operator=(const MoveResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveResponse& default_instance();

  void Swap(MoveResponse* other);

  // implements Message ----------------------------------------------

  MoveResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveResponse& from);
  void MergeFrom(const MoveResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 moveX = 2;
  inline bool has_movex() const;
  inline void clear_movex();
  static const int kMoveXFieldNumber = 2;
  inline ::google::protobuf::int32 movex() const;
  inline void set_movex(::google::protobuf::int32 value);

  // required int32 moveY = 3;
  inline bool has_movey() const;
  inline void clear_movey();
  static const int kMoveYFieldNumber = 3;
  inline ::google::protobuf::int32 movey() const;
  inline void set_movey(::google::protobuf::int32 value);

  // required int32 heading = 4;
  inline bool has_heading() const;
  inline void clear_heading();
  static const int kHeadingFieldNumber = 4;
  inline ::google::protobuf::int32 heading() const;
  inline void set_heading(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.MoveResponse)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_movex();
  inline void clear_has_movex();
  inline void set_has_movey();
  inline void clear_has_movey();
  inline void set_has_heading();
  inline void clear_has_heading();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 movex_;
  ::google::protobuf::int32 movey_;
  ::google::protobuf::int32 heading_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_role_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_role_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_role_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MoveResponse* default_instance_;
};
// -------------------------------------------------------------------

class ChangeNameReq : public ::google::protobuf::Message {
 public:
  ChangeNameReq();
  virtual ~ChangeNameReq();

  ChangeNameReq(const ChangeNameReq& from);

  inline ChangeNameReq& operator=(const ChangeNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeNameReq& default_instance();

  void Swap(ChangeNameReq* other);

  // implements Message ----------------------------------------------

  ChangeNameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeNameReq& from);
  void MergeFrom(const ChangeNameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string roleName = 1;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 1;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // @@protoc_insertion_point(class_scope:protos.ChangeNameReq)
 private:
  inline void set_has_rolename();
  inline void clear_has_rolename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_role_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_role_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ChangeNameReq* default_instance_;
};
// -------------------------------------------------------------------

class RoleIcons : public ::google::protobuf::Message {
 public:
  RoleIcons();
  virtual ~RoleIcons();

  RoleIcons(const RoleIcons& from);

  inline RoleIcons& operator=(const RoleIcons& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleIcons& default_instance();

  void Swap(RoleIcons* other);

  // implements Message ----------------------------------------------

  RoleIcons* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleIcons& from);
  void MergeFrom(const RoleIcons& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 icons = 1 [packed = true];
  inline int icons_size() const;
  inline void clear_icons();
  static const int kIconsFieldNumber = 1;
  inline ::google::protobuf::int32 icons(int index) const;
  inline void set_icons(int index, ::google::protobuf::int32 value);
  inline void add_icons(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      icons() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_icons();

  // @@protoc_insertion_point(class_scope:protos.RoleIcons)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > icons_;
  mutable int _icons_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_role_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_role_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoleIcons* default_instance_;
};
// -------------------------------------------------------------------

class ChangeRoleIcon : public ::google::protobuf::Message {
 public:
  ChangeRoleIcon();
  virtual ~ChangeRoleIcon();

  ChangeRoleIcon(const ChangeRoleIcon& from);

  inline ChangeRoleIcon& operator=(const ChangeRoleIcon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeRoleIcon& default_instance();

  void Swap(ChangeRoleIcon* other);

  // implements Message ----------------------------------------------

  ChangeRoleIcon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeRoleIcon& from);
  void MergeFrom(const ChangeRoleIcon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iconId = 1;
  inline bool has_iconid() const;
  inline void clear_iconid();
  static const int kIconIdFieldNumber = 1;
  inline ::google::protobuf::int32 iconid() const;
  inline void set_iconid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.ChangeRoleIcon)
 private:
  inline void set_has_iconid();
  inline void clear_has_iconid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iconid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_role_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_role_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_role_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static ChangeRoleIcon* default_instance_;
};
// -------------------------------------------------------------------

class RoleCtrlRes : public ::google::protobuf::Message {
 public:
  RoleCtrlRes();
  virtual ~RoleCtrlRes();

  RoleCtrlRes(const RoleCtrlRes& from);

  inline RoleCtrlRes& operator=(const RoleCtrlRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleCtrlRes& default_instance();

  void Swap(RoleCtrlRes* other);

  // implements Message ----------------------------------------------

  RoleCtrlRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleCtrlRes& from);
  void MergeFrom(const RoleCtrlRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .protos.common.Role role = 2;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 2;
  inline const ::protos::common::Role& role() const;
  inline ::protos::common::Role* mutable_role();
  inline ::protos::common::Role* release_role();
  inline void set_allocated_role(::protos::common::Role* role);

  // @@protoc_insertion_point(class_scope:protos.RoleCtrlRes)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_role();
  inline void clear_has_role();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protos::common::Role* role_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_role_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_role_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_role_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static RoleCtrlRes* default_instance_;
};
// ===================================================================


// ===================================================================

// CreateRequest

// required int32 roleNation = 1;
inline bool CreateRequest::has_rolenation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRequest::set_has_rolenation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRequest::clear_has_rolenation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRequest::clear_rolenation() {
  rolenation_ = 0;
  clear_has_rolenation();
}
inline ::google::protobuf::int32 CreateRequest::rolenation() const {
  return rolenation_;
}
inline void CreateRequest::set_rolenation(::google::protobuf::int32 value) {
  set_has_rolenation();
  rolenation_ = value;
}

// required string roleName = 2;
inline bool CreateRequest::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRequest::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRequest::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRequest::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& CreateRequest::rolename() const {
  return *rolename_;
}
inline void CreateRequest::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CreateRequest::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void CreateRequest::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateRequest::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* CreateRequest::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreateRequest::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CreateResponse

// required int32 createRecode = 1;
inline bool CreateResponse::has_createrecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateResponse::set_has_createrecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateResponse::clear_has_createrecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateResponse::clear_createrecode() {
  createrecode_ = 0;
  clear_has_createrecode();
}
inline ::google::protobuf::int32 CreateResponse::createrecode() const {
  return createrecode_;
}
inline void CreateResponse::set_createrecode(::google::protobuf::int32 value) {
  set_has_createrecode();
  createrecode_ = value;
}

// repeated .protos.common.Role roleList = 2;
inline int CreateResponse::rolelist_size() const {
  return rolelist_.size();
}
inline void CreateResponse::clear_rolelist() {
  rolelist_.Clear();
}
inline const ::protos::common::Role& CreateResponse::rolelist(int index) const {
  return rolelist_.Get(index);
}
inline ::protos::common::Role* CreateResponse::mutable_rolelist(int index) {
  return rolelist_.Mutable(index);
}
inline ::protos::common::Role* CreateResponse::add_rolelist() {
  return rolelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Role >&
CreateResponse::rolelist() const {
  return rolelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Role >*
CreateResponse::mutable_rolelist() {
  return &rolelist_;
}

// -------------------------------------------------------------------

// RoleListRequest

// required int32 mapId = 1;
inline bool RoleListRequest::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleListRequest::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleListRequest::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleListRequest::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 RoleListRequest::mapid() const {
  return mapid_;
}
inline void RoleListRequest::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// RoleListResponse

// repeated .protos.common.Role roleList = 1;
inline int RoleListResponse::rolelist_size() const {
  return rolelist_.size();
}
inline void RoleListResponse::clear_rolelist() {
  rolelist_.Clear();
}
inline const ::protos::common::Role& RoleListResponse::rolelist(int index) const {
  return rolelist_.Get(index);
}
inline ::protos::common::Role* RoleListResponse::mutable_rolelist(int index) {
  return rolelist_.Mutable(index);
}
inline ::protos::common::Role* RoleListResponse::add_rolelist() {
  return rolelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Role >&
RoleListResponse::rolelist() const {
  return rolelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Role >*
RoleListResponse::mutable_rolelist() {
  return &rolelist_;
}

// -------------------------------------------------------------------

// MoveRequest

// required int32 moveX = 1;
inline bool MoveRequest::has_movex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveRequest::set_has_movex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveRequest::clear_has_movex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveRequest::clear_movex() {
  movex_ = 0;
  clear_has_movex();
}
inline ::google::protobuf::int32 MoveRequest::movex() const {
  return movex_;
}
inline void MoveRequest::set_movex(::google::protobuf::int32 value) {
  set_has_movex();
  movex_ = value;
}

// required int32 moveY = 2;
inline bool MoveRequest::has_movey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveRequest::set_has_movey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveRequest::clear_has_movey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveRequest::clear_movey() {
  movey_ = 0;
  clear_has_movey();
}
inline ::google::protobuf::int32 MoveRequest::movey() const {
  return movey_;
}
inline void MoveRequest::set_movey(::google::protobuf::int32 value) {
  set_has_movey();
  movey_ = value;
}

// -------------------------------------------------------------------

// MoveResponse

// required int32 roleId = 1;
inline bool MoveResponse::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveResponse::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveResponse::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveResponse::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 MoveResponse::roleid() const {
  return roleid_;
}
inline void MoveResponse::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 moveX = 2;
inline bool MoveResponse::has_movex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveResponse::set_has_movex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveResponse::clear_has_movex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveResponse::clear_movex() {
  movex_ = 0;
  clear_has_movex();
}
inline ::google::protobuf::int32 MoveResponse::movex() const {
  return movex_;
}
inline void MoveResponse::set_movex(::google::protobuf::int32 value) {
  set_has_movex();
  movex_ = value;
}

// required int32 moveY = 3;
inline bool MoveResponse::has_movey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveResponse::set_has_movey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveResponse::clear_has_movey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveResponse::clear_movey() {
  movey_ = 0;
  clear_has_movey();
}
inline ::google::protobuf::int32 MoveResponse::movey() const {
  return movey_;
}
inline void MoveResponse::set_movey(::google::protobuf::int32 value) {
  set_has_movey();
  movey_ = value;
}

// required int32 heading = 4;
inline bool MoveResponse::has_heading() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoveResponse::set_has_heading() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoveResponse::clear_has_heading() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoveResponse::clear_heading() {
  heading_ = 0;
  clear_has_heading();
}
inline ::google::protobuf::int32 MoveResponse::heading() const {
  return heading_;
}
inline void MoveResponse::set_heading(::google::protobuf::int32 value) {
  set_has_heading();
  heading_ = value;
}

// -------------------------------------------------------------------

// ChangeNameReq

// required string roleName = 1;
inline bool ChangeNameReq::has_rolename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeNameReq::set_has_rolename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeNameReq::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeNameReq::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& ChangeNameReq::rolename() const {
  return *rolename_;
}
inline void ChangeNameReq::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void ChangeNameReq::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void ChangeNameReq::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChangeNameReq::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* ChangeNameReq::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChangeNameReq::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// RoleIcons

// repeated int32 icons = 1 [packed = true];
inline int RoleIcons::icons_size() const {
  return icons_.size();
}
inline void RoleIcons::clear_icons() {
  icons_.Clear();
}
inline ::google::protobuf::int32 RoleIcons::icons(int index) const {
  return icons_.Get(index);
}
inline void RoleIcons::set_icons(int index, ::google::protobuf::int32 value) {
  icons_.Set(index, value);
}
inline void RoleIcons::add_icons(::google::protobuf::int32 value) {
  icons_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoleIcons::icons() const {
  return icons_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoleIcons::mutable_icons() {
  return &icons_;
}

// -------------------------------------------------------------------

// ChangeRoleIcon

// required int32 iconId = 1;
inline bool ChangeRoleIcon::has_iconid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeRoleIcon::set_has_iconid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeRoleIcon::clear_has_iconid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeRoleIcon::clear_iconid() {
  iconid_ = 0;
  clear_has_iconid();
}
inline ::google::protobuf::int32 ChangeRoleIcon::iconid() const {
  return iconid_;
}
inline void ChangeRoleIcon::set_iconid(::google::protobuf::int32 value) {
  set_has_iconid();
  iconid_ = value;
}

// -------------------------------------------------------------------

// RoleCtrlRes

// required int32 result = 1;
inline bool RoleCtrlRes::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleCtrlRes::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleCtrlRes::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleCtrlRes::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 RoleCtrlRes::result() const {
  return result_;
}
inline void RoleCtrlRes::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .protos.common.Role role = 2;
inline bool RoleCtrlRes::has_role() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleCtrlRes::set_has_role() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleCtrlRes::clear_has_role() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleCtrlRes::clear_role() {
  if (role_ != NULL) role_->::protos::common::Role::Clear();
  clear_has_role();
}
inline const ::protos::common::Role& RoleCtrlRes::role() const {
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
inline ::protos::common::Role* RoleCtrlRes::mutable_role() {
  set_has_role();
  if (role_ == NULL) role_ = new ::protos::common::Role;
  return role_;
}
inline ::protos::common::Role* RoleCtrlRes::release_role() {
  clear_has_role();
  ::protos::common::Role* temp = role_;
  role_ = NULL;
  return temp;
}
inline void RoleCtrlRes::set_allocated_role(::protos::common::Role* role) {
  delete role_;
  role_ = role;
  if (role) {
    set_has_role();
  } else {
    clear_has_role();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_role_5fprotocol_2eproto__INCLUDED
