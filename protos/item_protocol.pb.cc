// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item_protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "item_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protos {

namespace {

const ::google::protobuf::Descriptor* WareHouseRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WareHouseRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* WareHouseResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WareHouseResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemInfoRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemInfoRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExtendResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExtendResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResetResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResetResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemOperation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemOperation_reflection_ = NULL;
const ::google::protobuf::Descriptor* operationResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  operationResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* ArmorListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArmorListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ArmorListRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArmorListRes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_item_5fprotocol_2eproto() {
  protobuf_AddDesc_item_5fprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "item_protocol.proto");
  GOOGLE_CHECK(file != NULL);
  WareHouseRequest_descriptor_ = file->message_type(0);
  static const int WareHouseRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareHouseRequest, tabindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareHouseRequest, equip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareHouseRequest, roleheroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareHouseRequest, pos_),
  };
  WareHouseRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WareHouseRequest_descriptor_,
      WareHouseRequest::default_instance_,
      WareHouseRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareHouseRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareHouseRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WareHouseRequest));
  WareHouseResponse_descriptor_ = file->message_type(1);
  static const int WareHouseResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareHouseResponse, maxnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareHouseResponse, itemlist_),
  };
  WareHouseResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WareHouseResponse_descriptor_,
      WareHouseResponse::default_instance_,
      WareHouseResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareHouseResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WareHouseResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WareHouseResponse));
  ItemInfoReq_descriptor_ = file->message_type(2);
  static const int ItemInfoReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfoReq, itemid_),
  };
  ItemInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemInfoReq_descriptor_,
      ItemInfoReq::default_instance_,
      ItemInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemInfoReq));
  ItemInfoRes_descriptor_ = file->message_type(3);
  static const int ItemInfoRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfoRes, item_),
  };
  ItemInfoRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemInfoRes_descriptor_,
      ItemInfoRes::default_instance_,
      ItemInfoRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfoRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemInfoRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemInfoRes));
  ExtendResponse_descriptor_ = file->message_type(4);
  static const int ExtendResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendResponse, rolecoin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendResponse, gridnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendResponse, rolegold_),
  };
  ExtendResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExtendResponse_descriptor_,
      ExtendResponse::default_instance_,
      ExtendResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExtendResponse));
  ResetResponse_descriptor_ = file->message_type(5);
  static const int ResetResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetResponse, itemlist_),
  };
  ResetResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResetResponse_descriptor_,
      ResetResponse::default_instance_,
      ResetResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResetResponse));
  ItemOperation_descriptor_ = file->message_type(6);
  static const int ItemOperation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemOperation, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemOperation, num_),
  };
  ItemOperation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemOperation_descriptor_,
      ItemOperation::default_instance_,
      ItemOperation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemOperation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemOperation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemOperation));
  operationResult_descriptor_ = file->message_type(7);
  static const int operationResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(operationResult, result_),
  };
  operationResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      operationResult_descriptor_,
      operationResult::default_instance_,
      operationResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(operationResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(operationResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(operationResult));
  ArmorListReq_descriptor_ = file->message_type(8);
  static const int ArmorListReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmorListReq, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmorListReq, mark_),
  };
  ArmorListReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ArmorListReq_descriptor_,
      ArmorListReq::default_instance_,
      ArmorListReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmorListReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmorListReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ArmorListReq));
  ArmorListRes_descriptor_ = file->message_type(9);
  static const int ArmorListRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmorListRes, armorlist_),
  };
  ArmorListRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ArmorListRes_descriptor_,
      ArmorListRes::default_instance_,
      ArmorListRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmorListRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArmorListRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ArmorListRes));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_item_5fprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WareHouseRequest_descriptor_, &WareHouseRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WareHouseResponse_descriptor_, &WareHouseResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemInfoReq_descriptor_, &ItemInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemInfoRes_descriptor_, &ItemInfoRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExtendResponse_descriptor_, &ExtendResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResetResponse_descriptor_, &ResetResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemOperation_descriptor_, &ItemOperation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    operationResult_descriptor_, &operationResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ArmorListReq_descriptor_, &ArmorListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ArmorListRes_descriptor_, &ArmorListRes::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_item_5fprotocol_2eproto() {
  delete WareHouseRequest::default_instance_;
  delete WareHouseRequest_reflection_;
  delete WareHouseResponse::default_instance_;
  delete WareHouseResponse_reflection_;
  delete ItemInfoReq::default_instance_;
  delete ItemInfoReq_reflection_;
  delete ItemInfoRes::default_instance_;
  delete ItemInfoRes_reflection_;
  delete ExtendResponse::default_instance_;
  delete ExtendResponse_reflection_;
  delete ResetResponse::default_instance_;
  delete ResetResponse_reflection_;
  delete ItemOperation::default_instance_;
  delete ItemOperation_reflection_;
  delete operationResult::default_instance_;
  delete operationResult_reflection_;
  delete ArmorListReq::default_instance_;
  delete ArmorListReq_reflection_;
  delete ArmorListRes::default_instance_;
  delete ArmorListRes_reflection_;
}

void protobuf_AddDesc_item_5fprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protos::common::protobuf_AddDesc_common_2fitem_5fcommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023item_protocol.proto\022\006protos\032\030common/it"
    "em_common.proto\"T\n\020WareHouseRequest\022\020\n\010t"
    "abIndex\030\001 \002(\005\022\r\n\005equip\030\002 \001(\010\022\022\n\nroleHero"
    "Id\030\003 \001(\005\022\013\n\003pos\030\004 \001(\005\"J\n\021WareHouseRespon"
    "se\022\016\n\006maxNum\030\001 \001(\005\022%\n\010itemList\030\002 \003(\0132\023.p"
    "rotos.common.Item\"\035\n\013ItemInfoReq\022\016\n\006item"
    "Id\030\001 \002(\005\"0\n\013ItemInfoRes\022!\n\004item\030\001 \002(\0132\023."
    "protos.common.Item\"U\n\016ExtendResponse\022\016\n\006"
    "result\030\001 \002(\005\022\020\n\010roleCoin\030\002 \001(\005\022\017\n\007gridNu"
    "m\030\003 \001(\005\022\020\n\010roleGold\030\004 \001(\005\"F\n\rResetRespon"
    "se\022\016\n\006result\030\001 \002(\010\022%\n\010itemList\030\002 \003(\0132\023.p"
    "rotos.common.Item\",\n\rItemOperation\022\016\n\006it"
    "emId\030\001 \002(\005\022\013\n\003num\030\002 \001(\005\"!\n\017operationResu"
    "lt\022\016\n\006result\030\001 \002(\010\",\n\014ArmorListReq\022\016\n\006it"
    "emId\030\001 \002(\005\022\014\n\004mark\030\002 \001(\005\"6\n\014ArmorListRes"
    "\022&\n\tarmorList\030\001 \003(\0132\023.protos.common.Item"
    "B0\n\036anvin.server.gameserver.protosB\014Item"
    "ProtocolH\001", 690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "item_protocol.proto", &protobuf_RegisterTypes);
  WareHouseRequest::default_instance_ = new WareHouseRequest();
  WareHouseResponse::default_instance_ = new WareHouseResponse();
  ItemInfoReq::default_instance_ = new ItemInfoReq();
  ItemInfoRes::default_instance_ = new ItemInfoRes();
  ExtendResponse::default_instance_ = new ExtendResponse();
  ResetResponse::default_instance_ = new ResetResponse();
  ItemOperation::default_instance_ = new ItemOperation();
  operationResult::default_instance_ = new operationResult();
  ArmorListReq::default_instance_ = new ArmorListReq();
  ArmorListRes::default_instance_ = new ArmorListRes();
  WareHouseRequest::default_instance_->InitAsDefaultInstance();
  WareHouseResponse::default_instance_->InitAsDefaultInstance();
  ItemInfoReq::default_instance_->InitAsDefaultInstance();
  ItemInfoRes::default_instance_->InitAsDefaultInstance();
  ExtendResponse::default_instance_->InitAsDefaultInstance();
  ResetResponse::default_instance_->InitAsDefaultInstance();
  ItemOperation::default_instance_->InitAsDefaultInstance();
  operationResult::default_instance_->InitAsDefaultInstance();
  ArmorListReq::default_instance_->InitAsDefaultInstance();
  ArmorListRes::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_item_5fprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_item_5fprotocol_2eproto {
  StaticDescriptorInitializer_item_5fprotocol_2eproto() {
    protobuf_AddDesc_item_5fprotocol_2eproto();
  }
} static_descriptor_initializer_item_5fprotocol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int WareHouseRequest::kTabIndexFieldNumber;
const int WareHouseRequest::kEquipFieldNumber;
const int WareHouseRequest::kRoleHeroIdFieldNumber;
const int WareHouseRequest::kPosFieldNumber;
#endif  // !_MSC_VER

WareHouseRequest::WareHouseRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WareHouseRequest::InitAsDefaultInstance() {
}

WareHouseRequest::WareHouseRequest(const WareHouseRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WareHouseRequest::SharedCtor() {
  _cached_size_ = 0;
  tabindex_ = 0;
  equip_ = false;
  roleheroid_ = 0;
  pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WareHouseRequest::~WareHouseRequest() {
  SharedDtor();
}

void WareHouseRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WareHouseRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WareHouseRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WareHouseRequest_descriptor_;
}

const WareHouseRequest& WareHouseRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fprotocol_2eproto();
  return *default_instance_;
}

WareHouseRequest* WareHouseRequest::default_instance_ = NULL;

WareHouseRequest* WareHouseRequest::New() const {
  return new WareHouseRequest;
}

void WareHouseRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tabindex_ = 0;
    equip_ = false;
    roleheroid_ = 0;
    pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WareHouseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 tabIndex = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tabindex_)));
          set_has_tabindex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_equip;
        break;
      }

      // optional bool equip = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &equip_)));
          set_has_equip();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_roleHeroId;
        break;
      }

      // optional int32 roleHeroId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleHeroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleheroid_)));
          set_has_roleheroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pos;
        break;
      }

      // optional int32 pos = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WareHouseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 tabIndex = 1;
  if (has_tabindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tabindex(), output);
  }

  // optional bool equip = 2;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->equip(), output);
  }

  // optional int32 roleHeroId = 3;
  if (has_roleheroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->roleheroid(), output);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pos(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WareHouseRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 tabIndex = 1;
  if (has_tabindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tabindex(), target);
  }

  // optional bool equip = 2;
  if (has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->equip(), target);
  }

  // optional int32 roleHeroId = 3;
  if (has_roleheroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->roleheroid(), target);
  }

  // optional int32 pos = 4;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pos(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WareHouseRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 tabIndex = 1;
    if (has_tabindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tabindex());
    }

    // optional bool equip = 2;
    if (has_equip()) {
      total_size += 1 + 1;
    }

    // optional int32 roleHeroId = 3;
    if (has_roleheroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleheroid());
    }

    // optional int32 pos = 4;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WareHouseRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WareHouseRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WareHouseRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WareHouseRequest::MergeFrom(const WareHouseRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tabindex()) {
      set_tabindex(from.tabindex());
    }
    if (from.has_equip()) {
      set_equip(from.equip());
    }
    if (from.has_roleheroid()) {
      set_roleheroid(from.roleheroid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WareHouseRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WareHouseRequest::CopyFrom(const WareHouseRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WareHouseRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void WareHouseRequest::Swap(WareHouseRequest* other) {
  if (other != this) {
    std::swap(tabindex_, other->tabindex_);
    std::swap(equip_, other->equip_);
    std::swap(roleheroid_, other->roleheroid_);
    std::swap(pos_, other->pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WareHouseRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WareHouseRequest_descriptor_;
  metadata.reflection = WareHouseRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WareHouseResponse::kMaxNumFieldNumber;
const int WareHouseResponse::kItemListFieldNumber;
#endif  // !_MSC_VER

WareHouseResponse::WareHouseResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WareHouseResponse::InitAsDefaultInstance() {
}

WareHouseResponse::WareHouseResponse(const WareHouseResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WareHouseResponse::SharedCtor() {
  _cached_size_ = 0;
  maxnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WareHouseResponse::~WareHouseResponse() {
  SharedDtor();
}

void WareHouseResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WareHouseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WareHouseResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WareHouseResponse_descriptor_;
}

const WareHouseResponse& WareHouseResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fprotocol_2eproto();
  return *default_instance_;
}

WareHouseResponse* WareHouseResponse::default_instance_ = NULL;

WareHouseResponse* WareHouseResponse::New() const {
  return new WareHouseResponse;
}

void WareHouseResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    maxnum_ = 0;
  }
  itemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WareHouseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 maxNum = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxnum_)));
          set_has_maxnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_itemList;
        break;
      }

      // repeated .protos.common.Item itemList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_itemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_itemList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WareHouseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 maxNum = 1;
  if (has_maxnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->maxnum(), output);
  }

  // repeated .protos.common.Item itemList = 2;
  for (int i = 0; i < this->itemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WareHouseResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 maxNum = 1;
  if (has_maxnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->maxnum(), target);
  }

  // repeated .protos.common.Item itemList = 2;
  for (int i = 0; i < this->itemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WareHouseResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 maxNum = 1;
    if (has_maxnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxnum());
    }

  }
  // repeated .protos.common.Item itemList = 2;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WareHouseResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WareHouseResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WareHouseResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WareHouseResponse::MergeFrom(const WareHouseResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemlist_.MergeFrom(from.itemlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maxnum()) {
      set_maxnum(from.maxnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WareHouseResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WareHouseResponse::CopyFrom(const WareHouseResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WareHouseResponse::IsInitialized() const {

  for (int i = 0; i < itemlist_size(); i++) {
    if (!this->itemlist(i).IsInitialized()) return false;
  }
  return true;
}

void WareHouseResponse::Swap(WareHouseResponse* other) {
  if (other != this) {
    std::swap(maxnum_, other->maxnum_);
    itemlist_.Swap(&other->itemlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WareHouseResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WareHouseResponse_descriptor_;
  metadata.reflection = WareHouseResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemInfoReq::kItemIdFieldNumber;
#endif  // !_MSC_VER

ItemInfoReq::ItemInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemInfoReq::InitAsDefaultInstance() {
}

ItemInfoReq::ItemInfoReq(const ItemInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemInfoReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemInfoReq::~ItemInfoReq() {
  SharedDtor();
}

void ItemInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemInfoReq_descriptor_;
}

const ItemInfoReq& ItemInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fprotocol_2eproto();
  return *default_instance_;
}

ItemInfoReq* ItemInfoReq::default_instance_ = NULL;

ItemInfoReq* ItemInfoReq::New() const {
  return new ItemInfoReq;
}

void ItemInfoReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 itemId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 itemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 itemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemInfoReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 itemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemInfoReq::MergeFrom(const ItemInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemInfoReq::CopyFrom(const ItemInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemInfoReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ItemInfoReq::Swap(ItemInfoReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemInfoReq_descriptor_;
  metadata.reflection = ItemInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemInfoRes::kItemFieldNumber;
#endif  // !_MSC_VER

ItemInfoRes::ItemInfoRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemInfoRes::InitAsDefaultInstance() {
  item_ = const_cast< ::protos::common::Item*>(&::protos::common::Item::default_instance());
}

ItemInfoRes::ItemInfoRes(const ItemInfoRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemInfoRes::SharedCtor() {
  _cached_size_ = 0;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemInfoRes::~ItemInfoRes() {
  SharedDtor();
}

void ItemInfoRes::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void ItemInfoRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemInfoRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemInfoRes_descriptor_;
}

const ItemInfoRes& ItemInfoRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fprotocol_2eproto();
  return *default_instance_;
}

ItemInfoRes* ItemInfoRes::default_instance_ = NULL;

ItemInfoRes* ItemInfoRes::New() const {
  return new ItemInfoRes;
}

void ItemInfoRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_item()) {
      if (item_ != NULL) item_->::protos::common::Item::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemInfoRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protos.common.Item item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemInfoRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protos.common.Item item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemInfoRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protos.common.Item item = 1;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemInfoRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protos.common.Item item = 1;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemInfoRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemInfoRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemInfoRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemInfoRes::MergeFrom(const ItemInfoRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item()) {
      mutable_item()->::protos::common::Item::MergeFrom(from.item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemInfoRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemInfoRes::CopyFrom(const ItemInfoRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemInfoRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_item()) {
    if (!this->item().IsInitialized()) return false;
  }
  return true;
}

void ItemInfoRes::Swap(ItemInfoRes* other) {
  if (other != this) {
    std::swap(item_, other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemInfoRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemInfoRes_descriptor_;
  metadata.reflection = ItemInfoRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExtendResponse::kResultFieldNumber;
const int ExtendResponse::kRoleCoinFieldNumber;
const int ExtendResponse::kGridNumFieldNumber;
const int ExtendResponse::kRoleGoldFieldNumber;
#endif  // !_MSC_VER

ExtendResponse::ExtendResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExtendResponse::InitAsDefaultInstance() {
}

ExtendResponse::ExtendResponse(const ExtendResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExtendResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  rolecoin_ = 0;
  gridnum_ = 0;
  rolegold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExtendResponse::~ExtendResponse() {
  SharedDtor();
}

void ExtendResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExtendResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtendResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExtendResponse_descriptor_;
}

const ExtendResponse& ExtendResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fprotocol_2eproto();
  return *default_instance_;
}

ExtendResponse* ExtendResponse::default_instance_ = NULL;

ExtendResponse* ExtendResponse::New() const {
  return new ExtendResponse;
}

void ExtendResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    rolecoin_ = 0;
    gridnum_ = 0;
    rolegold_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExtendResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_roleCoin;
        break;
      }

      // optional int32 roleCoin = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleCoin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolecoin_)));
          set_has_rolecoin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gridNum;
        break;
      }

      // optional int32 gridNum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gridNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gridnum_)));
          set_has_gridnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_roleGold;
        break;
      }

      // optional int32 roleGold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleGold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rolegold_)));
          set_has_rolegold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExtendResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 roleCoin = 2;
  if (has_rolecoin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rolecoin(), output);
  }

  // optional int32 gridNum = 3;
  if (has_gridnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gridnum(), output);
  }

  // optional int32 roleGold = 4;
  if (has_rolegold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rolegold(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExtendResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 roleCoin = 2;
  if (has_rolecoin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rolecoin(), target);
  }

  // optional int32 gridNum = 3;
  if (has_gridnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gridnum(), target);
  }

  // optional int32 roleGold = 4;
  if (has_rolegold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rolegold(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExtendResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 roleCoin = 2;
    if (has_rolecoin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolecoin());
    }

    // optional int32 gridNum = 3;
    if (has_gridnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gridnum());
    }

    // optional int32 roleGold = 4;
    if (has_rolegold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rolegold());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtendResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExtendResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExtendResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExtendResponse::MergeFrom(const ExtendResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_rolecoin()) {
      set_rolecoin(from.rolecoin());
    }
    if (from.has_gridnum()) {
      set_gridnum(from.gridnum());
    }
    if (from.has_rolegold()) {
      set_rolegold(from.rolegold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExtendResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtendResponse::CopyFrom(const ExtendResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtendResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ExtendResponse::Swap(ExtendResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(rolecoin_, other->rolecoin_);
    std::swap(gridnum_, other->gridnum_);
    std::swap(rolegold_, other->rolegold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExtendResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExtendResponse_descriptor_;
  metadata.reflection = ExtendResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResetResponse::kResultFieldNumber;
const int ResetResponse::kItemListFieldNumber;
#endif  // !_MSC_VER

ResetResponse::ResetResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ResetResponse::InitAsDefaultInstance() {
}

ResetResponse::ResetResponse(const ResetResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ResetResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResetResponse::~ResetResponse() {
  SharedDtor();
}

void ResetResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResetResponse_descriptor_;
}

const ResetResponse& ResetResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fprotocol_2eproto();
  return *default_instance_;
}

ResetResponse* ResetResponse::default_instance_ = NULL;

ResetResponse* ResetResponse::New() const {
  return new ResetResponse;
}

void ResetResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = false;
  }
  itemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_itemList;
        break;
      }

      // repeated .protos.common.Item itemList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_itemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_itemList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ResetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  // repeated .protos.common.Item itemList = 2;
  for (int i = 0; i < this->itemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ResetResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  // repeated .protos.common.Item itemList = 2;
  for (int i = 0; i < this->itemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ResetResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool result = 1;
    if (has_result()) {
      total_size += 1 + 1;
    }

  }
  // repeated .protos.common.Item itemList = 2;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResetResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResetResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResetResponse::MergeFrom(const ResetResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemlist_.MergeFrom(from.itemlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResetResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetResponse::CopyFrom(const ResetResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < itemlist_size(); i++) {
    if (!this->itemlist(i).IsInitialized()) return false;
  }
  return true;
}

void ResetResponse::Swap(ResetResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    itemlist_.Swap(&other->itemlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResetResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResetResponse_descriptor_;
  metadata.reflection = ResetResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemOperation::kItemIdFieldNumber;
const int ItemOperation::kNumFieldNumber;
#endif  // !_MSC_VER

ItemOperation::ItemOperation()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemOperation::InitAsDefaultInstance() {
}

ItemOperation::ItemOperation(const ItemOperation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemOperation::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0;
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemOperation::~ItemOperation() {
  SharedDtor();
}

void ItemOperation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemOperation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemOperation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemOperation_descriptor_;
}

const ItemOperation& ItemOperation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fprotocol_2eproto();
  return *default_instance_;
}

ItemOperation* ItemOperation::default_instance_ = NULL;

ItemOperation* ItemOperation::New() const {
  return new ItemOperation;
}

void ItemOperation::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = 0;
    num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 itemId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }

      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 itemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemOperation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 itemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemOperation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 itemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemOperation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemOperation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemOperation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemOperation::MergeFrom(const ItemOperation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemOperation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemOperation::CopyFrom(const ItemOperation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemOperation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ItemOperation::Swap(ItemOperation* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(num_, other->num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemOperation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemOperation_descriptor_;
  metadata.reflection = ItemOperation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int operationResult::kResultFieldNumber;
#endif  // !_MSC_VER

operationResult::operationResult()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void operationResult::InitAsDefaultInstance() {
}

operationResult::operationResult(const operationResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void operationResult::SharedCtor() {
  _cached_size_ = 0;
  result_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

operationResult::~operationResult() {
  SharedDtor();
}

void operationResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void operationResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* operationResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return operationResult_descriptor_;
}

const operationResult& operationResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fprotocol_2eproto();
  return *default_instance_;
}

operationResult* operationResult::default_instance_ = NULL;

operationResult* operationResult::New() const {
  return new operationResult;
}

void operationResult::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool operationResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void operationResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* operationResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int operationResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool result = 1;
    if (has_result()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void operationResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const operationResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const operationResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void operationResult::MergeFrom(const operationResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void operationResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void operationResult::CopyFrom(const operationResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool operationResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void operationResult::Swap(operationResult* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata operationResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = operationResult_descriptor_;
  metadata.reflection = operationResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ArmorListReq::kItemIdFieldNumber;
const int ArmorListReq::kMarkFieldNumber;
#endif  // !_MSC_VER

ArmorListReq::ArmorListReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ArmorListReq::InitAsDefaultInstance() {
}

ArmorListReq::ArmorListReq(const ArmorListReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ArmorListReq::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0;
  mark_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ArmorListReq::~ArmorListReq() {
  SharedDtor();
}

void ArmorListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ArmorListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArmorListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArmorListReq_descriptor_;
}

const ArmorListReq& ArmorListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fprotocol_2eproto();
  return *default_instance_;
}

ArmorListReq* ArmorListReq::default_instance_ = NULL;

ArmorListReq* ArmorListReq::New() const {
  return new ArmorListReq;
}

void ArmorListReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = 0;
    mark_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ArmorListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 itemId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mark;
        break;
      }

      // optional int32 mark = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mark:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mark_)));
          set_has_mark();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ArmorListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 itemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 mark = 2;
  if (has_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mark(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ArmorListReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 itemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 mark = 2;
  if (has_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mark(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ArmorListReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 itemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 mark = 2;
    if (has_mark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mark());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArmorListReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ArmorListReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ArmorListReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ArmorListReq::MergeFrom(const ArmorListReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_mark()) {
      set_mark(from.mark());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ArmorListReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArmorListReq::CopyFrom(const ArmorListReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArmorListReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ArmorListReq::Swap(ArmorListReq* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(mark_, other->mark_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ArmorListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArmorListReq_descriptor_;
  metadata.reflection = ArmorListReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ArmorListRes::kArmorListFieldNumber;
#endif  // !_MSC_VER

ArmorListRes::ArmorListRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ArmorListRes::InitAsDefaultInstance() {
}

ArmorListRes::ArmorListRes(const ArmorListRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ArmorListRes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ArmorListRes::~ArmorListRes() {
  SharedDtor();
}

void ArmorListRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ArmorListRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArmorListRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArmorListRes_descriptor_;
}

const ArmorListRes& ArmorListRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_item_5fprotocol_2eproto();
  return *default_instance_;
}

ArmorListRes* ArmorListRes::default_instance_ = NULL;

ArmorListRes* ArmorListRes::New() const {
  return new ArmorListRes;
}

void ArmorListRes::Clear() {
  armorlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ArmorListRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protos.common.Item armorList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_armorList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_armorlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_armorList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ArmorListRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .protos.common.Item armorList = 1;
  for (int i = 0; i < this->armorlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->armorlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ArmorListRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .protos.common.Item armorList = 1;
  for (int i = 0; i < this->armorlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->armorlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ArmorListRes::ByteSize() const {
  int total_size = 0;

  // repeated .protos.common.Item armorList = 1;
  total_size += 1 * this->armorlist_size();
  for (int i = 0; i < this->armorlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->armorlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArmorListRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ArmorListRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ArmorListRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ArmorListRes::MergeFrom(const ArmorListRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  armorlist_.MergeFrom(from.armorlist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ArmorListRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArmorListRes::CopyFrom(const ArmorListRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArmorListRes::IsInitialized() const {

  for (int i = 0; i < armorlist_size(); i++) {
    if (!this->armorlist(i).IsInitialized()) return false;
  }
  return true;
}

void ArmorListRes::Swap(ArmorListRes* other) {
  if (other != this) {
    armorlist_.Swap(&other->armorlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ArmorListRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArmorListRes_descriptor_;
  metadata.reflection = ArmorListRes_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)
