// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vip_protocol.proto

#ifndef PROTOBUF_vip_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_vip_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/prize_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_vip_5fprotocol_2eproto();
void protobuf_AssignDesc_vip_5fprotocol_2eproto();
void protobuf_ShutdownFile_vip_5fprotocol_2eproto();

class VipInfoRes;
class VipPrivReq;
class VipShopRes;
class BuyCardReq;
class BuyCardRes;
class VipData;
class GoldCard;

// ===================================================================

class VipInfoRes : public ::google::protobuf::Message {
 public:
  VipInfoRes();
  virtual ~VipInfoRes();

  VipInfoRes(const VipInfoRes& from);

  inline VipInfoRes& operator=(const VipInfoRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipInfoRes& default_instance();

  void Swap(VipInfoRes* other);

  // implements Message ----------------------------------------------

  VipInfoRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipInfoRes& from);
  void MergeFrom(const VipInfoRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 nextExp = 3;
  inline bool has_nextexp() const;
  inline void clear_nextexp();
  static const int kNextExpFieldNumber = 3;
  inline ::google::protobuf::int32 nextexp() const;
  inline void set_nextexp(::google::protobuf::int32 value);

  // optional .protos.VipData data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::protos::VipData& data() const;
  inline ::protos::VipData* mutable_data();
  inline ::protos::VipData* release_data();
  inline void set_allocated_data(::protos::VipData* data);

  // @@protoc_insertion_point(class_scope:protos.VipInfoRes)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_nextexp();
  inline void clear_has_nextexp();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  ::protos::VipData* data_;
  ::google::protobuf::int32 nextexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_vip_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_vip_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_vip_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static VipInfoRes* default_instance_;
};
// -------------------------------------------------------------------

class VipPrivReq : public ::google::protobuf::Message {
 public:
  VipPrivReq();
  virtual ~VipPrivReq();

  VipPrivReq(const VipPrivReq& from);

  inline VipPrivReq& operator=(const VipPrivReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipPrivReq& default_instance();

  void Swap(VipPrivReq* other);

  // implements Message ----------------------------------------------

  VipPrivReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipPrivReq& from);
  void MergeFrom(const VipPrivReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.VipPrivReq)
 private:
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_vip_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_vip_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_vip_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static VipPrivReq* default_instance_;
};
// -------------------------------------------------------------------

class VipShopRes : public ::google::protobuf::Message {
 public:
  VipShopRes();
  virtual ~VipShopRes();

  VipShopRes(const VipShopRes& from);

  inline VipShopRes& operator=(const VipShopRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipShopRes& default_instance();

  void Swap(VipShopRes* other);

  // implements Message ----------------------------------------------

  VipShopRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipShopRes& from);
  void MergeFrom(const VipShopRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protos.GoldCard carList = 1;
  inline int carlist_size() const;
  inline void clear_carlist();
  static const int kCarListFieldNumber = 1;
  inline const ::protos::GoldCard& carlist(int index) const;
  inline ::protos::GoldCard* mutable_carlist(int index);
  inline ::protos::GoldCard* add_carlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::GoldCard >&
      carlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::GoldCard >*
      mutable_carlist();

  // @@protoc_insertion_point(class_scope:protos.VipShopRes)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::GoldCard > carlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_vip_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_vip_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_vip_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static VipShopRes* default_instance_;
};
// -------------------------------------------------------------------

class BuyCardReq : public ::google::protobuf::Message {
 public:
  BuyCardReq();
  virtual ~BuyCardReq();

  BuyCardReq(const BuyCardReq& from);

  inline BuyCardReq& operator=(const BuyCardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyCardReq& default_instance();

  void Swap(BuyCardReq* other);

  // implements Message ----------------------------------------------

  BuyCardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyCardReq& from);
  void MergeFrom(const BuyCardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cardId = 1;
  inline bool has_cardid() const;
  inline void clear_cardid();
  static const int kCardIdFieldNumber = 1;
  inline ::google::protobuf::int32 cardid() const;
  inline void set_cardid(::google::protobuf::int32 value);

  // optional string deviceId = 2;
  inline bool has_deviceid() const;
  inline void clear_deviceid();
  static const int kDeviceIdFieldNumber = 2;
  inline const ::std::string& deviceid() const;
  inline void set_deviceid(const ::std::string& value);
  inline void set_deviceid(const char* value);
  inline void set_deviceid(const char* value, size_t size);
  inline ::std::string* mutable_deviceid();
  inline ::std::string* release_deviceid();
  inline void set_allocated_deviceid(::std::string* deviceid);

  // optional string mobileNo = 3;
  inline bool has_mobileno() const;
  inline void clear_mobileno();
  static const int kMobileNoFieldNumber = 3;
  inline const ::std::string& mobileno() const;
  inline void set_mobileno(const ::std::string& value);
  inline void set_mobileno(const char* value);
  inline void set_mobileno(const char* value, size_t size);
  inline ::std::string* mutable_mobileno();
  inline ::std::string* release_mobileno();
  inline void set_allocated_mobileno(::std::string* mobileno);

  // optional string smsNo = 4;
  inline bool has_smsno() const;
  inline void clear_smsno();
  static const int kSmsNoFieldNumber = 4;
  inline const ::std::string& smsno() const;
  inline void set_smsno(const ::std::string& value);
  inline void set_smsno(const char* value);
  inline void set_smsno(const char* value, size_t size);
  inline ::std::string* mutable_smsno();
  inline ::std::string* release_smsno();
  inline void set_allocated_smsno(::std::string* smsno);

  // optional int32 step = 5;
  inline bool has_step() const;
  inline void clear_step();
  static const int kStepFieldNumber = 5;
  inline ::google::protobuf::int32 step() const;
  inline void set_step(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.BuyCardReq)
 private:
  inline void set_has_cardid();
  inline void clear_has_cardid();
  inline void set_has_deviceid();
  inline void clear_has_deviceid();
  inline void set_has_mobileno();
  inline void clear_has_mobileno();
  inline void set_has_smsno();
  inline void clear_has_smsno();
  inline void set_has_step();
  inline void clear_has_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* deviceid_;
  ::std::string* mobileno_;
  ::google::protobuf::int32 cardid_;
  ::google::protobuf::int32 step_;
  ::std::string* smsno_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_vip_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_vip_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_vip_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BuyCardReq* default_instance_;
};
// -------------------------------------------------------------------

class BuyCardRes : public ::google::protobuf::Message {
 public:
  BuyCardRes();
  virtual ~BuyCardRes();

  BuyCardRes(const BuyCardRes& from);

  inline BuyCardRes& operator=(const BuyCardRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyCardRes& default_instance();

  void Swap(BuyCardRes* other);

  // implements Message ----------------------------------------------

  BuyCardRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyCardRes& from);
  void MergeFrom(const BuyCardRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional string errorCode = 6;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 6;
  inline const ::std::string& errorcode() const;
  inline void set_errorcode(const ::std::string& value);
  inline void set_errorcode(const char* value);
  inline void set_errorcode(const char* value, size_t size);
  inline ::std::string* mutable_errorcode();
  inline ::std::string* release_errorcode();
  inline void set_allocated_errorcode(::std::string* errorcode);

  // optional int32 roleGold = 2;
  inline bool has_rolegold() const;
  inline void clear_rolegold();
  static const int kRoleGoldFieldNumber = 2;
  inline ::google::protobuf::int32 rolegold() const;
  inline void set_rolegold(::google::protobuf::int32 value);

  // optional int32 vipLevel = 3;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 3;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // optional int32 vipExp = 4;
  inline bool has_vipexp() const;
  inline void clear_vipexp();
  static const int kVipExpFieldNumber = 4;
  inline ::google::protobuf::int32 vipexp() const;
  inline void set_vipexp(::google::protobuf::int32 value);

  // optional int32 nextExp = 5;
  inline bool has_nextexp() const;
  inline void clear_nextexp();
  static const int kNextExpFieldNumber = 5;
  inline ::google::protobuf::int32 nextexp() const;
  inline void set_nextexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.BuyCardRes)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();
  inline void set_has_rolegold();
  inline void clear_has_rolegold();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_vipexp();
  inline void clear_has_vipexp();
  inline void set_has_nextexp();
  inline void clear_has_nextexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* errorcode_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 rolegold_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 vipexp_;
  ::google::protobuf::int32 nextexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_vip_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_vip_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_vip_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static BuyCardRes* default_instance_;
};
// -------------------------------------------------------------------

class VipData : public ::google::protobuf::Message {
 public:
  VipData();
  virtual ~VipData();

  VipData(const VipData& from);

  inline VipData& operator=(const VipData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VipData& default_instance();

  void Swap(VipData* other);

  // implements Message ----------------------------------------------

  VipData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VipData& from);
  void MergeFrom(const VipData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 target = 2;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 2;
  inline ::google::protobuf::int32 target() const;
  inline void set_target(::google::protobuf::int32 value);

  // optional int32 buyAction = 3;
  inline bool has_buyaction() const;
  inline void clear_buyaction();
  static const int kBuyActionFieldNumber = 3;
  inline ::google::protobuf::int32 buyaction() const;
  inline void set_buyaction(::google::protobuf::int32 value);

  // optional int32 buyCoin = 4;
  inline bool has_buycoin() const;
  inline void clear_buycoin();
  static const int kBuyCoinFieldNumber = 4;
  inline ::google::protobuf::int32 buycoin() const;
  inline void set_buycoin(::google::protobuf::int32 value);

  // optional int32 actionLimit = 5;
  inline bool has_actionlimit() const;
  inline void clear_actionlimit();
  static const int kActionLimitFieldNumber = 5;
  inline ::google::protobuf::int32 actionlimit() const;
  inline void set_actionlimit(::google::protobuf::int32 value);

  // repeated .protos.common.Prize prizeList = 6;
  inline int prizelist_size() const;
  inline void clear_prizelist();
  static const int kPrizeListFieldNumber = 6;
  inline const ::protos::common::Prize& prizelist(int index) const;
  inline ::protos::common::Prize* mutable_prizelist(int index);
  inline ::protos::common::Prize* add_prizelist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
      prizelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
      mutable_prizelist();

  // @@protoc_insertion_point(class_scope:protos.VipData)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_target();
  inline void clear_has_target();
  inline void set_has_buyaction();
  inline void clear_has_buyaction();
  inline void set_has_buycoin();
  inline void clear_has_buycoin();
  inline void set_has_actionlimit();
  inline void clear_has_actionlimit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 target_;
  ::google::protobuf::int32 buyaction_;
  ::google::protobuf::int32 buycoin_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::Prize > prizelist_;
  ::google::protobuf::int32 actionlimit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_vip_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_vip_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_vip_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static VipData* default_instance_;
};
// -------------------------------------------------------------------

class GoldCard : public ::google::protobuf::Message {
 public:
  GoldCard();
  virtual ~GoldCard();

  GoldCard(const GoldCard& from);

  inline GoldCard& operator=(const GoldCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoldCard& default_instance();

  void Swap(GoldCard* other);

  // implements Message ----------------------------------------------

  GoldCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoldCard& from);
  void MergeFrom(const GoldCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 price = 3;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 3;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);

  // optional bool recommend = 4;
  inline bool has_recommend() const;
  inline void clear_recommend();
  static const int kRecommendFieldNumber = 4;
  inline bool recommend() const;
  inline void set_recommend(bool value);

  // optional bool canBy = 5;
  inline bool has_canby() const;
  inline void clear_canby();
  static const int kCanByFieldNumber = 5;
  inline bool canby() const;
  inline void set_canby(bool value);

  // optional string note = 6;
  inline bool has_note() const;
  inline void clear_note();
  static const int kNoteFieldNumber = 6;
  inline const ::std::string& note() const;
  inline void set_note(const ::std::string& value);
  inline void set_note(const char* value);
  inline void set_note(const char* value, size_t size);
  inline ::std::string* mutable_note();
  inline ::std::string* release_note();
  inline void set_allocated_note(::std::string* note);

  // @@protoc_insertion_point(class_scope:protos.GoldCard)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_recommend();
  inline void clear_has_recommend();
  inline void set_has_canby();
  inline void clear_has_canby();
  inline void set_has_note();
  inline void clear_has_note();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 price_;
  ::std::string* note_;
  bool recommend_;
  bool canby_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_vip_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_vip_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_vip_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static GoldCard* default_instance_;
};
// ===================================================================


// ===================================================================

// VipInfoRes

// optional int32 level = 1;
inline bool VipInfoRes::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipInfoRes::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipInfoRes::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipInfoRes::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 VipInfoRes::level() const {
  return level_;
}
inline void VipInfoRes::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 exp = 2;
inline bool VipInfoRes::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipInfoRes::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipInfoRes::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipInfoRes::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 VipInfoRes::exp() const {
  return exp_;
}
inline void VipInfoRes::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 nextExp = 3;
inline bool VipInfoRes::has_nextexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VipInfoRes::set_has_nextexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VipInfoRes::clear_has_nextexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VipInfoRes::clear_nextexp() {
  nextexp_ = 0;
  clear_has_nextexp();
}
inline ::google::protobuf::int32 VipInfoRes::nextexp() const {
  return nextexp_;
}
inline void VipInfoRes::set_nextexp(::google::protobuf::int32 value) {
  set_has_nextexp();
  nextexp_ = value;
}

// optional .protos.VipData data = 4;
inline bool VipInfoRes::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VipInfoRes::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VipInfoRes::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VipInfoRes::clear_data() {
  if (data_ != NULL) data_->::protos::VipData::Clear();
  clear_has_data();
}
inline const ::protos::VipData& VipInfoRes::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::protos::VipData* VipInfoRes::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::protos::VipData;
  return data_;
}
inline ::protos::VipData* VipInfoRes::release_data() {
  clear_has_data();
  ::protos::VipData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void VipInfoRes::set_allocated_data(::protos::VipData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// VipPrivReq

// required int32 level = 1;
inline bool VipPrivReq::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipPrivReq::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipPrivReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipPrivReq::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 VipPrivReq::level() const {
  return level_;
}
inline void VipPrivReq::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// VipShopRes

// repeated .protos.GoldCard carList = 1;
inline int VipShopRes::carlist_size() const {
  return carlist_.size();
}
inline void VipShopRes::clear_carlist() {
  carlist_.Clear();
}
inline const ::protos::GoldCard& VipShopRes::carlist(int index) const {
  return carlist_.Get(index);
}
inline ::protos::GoldCard* VipShopRes::mutable_carlist(int index) {
  return carlist_.Mutable(index);
}
inline ::protos::GoldCard* VipShopRes::add_carlist() {
  return carlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::GoldCard >&
VipShopRes::carlist() const {
  return carlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::GoldCard >*
VipShopRes::mutable_carlist() {
  return &carlist_;
}

// -------------------------------------------------------------------

// BuyCardReq

// optional int32 cardId = 1;
inline bool BuyCardReq::has_cardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyCardReq::set_has_cardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyCardReq::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyCardReq::clear_cardid() {
  cardid_ = 0;
  clear_has_cardid();
}
inline ::google::protobuf::int32 BuyCardReq::cardid() const {
  return cardid_;
}
inline void BuyCardReq::set_cardid(::google::protobuf::int32 value) {
  set_has_cardid();
  cardid_ = value;
}

// optional string deviceId = 2;
inline bool BuyCardReq::has_deviceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyCardReq::set_has_deviceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyCardReq::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyCardReq::clear_deviceid() {
  if (deviceid_ != &::google::protobuf::internal::kEmptyString) {
    deviceid_->clear();
  }
  clear_has_deviceid();
}
inline const ::std::string& BuyCardReq::deviceid() const {
  return *deviceid_;
}
inline void BuyCardReq::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(value);
}
inline void BuyCardReq::set_deviceid(const char* value) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(value);
}
inline void BuyCardReq::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BuyCardReq::mutable_deviceid() {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  return deviceid_;
}
inline ::std::string* BuyCardReq::release_deviceid() {
  clear_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = deviceid_;
    deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BuyCardReq::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid_ != &::google::protobuf::internal::kEmptyString) {
    delete deviceid_;
  }
  if (deviceid) {
    set_has_deviceid();
    deviceid_ = deviceid;
  } else {
    clear_has_deviceid();
    deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string mobileNo = 3;
inline bool BuyCardReq::has_mobileno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyCardReq::set_has_mobileno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyCardReq::clear_has_mobileno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyCardReq::clear_mobileno() {
  if (mobileno_ != &::google::protobuf::internal::kEmptyString) {
    mobileno_->clear();
  }
  clear_has_mobileno();
}
inline const ::std::string& BuyCardReq::mobileno() const {
  return *mobileno_;
}
inline void BuyCardReq::set_mobileno(const ::std::string& value) {
  set_has_mobileno();
  if (mobileno_ == &::google::protobuf::internal::kEmptyString) {
    mobileno_ = new ::std::string;
  }
  mobileno_->assign(value);
}
inline void BuyCardReq::set_mobileno(const char* value) {
  set_has_mobileno();
  if (mobileno_ == &::google::protobuf::internal::kEmptyString) {
    mobileno_ = new ::std::string;
  }
  mobileno_->assign(value);
}
inline void BuyCardReq::set_mobileno(const char* value, size_t size) {
  set_has_mobileno();
  if (mobileno_ == &::google::protobuf::internal::kEmptyString) {
    mobileno_ = new ::std::string;
  }
  mobileno_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BuyCardReq::mutable_mobileno() {
  set_has_mobileno();
  if (mobileno_ == &::google::protobuf::internal::kEmptyString) {
    mobileno_ = new ::std::string;
  }
  return mobileno_;
}
inline ::std::string* BuyCardReq::release_mobileno() {
  clear_has_mobileno();
  if (mobileno_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mobileno_;
    mobileno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BuyCardReq::set_allocated_mobileno(::std::string* mobileno) {
  if (mobileno_ != &::google::protobuf::internal::kEmptyString) {
    delete mobileno_;
  }
  if (mobileno) {
    set_has_mobileno();
    mobileno_ = mobileno;
  } else {
    clear_has_mobileno();
    mobileno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string smsNo = 4;
inline bool BuyCardReq::has_smsno() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuyCardReq::set_has_smsno() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuyCardReq::clear_has_smsno() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuyCardReq::clear_smsno() {
  if (smsno_ != &::google::protobuf::internal::kEmptyString) {
    smsno_->clear();
  }
  clear_has_smsno();
}
inline const ::std::string& BuyCardReq::smsno() const {
  return *smsno_;
}
inline void BuyCardReq::set_smsno(const ::std::string& value) {
  set_has_smsno();
  if (smsno_ == &::google::protobuf::internal::kEmptyString) {
    smsno_ = new ::std::string;
  }
  smsno_->assign(value);
}
inline void BuyCardReq::set_smsno(const char* value) {
  set_has_smsno();
  if (smsno_ == &::google::protobuf::internal::kEmptyString) {
    smsno_ = new ::std::string;
  }
  smsno_->assign(value);
}
inline void BuyCardReq::set_smsno(const char* value, size_t size) {
  set_has_smsno();
  if (smsno_ == &::google::protobuf::internal::kEmptyString) {
    smsno_ = new ::std::string;
  }
  smsno_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BuyCardReq::mutable_smsno() {
  set_has_smsno();
  if (smsno_ == &::google::protobuf::internal::kEmptyString) {
    smsno_ = new ::std::string;
  }
  return smsno_;
}
inline ::std::string* BuyCardReq::release_smsno() {
  clear_has_smsno();
  if (smsno_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = smsno_;
    smsno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BuyCardReq::set_allocated_smsno(::std::string* smsno) {
  if (smsno_ != &::google::protobuf::internal::kEmptyString) {
    delete smsno_;
  }
  if (smsno) {
    set_has_smsno();
    smsno_ = smsno;
  } else {
    clear_has_smsno();
    smsno_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 step = 5;
inline bool BuyCardReq::has_step() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuyCardReq::set_has_step() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuyCardReq::clear_has_step() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuyCardReq::clear_step() {
  step_ = 0;
  clear_has_step();
}
inline ::google::protobuf::int32 BuyCardReq::step() const {
  return step_;
}
inline void BuyCardReq::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
}

// -------------------------------------------------------------------

// BuyCardRes

// required int32 result = 1;
inline bool BuyCardRes::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuyCardRes::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuyCardRes::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuyCardRes::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 BuyCardRes::result() const {
  return result_;
}
inline void BuyCardRes::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string errorCode = 6;
inline bool BuyCardRes::has_errorcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuyCardRes::set_has_errorcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuyCardRes::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuyCardRes::clear_errorcode() {
  if (errorcode_ != &::google::protobuf::internal::kEmptyString) {
    errorcode_->clear();
  }
  clear_has_errorcode();
}
inline const ::std::string& BuyCardRes::errorcode() const {
  return *errorcode_;
}
inline void BuyCardRes::set_errorcode(const ::std::string& value) {
  set_has_errorcode();
  if (errorcode_ == &::google::protobuf::internal::kEmptyString) {
    errorcode_ = new ::std::string;
  }
  errorcode_->assign(value);
}
inline void BuyCardRes::set_errorcode(const char* value) {
  set_has_errorcode();
  if (errorcode_ == &::google::protobuf::internal::kEmptyString) {
    errorcode_ = new ::std::string;
  }
  errorcode_->assign(value);
}
inline void BuyCardRes::set_errorcode(const char* value, size_t size) {
  set_has_errorcode();
  if (errorcode_ == &::google::protobuf::internal::kEmptyString) {
    errorcode_ = new ::std::string;
  }
  errorcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BuyCardRes::mutable_errorcode() {
  set_has_errorcode();
  if (errorcode_ == &::google::protobuf::internal::kEmptyString) {
    errorcode_ = new ::std::string;
  }
  return errorcode_;
}
inline ::std::string* BuyCardRes::release_errorcode() {
  clear_has_errorcode();
  if (errorcode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = errorcode_;
    errorcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BuyCardRes::set_allocated_errorcode(::std::string* errorcode) {
  if (errorcode_ != &::google::protobuf::internal::kEmptyString) {
    delete errorcode_;
  }
  if (errorcode) {
    set_has_errorcode();
    errorcode_ = errorcode;
  } else {
    clear_has_errorcode();
    errorcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 roleGold = 2;
inline bool BuyCardRes::has_rolegold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuyCardRes::set_has_rolegold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuyCardRes::clear_has_rolegold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuyCardRes::clear_rolegold() {
  rolegold_ = 0;
  clear_has_rolegold();
}
inline ::google::protobuf::int32 BuyCardRes::rolegold() const {
  return rolegold_;
}
inline void BuyCardRes::set_rolegold(::google::protobuf::int32 value) {
  set_has_rolegold();
  rolegold_ = value;
}

// optional int32 vipLevel = 3;
inline bool BuyCardRes::has_viplevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuyCardRes::set_has_viplevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuyCardRes::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuyCardRes::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 BuyCardRes::viplevel() const {
  return viplevel_;
}
inline void BuyCardRes::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional int32 vipExp = 4;
inline bool BuyCardRes::has_vipexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuyCardRes::set_has_vipexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuyCardRes::clear_has_vipexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuyCardRes::clear_vipexp() {
  vipexp_ = 0;
  clear_has_vipexp();
}
inline ::google::protobuf::int32 BuyCardRes::vipexp() const {
  return vipexp_;
}
inline void BuyCardRes::set_vipexp(::google::protobuf::int32 value) {
  set_has_vipexp();
  vipexp_ = value;
}

// optional int32 nextExp = 5;
inline bool BuyCardRes::has_nextexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuyCardRes::set_has_nextexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuyCardRes::clear_has_nextexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuyCardRes::clear_nextexp() {
  nextexp_ = 0;
  clear_has_nextexp();
}
inline ::google::protobuf::int32 BuyCardRes::nextexp() const {
  return nextexp_;
}
inline void BuyCardRes::set_nextexp(::google::protobuf::int32 value) {
  set_has_nextexp();
  nextexp_ = value;
}

// -------------------------------------------------------------------

// VipData

// optional int32 level = 1;
inline bool VipData::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VipData::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VipData::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VipData::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 VipData::level() const {
  return level_;
}
inline void VipData::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 target = 2;
inline bool VipData::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VipData::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VipData::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VipData::clear_target() {
  target_ = 0;
  clear_has_target();
}
inline ::google::protobuf::int32 VipData::target() const {
  return target_;
}
inline void VipData::set_target(::google::protobuf::int32 value) {
  set_has_target();
  target_ = value;
}

// optional int32 buyAction = 3;
inline bool VipData::has_buyaction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VipData::set_has_buyaction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VipData::clear_has_buyaction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VipData::clear_buyaction() {
  buyaction_ = 0;
  clear_has_buyaction();
}
inline ::google::protobuf::int32 VipData::buyaction() const {
  return buyaction_;
}
inline void VipData::set_buyaction(::google::protobuf::int32 value) {
  set_has_buyaction();
  buyaction_ = value;
}

// optional int32 buyCoin = 4;
inline bool VipData::has_buycoin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VipData::set_has_buycoin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VipData::clear_has_buycoin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VipData::clear_buycoin() {
  buycoin_ = 0;
  clear_has_buycoin();
}
inline ::google::protobuf::int32 VipData::buycoin() const {
  return buycoin_;
}
inline void VipData::set_buycoin(::google::protobuf::int32 value) {
  set_has_buycoin();
  buycoin_ = value;
}

// optional int32 actionLimit = 5;
inline bool VipData::has_actionlimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VipData::set_has_actionlimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VipData::clear_has_actionlimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VipData::clear_actionlimit() {
  actionlimit_ = 0;
  clear_has_actionlimit();
}
inline ::google::protobuf::int32 VipData::actionlimit() const {
  return actionlimit_;
}
inline void VipData::set_actionlimit(::google::protobuf::int32 value) {
  set_has_actionlimit();
  actionlimit_ = value;
}

// repeated .protos.common.Prize prizeList = 6;
inline int VipData::prizelist_size() const {
  return prizelist_.size();
}
inline void VipData::clear_prizelist() {
  prizelist_.Clear();
}
inline const ::protos::common::Prize& VipData::prizelist(int index) const {
  return prizelist_.Get(index);
}
inline ::protos::common::Prize* VipData::mutable_prizelist(int index) {
  return prizelist_.Mutable(index);
}
inline ::protos::common::Prize* VipData::add_prizelist() {
  return prizelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
VipData::prizelist() const {
  return prizelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
VipData::mutable_prizelist() {
  return &prizelist_;
}

// -------------------------------------------------------------------

// GoldCard

// required int32 id = 1;
inline bool GoldCard::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoldCard::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoldCard::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoldCard::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GoldCard::id() const {
  return id_;
}
inline void GoldCard::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool GoldCard::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoldCard::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoldCard::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoldCard::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GoldCard::name() const {
  return *name_;
}
inline void GoldCard::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GoldCard::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GoldCard::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GoldCard::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GoldCard::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GoldCard::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 price = 3;
inline bool GoldCard::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoldCard::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoldCard::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoldCard::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 GoldCard::price() const {
  return price_;
}
inline void GoldCard::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
}

// optional bool recommend = 4;
inline bool GoldCard::has_recommend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoldCard::set_has_recommend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoldCard::clear_has_recommend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoldCard::clear_recommend() {
  recommend_ = false;
  clear_has_recommend();
}
inline bool GoldCard::recommend() const {
  return recommend_;
}
inline void GoldCard::set_recommend(bool value) {
  set_has_recommend();
  recommend_ = value;
}

// optional bool canBy = 5;
inline bool GoldCard::has_canby() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoldCard::set_has_canby() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoldCard::clear_has_canby() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoldCard::clear_canby() {
  canby_ = false;
  clear_has_canby();
}
inline bool GoldCard::canby() const {
  return canby_;
}
inline void GoldCard::set_canby(bool value) {
  set_has_canby();
  canby_ = value;
}

// optional string note = 6;
inline bool GoldCard::has_note() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GoldCard::set_has_note() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GoldCard::clear_has_note() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GoldCard::clear_note() {
  if (note_ != &::google::protobuf::internal::kEmptyString) {
    note_->clear();
  }
  clear_has_note();
}
inline const ::std::string& GoldCard::note() const {
  return *note_;
}
inline void GoldCard::set_note(const ::std::string& value) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  note_->assign(value);
}
inline void GoldCard::set_note(const char* value) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  note_->assign(value);
}
inline void GoldCard::set_note(const char* value, size_t size) {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  note_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GoldCard::mutable_note() {
  set_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    note_ = new ::std::string;
  }
  return note_;
}
inline ::std::string* GoldCard::release_note() {
  clear_has_note();
  if (note_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = note_;
    note_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GoldCard::set_allocated_note(::std::string* note) {
  if (note_ != &::google::protobuf::internal::kEmptyString) {
    delete note_;
  }
  if (note) {
    set_has_note();
    note_ = note;
  } else {
    clear_has_note();
    note_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vip_5fprotocol_2eproto__INCLUDED
