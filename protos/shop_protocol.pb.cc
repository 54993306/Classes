// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shop_protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "shop_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protos {

namespace {

const ::google::protobuf::Descriptor* ShopRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateShopReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateShopReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateShopRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateShopRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuyItemResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuyItemResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComposeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComposeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComposeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComposeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComposeItemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComposeItemRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComposeData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComposeData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_shop_5fprotocol_2eproto() {
  protobuf_AddDesc_shop_5fprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "shop_protocol.proto");
  GOOGLE_CHECK(file != NULL);
  ShopRequest_descriptor_ = file->message_type(0);
  static const int ShopRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRequest, shop_),
  };
  ShopRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShopRequest_descriptor_,
      ShopRequest::default_instance_,
      ShopRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShopRequest));
  ShopResponse_descriptor_ = file->message_type(1);
  static const int ShopResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopResponse, updategold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopResponse, updatetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopResponse, itemlist_),
  };
  ShopResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShopResponse_descriptor_,
      ShopResponse::default_instance_,
      ShopResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShopResponse));
  UpdateShopReq_descriptor_ = file->message_type(2);
  static const int UpdateShopReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopReq, shop_),
  };
  UpdateShopReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateShopReq_descriptor_,
      UpdateShopReq::default_instance_,
      UpdateShopReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateShopReq));
  UpdateShopRes_descriptor_ = file->message_type(3);
  static const int UpdateShopRes_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopRes, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopRes, updategold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopRes, itemlist_),
  };
  UpdateShopRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateShopRes_descriptor_,
      UpdateShopRes::default_instance_,
      UpdateShopRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateShopRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateShopRes));
  BuyItemRequest_descriptor_ = file->message_type(4);
  static const int BuyItemRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyItemRequest, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyItemRequest, buynum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyItemRequest, shop_),
  };
  BuyItemRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyItemRequest_descriptor_,
      BuyItemRequest::default_instance_,
      BuyItemRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyItemRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyItemRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyItemRequest));
  BuyItemResponse_descriptor_ = file->message_type(5);
  static const int BuyItemResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyItemResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyItemResponse, role_),
  };
  BuyItemResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuyItemResponse_descriptor_,
      BuyItemResponse::default_instance_,
      BuyItemResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyItemResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyItemResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuyItemResponse));
  ComposeRequest_descriptor_ = file->message_type(6);
  static const int ComposeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeRequest, composeid_),
  };
  ComposeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComposeRequest_descriptor_,
      ComposeRequest::default_instance_,
      ComposeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComposeRequest));
  ComposeResponse_descriptor_ = file->message_type(7);
  static const int ComposeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeResponse, composelist_),
  };
  ComposeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComposeResponse_descriptor_,
      ComposeResponse::default_instance_,
      ComposeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComposeResponse));
  ComposeItemRequest_descriptor_ = file->message_type(8);
  static const int ComposeItemRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeItemRequest, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeItemRequest, armor_id_),
  };
  ComposeItemRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComposeItemRequest_descriptor_,
      ComposeItemRequest::default_instance_,
      ComposeItemRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeItemRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeItemRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComposeItemRequest));
  ComposeData_descriptor_ = file->message_type(9);
  static const int ComposeData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeData, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeData, itemlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeData, canget_),
  };
  ComposeData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComposeData_descriptor_,
      ComposeData::default_instance_,
      ComposeData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComposeData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComposeData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_shop_5fprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShopRequest_descriptor_, &ShopRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShopResponse_descriptor_, &ShopResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateShopReq_descriptor_, &UpdateShopReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateShopRes_descriptor_, &UpdateShopRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyItemRequest_descriptor_, &BuyItemRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuyItemResponse_descriptor_, &BuyItemResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComposeRequest_descriptor_, &ComposeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComposeResponse_descriptor_, &ComposeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComposeItemRequest_descriptor_, &ComposeItemRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComposeData_descriptor_, &ComposeData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_shop_5fprotocol_2eproto() {
  delete ShopRequest::default_instance_;
  delete ShopRequest_reflection_;
  delete ShopResponse::default_instance_;
  delete ShopResponse_reflection_;
  delete UpdateShopReq::default_instance_;
  delete UpdateShopReq_reflection_;
  delete UpdateShopRes::default_instance_;
  delete UpdateShopRes_reflection_;
  delete BuyItemRequest::default_instance_;
  delete BuyItemRequest_reflection_;
  delete BuyItemResponse::default_instance_;
  delete BuyItemResponse_reflection_;
  delete ComposeRequest::default_instance_;
  delete ComposeRequest_reflection_;
  delete ComposeResponse::default_instance_;
  delete ComposeResponse_reflection_;
  delete ComposeItemRequest::default_instance_;
  delete ComposeItemRequest_reflection_;
  delete ComposeData::default_instance_;
  delete ComposeData_reflection_;
}

void protobuf_AddDesc_shop_5fprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protos::common::protobuf_AddDesc_common_2fitem_5fcommon_2eproto();
  ::protos::common::protobuf_AddDesc_common_2frole_5fcommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023shop_protocol.proto\022\006protos\032\030common/it"
    "em_common.proto\032\030common/role_common.prot"
    "o\"\033\n\013ShopRequest\022\014\n\004shop\030\001 \001(\005\"]\n\014ShopRe"
    "sponse\022\022\n\nupdateGold\030\001 \001(\005\022\022\n\nupdateTime"
    "\030\002 \001(\006\022%\n\010itemList\030\003 \003(\0132\023.protos.common"
    ".Item\"\035\n\rUpdateShopReq\022\014\n\004shop\030\001 \001(\005\"Z\n\r"
    "UpdateShopRes\022\016\n\006result\030\001 \002(\005\022\022\n\nupdateG"
    "old\030\002 \001(\005\022%\n\010itemList\030\003 \003(\0132\023.protos.com"
    "mon.Item\">\n\016BuyItemRequest\022\016\n\006itemId\030\001 \002"
    "(\005\022\016\n\006buyNum\030\002 \001(\005\022\014\n\004shop\030\003 \001(\005\"D\n\017BuyI"
    "temResponse\022\016\n\006result\030\001 \002(\005\022!\n\004role\030\002 \001("
    "\0132\023.protos.common.Role\"#\n\016ComposeRequest"
    "\022\021\n\tcomposeId\030\001 \001(\005\";\n\017ComposeResponse\022("
    "\n\013composeList\030\001 \003(\0132\023.protos.ComposeData"
    "\"7\n\022ComposeItemRequest\022\017\n\007item_id\030\001 \002(\005\022"
    "\020\n\010armor_id\030\002 \001(\005\"g\n\013ComposeData\022!\n\004item"
    "\030\001 \002(\0132\023.protos.common.Item\022%\n\010itemList\030"
    "\002 \003(\0132\023.protos.common.Item\022\016\n\006canGet\030\003 \001"
    "(\010B0\n\036anvin.server.gameserver.protosB\014Sh"
    "opProtocolH\001", 772);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "shop_protocol.proto", &protobuf_RegisterTypes);
  ShopRequest::default_instance_ = new ShopRequest();
  ShopResponse::default_instance_ = new ShopResponse();
  UpdateShopReq::default_instance_ = new UpdateShopReq();
  UpdateShopRes::default_instance_ = new UpdateShopRes();
  BuyItemRequest::default_instance_ = new BuyItemRequest();
  BuyItemResponse::default_instance_ = new BuyItemResponse();
  ComposeRequest::default_instance_ = new ComposeRequest();
  ComposeResponse::default_instance_ = new ComposeResponse();
  ComposeItemRequest::default_instance_ = new ComposeItemRequest();
  ComposeData::default_instance_ = new ComposeData();
  ShopRequest::default_instance_->InitAsDefaultInstance();
  ShopResponse::default_instance_->InitAsDefaultInstance();
  UpdateShopReq::default_instance_->InitAsDefaultInstance();
  UpdateShopRes::default_instance_->InitAsDefaultInstance();
  BuyItemRequest::default_instance_->InitAsDefaultInstance();
  BuyItemResponse::default_instance_->InitAsDefaultInstance();
  ComposeRequest::default_instance_->InitAsDefaultInstance();
  ComposeResponse::default_instance_->InitAsDefaultInstance();
  ComposeItemRequest::default_instance_->InitAsDefaultInstance();
  ComposeData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_shop_5fprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_shop_5fprotocol_2eproto {
  StaticDescriptorInitializer_shop_5fprotocol_2eproto() {
    protobuf_AddDesc_shop_5fprotocol_2eproto();
  }
} static_descriptor_initializer_shop_5fprotocol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ShopRequest::kShopFieldNumber;
#endif  // !_MSC_VER

ShopRequest::ShopRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ShopRequest::InitAsDefaultInstance() {
}

ShopRequest::ShopRequest(const ShopRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ShopRequest::SharedCtor() {
  _cached_size_ = 0;
  shop_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShopRequest::~ShopRequest() {
  SharedDtor();
}

void ShopRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShopRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopRequest_descriptor_;
}

const ShopRequest& ShopRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_5fprotocol_2eproto();
  return *default_instance_;
}

ShopRequest* ShopRequest::default_instance_ = NULL;

ShopRequest* ShopRequest::New() const {
  return new ShopRequest;
}

void ShopRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shop_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShopRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shop = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_)));
          set_has_shop();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ShopRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shop = 1;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ShopRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shop = 1;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ShopRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shop = 1;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShopRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShopRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShopRequest::MergeFrom(const ShopRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop()) {
      set_shop(from.shop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShopRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopRequest::CopyFrom(const ShopRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopRequest::IsInitialized() const {

  return true;
}

void ShopRequest::Swap(ShopRequest* other) {
  if (other != this) {
    std::swap(shop_, other->shop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShopRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopRequest_descriptor_;
  metadata.reflection = ShopRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShopResponse::kUpdateGoldFieldNumber;
const int ShopResponse::kUpdateTimeFieldNumber;
const int ShopResponse::kItemListFieldNumber;
#endif  // !_MSC_VER

ShopResponse::ShopResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ShopResponse::InitAsDefaultInstance() {
}

ShopResponse::ShopResponse(const ShopResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ShopResponse::SharedCtor() {
  _cached_size_ = 0;
  updategold_ = 0;
  updatetime_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShopResponse::~ShopResponse() {
  SharedDtor();
}

void ShopResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShopResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopResponse_descriptor_;
}

const ShopResponse& ShopResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_5fprotocol_2eproto();
  return *default_instance_;
}

ShopResponse* ShopResponse::default_instance_ = NULL;

ShopResponse* ShopResponse::New() const {
  return new ShopResponse;
}

void ShopResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    updategold_ = 0;
    updatetime_ = GOOGLE_ULONGLONG(0);
  }
  itemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShopResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 updateGold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updategold_)));
          set_has_updategold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_updateTime;
        break;
      }

      // optional fixed64 updateTime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_updateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &updatetime_)));
          set_has_updatetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_itemList;
        break;
      }

      // repeated .protos.common.Item itemList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_itemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_itemList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ShopResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 updateGold = 1;
  if (has_updategold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->updategold(), output);
  }

  // optional fixed64 updateTime = 2;
  if (has_updatetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->updatetime(), output);
  }

  // repeated .protos.common.Item itemList = 3;
  for (int i = 0; i < this->itemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->itemlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ShopResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 updateGold = 1;
  if (has_updategold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->updategold(), target);
  }

  // optional fixed64 updateTime = 2;
  if (has_updatetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->updatetime(), target);
  }

  // repeated .protos.common.Item itemList = 3;
  for (int i = 0; i < this->itemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->itemlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ShopResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 updateGold = 1;
    if (has_updategold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->updategold());
    }

    // optional fixed64 updateTime = 2;
    if (has_updatetime()) {
      total_size += 1 + 8;
    }

  }
  // repeated .protos.common.Item itemList = 3;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShopResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShopResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShopResponse::MergeFrom(const ShopResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemlist_.MergeFrom(from.itemlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_updategold()) {
      set_updategold(from.updategold());
    }
    if (from.has_updatetime()) {
      set_updatetime(from.updatetime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShopResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopResponse::CopyFrom(const ShopResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopResponse::IsInitialized() const {

  for (int i = 0; i < itemlist_size(); i++) {
    if (!this->itemlist(i).IsInitialized()) return false;
  }
  return true;
}

void ShopResponse::Swap(ShopResponse* other) {
  if (other != this) {
    std::swap(updategold_, other->updategold_);
    std::swap(updatetime_, other->updatetime_);
    itemlist_.Swap(&other->itemlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShopResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopResponse_descriptor_;
  metadata.reflection = ShopResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateShopReq::kShopFieldNumber;
#endif  // !_MSC_VER

UpdateShopReq::UpdateShopReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UpdateShopReq::InitAsDefaultInstance() {
}

UpdateShopReq::UpdateShopReq(const UpdateShopReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UpdateShopReq::SharedCtor() {
  _cached_size_ = 0;
  shop_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateShopReq::~UpdateShopReq() {
  SharedDtor();
}

void UpdateShopReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateShopReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateShopReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateShopReq_descriptor_;
}

const UpdateShopReq& UpdateShopReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_5fprotocol_2eproto();
  return *default_instance_;
}

UpdateShopReq* UpdateShopReq::default_instance_ = NULL;

UpdateShopReq* UpdateShopReq::New() const {
  return new UpdateShopReq;
}

void UpdateShopReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shop_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateShopReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shop = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_)));
          set_has_shop();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UpdateShopReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shop = 1;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UpdateShopReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shop = 1;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UpdateShopReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shop = 1;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateShopReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateShopReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateShopReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateShopReq::MergeFrom(const UpdateShopReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop()) {
      set_shop(from.shop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateShopReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateShopReq::CopyFrom(const UpdateShopReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateShopReq::IsInitialized() const {

  return true;
}

void UpdateShopReq::Swap(UpdateShopReq* other) {
  if (other != this) {
    std::swap(shop_, other->shop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateShopReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateShopReq_descriptor_;
  metadata.reflection = UpdateShopReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateShopRes::kResultFieldNumber;
const int UpdateShopRes::kUpdateGoldFieldNumber;
const int UpdateShopRes::kItemListFieldNumber;
#endif  // !_MSC_VER

UpdateShopRes::UpdateShopRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UpdateShopRes::InitAsDefaultInstance() {
}

UpdateShopRes::UpdateShopRes(const UpdateShopRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UpdateShopRes::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  updategold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateShopRes::~UpdateShopRes() {
  SharedDtor();
}

void UpdateShopRes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateShopRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateShopRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateShopRes_descriptor_;
}

const UpdateShopRes& UpdateShopRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_5fprotocol_2eproto();
  return *default_instance_;
}

UpdateShopRes* UpdateShopRes::default_instance_ = NULL;

UpdateShopRes* UpdateShopRes::New() const {
  return new UpdateShopRes;
}

void UpdateShopRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    updategold_ = 0;
  }
  itemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateShopRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_updateGold;
        break;
      }

      // optional int32 updateGold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_updateGold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &updategold_)));
          set_has_updategold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_itemList;
        break;
      }

      // repeated .protos.common.Item itemList = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_itemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_itemList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UpdateShopRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional int32 updateGold = 2;
  if (has_updategold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->updategold(), output);
  }

  // repeated .protos.common.Item itemList = 3;
  for (int i = 0; i < this->itemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->itemlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UpdateShopRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional int32 updateGold = 2;
  if (has_updategold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->updategold(), target);
  }

  // repeated .protos.common.Item itemList = 3;
  for (int i = 0; i < this->itemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->itemlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UpdateShopRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 updateGold = 2;
    if (has_updategold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->updategold());
    }

  }
  // repeated .protos.common.Item itemList = 3;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateShopRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateShopRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateShopRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateShopRes::MergeFrom(const UpdateShopRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemlist_.MergeFrom(from.itemlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_updategold()) {
      set_updategold(from.updategold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateShopRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateShopRes::CopyFrom(const UpdateShopRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateShopRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < itemlist_size(); i++) {
    if (!this->itemlist(i).IsInitialized()) return false;
  }
  return true;
}

void UpdateShopRes::Swap(UpdateShopRes* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(updategold_, other->updategold_);
    itemlist_.Swap(&other->itemlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateShopRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateShopRes_descriptor_;
  metadata.reflection = UpdateShopRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyItemRequest::kItemIdFieldNumber;
const int BuyItemRequest::kBuyNumFieldNumber;
const int BuyItemRequest::kShopFieldNumber;
#endif  // !_MSC_VER

BuyItemRequest::BuyItemRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuyItemRequest::InitAsDefaultInstance() {
}

BuyItemRequest::BuyItemRequest(const BuyItemRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuyItemRequest::SharedCtor() {
  _cached_size_ = 0;
  itemid_ = 0;
  buynum_ = 0;
  shop_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyItemRequest::~BuyItemRequest() {
  SharedDtor();
}

void BuyItemRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuyItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyItemRequest_descriptor_;
}

const BuyItemRequest& BuyItemRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_5fprotocol_2eproto();
  return *default_instance_;
}

BuyItemRequest* BuyItemRequest::default_instance_ = NULL;

BuyItemRequest* BuyItemRequest::New() const {
  return new BuyItemRequest;
}

void BuyItemRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    itemid_ = 0;
    buynum_ = 0;
    shop_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 itemId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buyNum;
        break;
      }

      // optional int32 buyNum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buynum_)));
          set_has_buynum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_shop;
        break;
      }

      // optional int32 shop = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_)));
          set_has_shop();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuyItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 itemId = 1;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 buyNum = 2;
  if (has_buynum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buynum(), output);
  }

  // optional int32 shop = 3;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->shop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuyItemRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 itemId = 1;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 buyNum = 2;
  if (has_buynum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buynum(), target);
  }

  // optional int32 shop = 3;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->shop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuyItemRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 itemId = 1;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // optional int32 buyNum = 2;
    if (has_buynum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buynum());
    }

    // optional int32 shop = 3;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyItemRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyItemRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyItemRequest::MergeFrom(const BuyItemRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_buynum()) {
      set_buynum(from.buynum());
    }
    if (from.has_shop()) {
      set_shop(from.shop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyItemRequest::CopyFrom(const BuyItemRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyItemRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BuyItemRequest::Swap(BuyItemRequest* other) {
  if (other != this) {
    std::swap(itemid_, other->itemid_);
    std::swap(buynum_, other->buynum_);
    std::swap(shop_, other->shop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyItemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyItemRequest_descriptor_;
  metadata.reflection = BuyItemRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuyItemResponse::kResultFieldNumber;
const int BuyItemResponse::kRoleFieldNumber;
#endif  // !_MSC_VER

BuyItemResponse::BuyItemResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuyItemResponse::InitAsDefaultInstance() {
  role_ = const_cast< ::protos::common::Role*>(&::protos::common::Role::default_instance());
}

BuyItemResponse::BuyItemResponse(const BuyItemResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuyItemResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  role_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuyItemResponse::~BuyItemResponse() {
  SharedDtor();
}

void BuyItemResponse::SharedDtor() {
  if (this != default_instance_) {
    delete role_;
  }
}

void BuyItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyItemResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuyItemResponse_descriptor_;
}

const BuyItemResponse& BuyItemResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_5fprotocol_2eproto();
  return *default_instance_;
}

BuyItemResponse* BuyItemResponse::default_instance_ = NULL;

BuyItemResponse* BuyItemResponse::New() const {
  return new BuyItemResponse;
}

void BuyItemResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_role()) {
      if (role_ != NULL) role_->::protos::common::Role::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuyItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role;
        break;
      }

      // optional .protos.common.Role role = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuyItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .protos.common.Role role = 2;
  if (has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->role(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuyItemResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .protos.common.Role role = 2;
  if (has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->role(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuyItemResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .protos.common.Role role = 2;
    if (has_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->role());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuyItemResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuyItemResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuyItemResponse::MergeFrom(const BuyItemResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_role()) {
      mutable_role()->::protos::common::Role::MergeFrom(from.role());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuyItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyItemResponse::CopyFrom(const BuyItemResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyItemResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_role()) {
    if (!this->role().IsInitialized()) return false;
  }
  return true;
}

void BuyItemResponse::Swap(BuyItemResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(role_, other->role_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuyItemResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuyItemResponse_descriptor_;
  metadata.reflection = BuyItemResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComposeRequest::kComposeIdFieldNumber;
#endif  // !_MSC_VER

ComposeRequest::ComposeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ComposeRequest::InitAsDefaultInstance() {
}

ComposeRequest::ComposeRequest(const ComposeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ComposeRequest::SharedCtor() {
  _cached_size_ = 0;
  composeid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComposeRequest::~ComposeRequest() {
  SharedDtor();
}

void ComposeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComposeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComposeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComposeRequest_descriptor_;
}

const ComposeRequest& ComposeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_5fprotocol_2eproto();
  return *default_instance_;
}

ComposeRequest* ComposeRequest::default_instance_ = NULL;

ComposeRequest* ComposeRequest::New() const {
  return new ComposeRequest;
}

void ComposeRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    composeid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComposeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 composeId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &composeid_)));
          set_has_composeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ComposeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 composeId = 1;
  if (has_composeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->composeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ComposeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 composeId = 1;
  if (has_composeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->composeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ComposeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 composeId = 1;
    if (has_composeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->composeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComposeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComposeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComposeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComposeRequest::MergeFrom(const ComposeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_composeid()) {
      set_composeid(from.composeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComposeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComposeRequest::CopyFrom(const ComposeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComposeRequest::IsInitialized() const {

  return true;
}

void ComposeRequest::Swap(ComposeRequest* other) {
  if (other != this) {
    std::swap(composeid_, other->composeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComposeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComposeRequest_descriptor_;
  metadata.reflection = ComposeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComposeResponse::kComposeListFieldNumber;
#endif  // !_MSC_VER

ComposeResponse::ComposeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ComposeResponse::InitAsDefaultInstance() {
}

ComposeResponse::ComposeResponse(const ComposeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ComposeResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComposeResponse::~ComposeResponse() {
  SharedDtor();
}

void ComposeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComposeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComposeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComposeResponse_descriptor_;
}

const ComposeResponse& ComposeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_5fprotocol_2eproto();
  return *default_instance_;
}

ComposeResponse* ComposeResponse::default_instance_ = NULL;

ComposeResponse* ComposeResponse::New() const {
  return new ComposeResponse;
}

void ComposeResponse::Clear() {
  composelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComposeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protos.ComposeData composeList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_composeList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_composelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_composeList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ComposeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .protos.ComposeData composeList = 1;
  for (int i = 0; i < this->composelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->composelist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ComposeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .protos.ComposeData composeList = 1;
  for (int i = 0; i < this->composelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->composelist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ComposeResponse::ByteSize() const {
  int total_size = 0;

  // repeated .protos.ComposeData composeList = 1;
  total_size += 1 * this->composelist_size();
  for (int i = 0; i < this->composelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->composelist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComposeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComposeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComposeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComposeResponse::MergeFrom(const ComposeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  composelist_.MergeFrom(from.composelist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComposeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComposeResponse::CopyFrom(const ComposeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComposeResponse::IsInitialized() const {

  for (int i = 0; i < composelist_size(); i++) {
    if (!this->composelist(i).IsInitialized()) return false;
  }
  return true;
}

void ComposeResponse::Swap(ComposeResponse* other) {
  if (other != this) {
    composelist_.Swap(&other->composelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComposeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComposeResponse_descriptor_;
  metadata.reflection = ComposeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComposeItemRequest::kItemIdFieldNumber;
const int ComposeItemRequest::kArmorIdFieldNumber;
#endif  // !_MSC_VER

ComposeItemRequest::ComposeItemRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ComposeItemRequest::InitAsDefaultInstance() {
}

ComposeItemRequest::ComposeItemRequest(const ComposeItemRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ComposeItemRequest::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  armor_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComposeItemRequest::~ComposeItemRequest() {
  SharedDtor();
}

void ComposeItemRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComposeItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComposeItemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComposeItemRequest_descriptor_;
}

const ComposeItemRequest& ComposeItemRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_5fprotocol_2eproto();
  return *default_instance_;
}

ComposeItemRequest* ComposeItemRequest::default_instance_ = NULL;

ComposeItemRequest* ComposeItemRequest::New() const {
  return new ComposeItemRequest;
}

void ComposeItemRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    armor_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComposeItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_armor_id;
        break;
      }

      // optional int32 armor_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_armor_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &armor_id_)));
          set_has_armor_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ComposeItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // optional int32 armor_id = 2;
  if (has_armor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->armor_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ComposeItemRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // optional int32 armor_id = 2;
  if (has_armor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->armor_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ComposeItemRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 armor_id = 2;
    if (has_armor_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->armor_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComposeItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComposeItemRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComposeItemRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComposeItemRequest::MergeFrom(const ComposeItemRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_armor_id()) {
      set_armor_id(from.armor_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComposeItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComposeItemRequest::CopyFrom(const ComposeItemRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComposeItemRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ComposeItemRequest::Swap(ComposeItemRequest* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(armor_id_, other->armor_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComposeItemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComposeItemRequest_descriptor_;
  metadata.reflection = ComposeItemRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComposeData::kItemFieldNumber;
const int ComposeData::kItemListFieldNumber;
const int ComposeData::kCanGetFieldNumber;
#endif  // !_MSC_VER

ComposeData::ComposeData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ComposeData::InitAsDefaultInstance() {
  item_ = const_cast< ::protos::common::Item*>(&::protos::common::Item::default_instance());
}

ComposeData::ComposeData(const ComposeData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ComposeData::SharedCtor() {
  _cached_size_ = 0;
  item_ = NULL;
  canget_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComposeData::~ComposeData() {
  SharedDtor();
}

void ComposeData::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void ComposeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComposeData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComposeData_descriptor_;
}

const ComposeData& ComposeData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_5fprotocol_2eproto();
  return *default_instance_;
}

ComposeData* ComposeData::default_instance_ = NULL;

ComposeData* ComposeData::New() const {
  return new ComposeData;
}

void ComposeData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_item()) {
      if (item_ != NULL) item_->::protos::common::Item::Clear();
    }
    canget_ = false;
  }
  itemlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComposeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protos.common.Item item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_itemList;
        break;
      }

      // repeated .protos.common.Item itemList = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_itemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_itemlist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_itemList;
        if (input->ExpectTag(24)) goto parse_canGet;
        break;
      }

      // optional bool canGet = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_canGet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &canget_)));
          set_has_canget();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ComposeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .protos.common.Item item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(), output);
  }

  // repeated .protos.common.Item itemList = 2;
  for (int i = 0; i < this->itemlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->itemlist(i), output);
  }

  // optional bool canGet = 3;
  if (has_canget()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->canget(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ComposeData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .protos.common.Item item = 1;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(), target);
  }

  // repeated .protos.common.Item itemList = 2;
  for (int i = 0; i < this->itemlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->itemlist(i), target);
  }

  // optional bool canGet = 3;
  if (has_canget()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->canget(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ComposeData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protos.common.Item item = 1;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }

    // optional bool canGet = 3;
    if (has_canget()) {
      total_size += 1 + 1;
    }

  }
  // repeated .protos.common.Item itemList = 2;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComposeData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComposeData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComposeData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComposeData::MergeFrom(const ComposeData& from) {
  GOOGLE_CHECK_NE(&from, this);
  itemlist_.MergeFrom(from.itemlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item()) {
      mutable_item()->::protos::common::Item::MergeFrom(from.item());
    }
    if (from.has_canget()) {
      set_canget(from.canget());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComposeData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComposeData::CopyFrom(const ComposeData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComposeData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_item()) {
    if (!this->item().IsInitialized()) return false;
  }
  for (int i = 0; i < itemlist_size(); i++) {
    if (!this->itemlist(i).IsInitialized()) return false;
  }
  return true;
}

void ComposeData::Swap(ComposeData* other) {
  if (other != this) {
    std::swap(item_, other->item_);
    itemlist_.Swap(&other->itemlist_);
    std::swap(canget_, other->canget_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComposeData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComposeData_descriptor_;
  metadata.reflection = ComposeData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)
