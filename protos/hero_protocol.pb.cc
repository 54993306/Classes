// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hero_protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hero_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protos {

namespace {

const ::google::protobuf::Descriptor* HeroListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestHeroInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestHeroInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChangeArmorRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChangeArmorRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChangeArmorResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChangeArmorResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroRecruitReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroRecruitReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroRecruitRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroRecruitRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroExpRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroExpRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroEvolReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroEvolReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroEvolRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroEvolRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* SkillLevelUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillLevelUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DoResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DoResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeroResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeroResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hero_5fprotocol_2eproto() {
  protobuf_AddDesc_hero_5fprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hero_protocol.proto");
  GOOGLE_CHECK(file != NULL);
  HeroListRequest_descriptor_ = file->message_type(0);
  static const int HeroListRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroListRequest, mark_),
  };
  HeroListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroListRequest_descriptor_,
      HeroListRequest::default_instance_,
      HeroListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroListRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroListRequest));
  HeroListResponse_descriptor_ = file->message_type(1);
  static const int HeroListResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroListResponse, herolist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroListResponse, combat_),
  };
  HeroListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroListResponse_descriptor_,
      HeroListResponse::default_instance_,
      HeroListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroListResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroListResponse));
  RequestHeroInfo_descriptor_ = file->message_type(2);
  static const int RequestHeroInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeroInfo, roleheroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeroInfo, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeroInfo, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeroInfo, roleid_),
  };
  RequestHeroInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestHeroInfo_descriptor_,
      RequestHeroInfo::default_instance_,
      RequestHeroInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeroInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeroInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestHeroInfo));
  ChangeArmorRequest_descriptor_ = file->message_type(3);
  static const int ChangeArmorRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeArmorRequest, roleheroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeArmorRequest, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeArmorRequest, armorid_),
  };
  ChangeArmorRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChangeArmorRequest_descriptor_,
      ChangeArmorRequest::default_instance_,
      ChangeArmorRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeArmorRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeArmorRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChangeArmorRequest));
  ChangeArmorResponse_descriptor_ = file->message_type(4);
  static const int ChangeArmorResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeArmorResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeArmorResponse, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeArmorResponse, hero2_),
  };
  ChangeArmorResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChangeArmorResponse_descriptor_,
      ChangeArmorResponse::default_instance_,
      ChangeArmorResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeArmorResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeArmorResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChangeArmorResponse));
  HeroRecruitReq_descriptor_ = file->message_type(5);
  static const int HeroRecruitReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroRecruitReq, heroid_),
  };
  HeroRecruitReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroRecruitReq_descriptor_,
      HeroRecruitReq::default_instance_,
      HeroRecruitReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroRecruitReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroRecruitReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroRecruitReq));
  HeroRecruitRes_descriptor_ = file->message_type(6);
  static const int HeroRecruitRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroRecruitRes, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroRecruitRes, hero_),
  };
  HeroRecruitRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroRecruitRes_descriptor_,
      HeroRecruitRes::default_instance_,
      HeroRecruitRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroRecruitRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroRecruitRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroRecruitRes));
  HeroExpRequest_descriptor_ = file->message_type(7);
  static const int HeroExpRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroExpRequest, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroExpRequest, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroExpRequest, itemnum_),
  };
  HeroExpRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroExpRequest_descriptor_,
      HeroExpRequest::default_instance_,
      HeroExpRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroExpRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroExpRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroExpRequest));
  HeroEvolReq_descriptor_ = file->message_type(8);
  static const int HeroEvolReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEvolReq, heroid_),
  };
  HeroEvolReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroEvolReq_descriptor_,
      HeroEvolReq::default_instance_,
      HeroEvolReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEvolReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEvolReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroEvolReq));
  HeroEvolRes_descriptor_ = file->message_type(9);
  static const int HeroEvolRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEvolRes, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEvolRes, hero_),
  };
  HeroEvolRes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroEvolRes_descriptor_,
      HeroEvolRes::default_instance_,
      HeroEvolRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEvolRes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroEvolRes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroEvolRes));
  SkillLevelUp_descriptor_ = file->message_type(10);
  static const int SkillLevelUp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelUp, heroid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelUp, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelUp, itemid_),
  };
  SkillLevelUp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SkillLevelUp_descriptor_,
      SkillLevelUp::default_instance_,
      SkillLevelUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelUp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillLevelUp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SkillLevelUp));
  DoResult_descriptor_ = file->message_type(11);
  static const int DoResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoResult, result_),
  };
  DoResult_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DoResult_descriptor_,
      DoResult::default_instance_,
      DoResult_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoResult, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoResult, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DoResult));
  HeroResponse_descriptor_ = file->message_type(12);
  static const int HeroResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroResponse, hero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroResponse, skilllvup_),
  };
  HeroResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeroResponse_descriptor_,
      HeroResponse::default_instance_,
      HeroResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeroResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeroResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hero_5fprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroListRequest_descriptor_, &HeroListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroListResponse_descriptor_, &HeroListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestHeroInfo_descriptor_, &RequestHeroInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChangeArmorRequest_descriptor_, &ChangeArmorRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChangeArmorResponse_descriptor_, &ChangeArmorResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroRecruitReq_descriptor_, &HeroRecruitReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroRecruitRes_descriptor_, &HeroRecruitRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroExpRequest_descriptor_, &HeroExpRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroEvolReq_descriptor_, &HeroEvolReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroEvolRes_descriptor_, &HeroEvolRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SkillLevelUp_descriptor_, &SkillLevelUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DoResult_descriptor_, &DoResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeroResponse_descriptor_, &HeroResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hero_5fprotocol_2eproto() {
  delete HeroListRequest::default_instance_;
  delete HeroListRequest_reflection_;
  delete HeroListResponse::default_instance_;
  delete HeroListResponse_reflection_;
  delete RequestHeroInfo::default_instance_;
  delete RequestHeroInfo_reflection_;
  delete ChangeArmorRequest::default_instance_;
  delete ChangeArmorRequest_reflection_;
  delete ChangeArmorResponse::default_instance_;
  delete ChangeArmorResponse_reflection_;
  delete HeroRecruitReq::default_instance_;
  delete HeroRecruitReq_reflection_;
  delete HeroRecruitRes::default_instance_;
  delete HeroRecruitRes_reflection_;
  delete HeroExpRequest::default_instance_;
  delete HeroExpRequest_reflection_;
  delete HeroEvolReq::default_instance_;
  delete HeroEvolReq_reflection_;
  delete HeroEvolRes::default_instance_;
  delete HeroEvolRes_reflection_;
  delete SkillLevelUp::default_instance_;
  delete SkillLevelUp_reflection_;
  delete DoResult::default_instance_;
  delete DoResult_reflection_;
  delete HeroResponse::default_instance_;
  delete HeroResponse_reflection_;
}

void protobuf_AddDesc_hero_5fprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protos::common::protobuf_AddDesc_common_2fhero_5fcommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023hero_protocol.proto\022\006protos\032\030common/he"
    "ro_common.proto\"\037\n\017HeroListRequest\022\014\n\004ma"
    "rk\030\001 \001(\005\"I\n\020HeroListResponse\022%\n\010heroList"
    "\030\001 \003(\0132\023.protos.common.Hero\022\016\n\006combat\030\002 "
    "\001(\005\"V\n\017RequestHeroInfo\022\022\n\nroleHeroId\030\001 \001"
    "(\005\022\016\n\006heroId\030\002 \001(\005\022\017\n\007quality\030\003 \001(\005\022\016\n\006r"
    "oleId\030\005 \001(\005\"F\n\022ChangeArmorRequest\022\022\n\nrol"
    "eHeroId\030\001 \002(\005\022\013\n\003pos\030\002 \002(\005\022\017\n\007armorId\030\003 "
    "\002(\005\"l\n\023ChangeArmorResponse\022\016\n\006result\030\001 \002"
    "(\005\022!\n\004hero\030\002 \001(\0132\023.protos.common.Hero\022\"\n"
    "\005hero2\030\003 \001(\0132\023.protos.common.Hero\" \n\016Her"
    "oRecruitReq\022\016\n\006heroId\030\001 \002(\005\"C\n\016HeroRecru"
    "itRes\022\016\n\006result\030\001 \002(\005\022!\n\004hero\030\002 \001(\0132\023.pr"
    "otos.common.Hero\"A\n\016HeroExpRequest\022\016\n\006he"
    "roId\030\001 \002(\005\022\016\n\006itemId\030\002 \002(\005\022\017\n\007itemNum\030\003 "
    "\002(\005\"\035\n\013HeroEvolReq\022\016\n\006heroId\030\001 \002(\005\"@\n\013He"
    "roEvolRes\022\016\n\006result\030\001 \002(\005\022!\n\004hero\030\002 \001(\0132"
    "\023.protos.common.Hero\"\?\n\014SkillLevelUp\022\016\n\006"
    "heroId\030\001 \002(\005\022\017\n\007skillId\030\002 \002(\005\022\016\n\006itemId\030"
    "\003 \002(\005\"\032\n\010DoResult\022\016\n\006result\030\001 \002(\005\"T\n\014Her"
    "oResponse\022\016\n\006result\030\001 \002(\005\022!\n\004hero\030\002 \001(\0132"
    "\023.protos.common.Hero\022\021\n\tskillLvUp\030\003 \001(\010B"
    "/\n\035dass.server.gameserver.protosB\014HeroPr"
    "otocolH\001", 928);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hero_protocol.proto", &protobuf_RegisterTypes);
  HeroListRequest::default_instance_ = new HeroListRequest();
  HeroListResponse::default_instance_ = new HeroListResponse();
  RequestHeroInfo::default_instance_ = new RequestHeroInfo();
  ChangeArmorRequest::default_instance_ = new ChangeArmorRequest();
  ChangeArmorResponse::default_instance_ = new ChangeArmorResponse();
  HeroRecruitReq::default_instance_ = new HeroRecruitReq();
  HeroRecruitRes::default_instance_ = new HeroRecruitRes();
  HeroExpRequest::default_instance_ = new HeroExpRequest();
  HeroEvolReq::default_instance_ = new HeroEvolReq();
  HeroEvolRes::default_instance_ = new HeroEvolRes();
  SkillLevelUp::default_instance_ = new SkillLevelUp();
  DoResult::default_instance_ = new DoResult();
  HeroResponse::default_instance_ = new HeroResponse();
  HeroListRequest::default_instance_->InitAsDefaultInstance();
  HeroListResponse::default_instance_->InitAsDefaultInstance();
  RequestHeroInfo::default_instance_->InitAsDefaultInstance();
  ChangeArmorRequest::default_instance_->InitAsDefaultInstance();
  ChangeArmorResponse::default_instance_->InitAsDefaultInstance();
  HeroRecruitReq::default_instance_->InitAsDefaultInstance();
  HeroRecruitRes::default_instance_->InitAsDefaultInstance();
  HeroExpRequest::default_instance_->InitAsDefaultInstance();
  HeroEvolReq::default_instance_->InitAsDefaultInstance();
  HeroEvolRes::default_instance_->InitAsDefaultInstance();
  SkillLevelUp::default_instance_->InitAsDefaultInstance();
  DoResult::default_instance_->InitAsDefaultInstance();
  HeroResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hero_5fprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hero_5fprotocol_2eproto {
  StaticDescriptorInitializer_hero_5fprotocol_2eproto() {
    protobuf_AddDesc_hero_5fprotocol_2eproto();
  }
} static_descriptor_initializer_hero_5fprotocol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int HeroListRequest::kMarkFieldNumber;
#endif  // !_MSC_VER

HeroListRequest::HeroListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroListRequest::InitAsDefaultInstance() {
}

HeroListRequest::HeroListRequest(const HeroListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroListRequest::SharedCtor() {
  _cached_size_ = 0;
  mark_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroListRequest::~HeroListRequest() {
  SharedDtor();
}

void HeroListRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroListRequest_descriptor_;
}

const HeroListRequest& HeroListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

HeroListRequest* HeroListRequest::default_instance_ = NULL;

HeroListRequest* HeroListRequest::New() const {
  return new HeroListRequest;
}

void HeroListRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mark_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mark = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mark_)));
          set_has_mark();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mark = 1;
  if (has_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mark(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mark = 1;
  if (has_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mark(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroListRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mark = 1;
    if (has_mark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mark());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroListRequest::MergeFrom(const HeroListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mark()) {
      set_mark(from.mark());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroListRequest::CopyFrom(const HeroListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroListRequest::IsInitialized() const {

  return true;
}

void HeroListRequest::Swap(HeroListRequest* other) {
  if (other != this) {
    std::swap(mark_, other->mark_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroListRequest_descriptor_;
  metadata.reflection = HeroListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroListResponse::kHeroListFieldNumber;
const int HeroListResponse::kCombatFieldNumber;
#endif  // !_MSC_VER

HeroListResponse::HeroListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroListResponse::InitAsDefaultInstance() {
}

HeroListResponse::HeroListResponse(const HeroListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroListResponse::SharedCtor() {
  _cached_size_ = 0;
  combat_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroListResponse::~HeroListResponse() {
  SharedDtor();
}

void HeroListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroListResponse_descriptor_;
}

const HeroListResponse& HeroListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

HeroListResponse* HeroListResponse::default_instance_ = NULL;

HeroListResponse* HeroListResponse::New() const {
  return new HeroListResponse;
}

void HeroListResponse::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    combat_ = 0;
  }
  herolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protos.common.Hero heroList = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_heroList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_herolist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_heroList;
        if (input->ExpectTag(16)) goto parse_combat;
        break;
      }

      // optional int32 combat = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_combat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &combat_)));
          set_has_combat();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .protos.common.Hero heroList = 1;
  for (int i = 0; i < this->herolist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->herolist(i), output);
  }

  // optional int32 combat = 2;
  if (has_combat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->combat(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .protos.common.Hero heroList = 1;
  for (int i = 0; i < this->herolist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->herolist(i), target);
  }

  // optional int32 combat = 2;
  if (has_combat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->combat(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroListResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 combat = 2;
    if (has_combat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->combat());
    }

  }
  // repeated .protos.common.Hero heroList = 1;
  total_size += 1 * this->herolist_size();
  for (int i = 0; i < this->herolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->herolist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroListResponse::MergeFrom(const HeroListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  herolist_.MergeFrom(from.herolist_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_combat()) {
      set_combat(from.combat());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroListResponse::CopyFrom(const HeroListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroListResponse::IsInitialized() const {

  for (int i = 0; i < herolist_size(); i++) {
    if (!this->herolist(i).IsInitialized()) return false;
  }
  return true;
}

void HeroListResponse::Swap(HeroListResponse* other) {
  if (other != this) {
    herolist_.Swap(&other->herolist_);
    std::swap(combat_, other->combat_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroListResponse_descriptor_;
  metadata.reflection = HeroListResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestHeroInfo::kRoleHeroIdFieldNumber;
const int RequestHeroInfo::kHeroIdFieldNumber;
const int RequestHeroInfo::kQualityFieldNumber;
const int RequestHeroInfo::kRoleIdFieldNumber;
#endif  // !_MSC_VER

RequestHeroInfo::RequestHeroInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RequestHeroInfo::InitAsDefaultInstance() {
}

RequestHeroInfo::RequestHeroInfo(const RequestHeroInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RequestHeroInfo::SharedCtor() {
  _cached_size_ = 0;
  roleheroid_ = 0;
  heroid_ = 0;
  quality_ = 0;
  roleid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestHeroInfo::~RequestHeroInfo() {
  SharedDtor();
}

void RequestHeroInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestHeroInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestHeroInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestHeroInfo_descriptor_;
}

const RequestHeroInfo& RequestHeroInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

RequestHeroInfo* RequestHeroInfo::default_instance_ = NULL;

RequestHeroInfo* RequestHeroInfo::New() const {
  return new RequestHeroInfo;
}

void RequestHeroInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleheroid_ = 0;
    heroid_ = 0;
    quality_ = 0;
    roleid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestHeroInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 roleHeroId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleheroid_)));
          set_has_roleheroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_heroId;
        break;
      }

      // optional int32 heroId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_heroId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_quality;
        break;
      }

      // optional int32 quality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_roleId;
        break;
      }

      // optional int32 roleId = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roleId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RequestHeroInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 roleHeroId = 1;
  if (has_roleheroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleheroid(), output);
  }

  // optional int32 heroId = 2;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->heroid(), output);
  }

  // optional int32 quality = 3;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->quality(), output);
  }

  // optional int32 roleId = 5;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->roleid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RequestHeroInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 roleHeroId = 1;
  if (has_roleheroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleheroid(), target);
  }

  // optional int32 heroId = 2;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->heroid(), target);
  }

  // optional int32 quality = 3;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->quality(), target);
  }

  // optional int32 roleId = 5;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->roleid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RequestHeroInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 roleHeroId = 1;
    if (has_roleheroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleheroid());
    }

    // optional int32 heroId = 2;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroid());
    }

    // optional int32 quality = 3;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }

    // optional int32 roleId = 5;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestHeroInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestHeroInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestHeroInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestHeroInfo::MergeFrom(const RequestHeroInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleheroid()) {
      set_roleheroid(from.roleheroid());
    }
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestHeroInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestHeroInfo::CopyFrom(const RequestHeroInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestHeroInfo::IsInitialized() const {

  return true;
}

void RequestHeroInfo::Swap(RequestHeroInfo* other) {
  if (other != this) {
    std::swap(roleheroid_, other->roleheroid_);
    std::swap(heroid_, other->heroid_);
    std::swap(quality_, other->quality_);
    std::swap(roleid_, other->roleid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestHeroInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestHeroInfo_descriptor_;
  metadata.reflection = RequestHeroInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChangeArmorRequest::kRoleHeroIdFieldNumber;
const int ChangeArmorRequest::kPosFieldNumber;
const int ChangeArmorRequest::kArmorIdFieldNumber;
#endif  // !_MSC_VER

ChangeArmorRequest::ChangeArmorRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChangeArmorRequest::InitAsDefaultInstance() {
}

ChangeArmorRequest::ChangeArmorRequest(const ChangeArmorRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChangeArmorRequest::SharedCtor() {
  _cached_size_ = 0;
  roleheroid_ = 0;
  pos_ = 0;
  armorid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChangeArmorRequest::~ChangeArmorRequest() {
  SharedDtor();
}

void ChangeArmorRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChangeArmorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeArmorRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeArmorRequest_descriptor_;
}

const ChangeArmorRequest& ChangeArmorRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

ChangeArmorRequest* ChangeArmorRequest::default_instance_ = NULL;

ChangeArmorRequest* ChangeArmorRequest::New() const {
  return new ChangeArmorRequest;
}

void ChangeArmorRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleheroid_ = 0;
    pos_ = 0;
    armorid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChangeArmorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleHeroId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleheroid_)));
          set_has_roleheroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos;
        break;
      }

      // required int32 pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_armorId;
        break;
      }

      // required int32 armorId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_armorId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &armorid_)));
          set_has_armorid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ChangeArmorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 roleHeroId = 1;
  if (has_roleheroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleheroid(), output);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos(), output);
  }

  // required int32 armorId = 3;
  if (has_armorid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->armorid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChangeArmorRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 roleHeroId = 1;
  if (has_roleheroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleheroid(), target);
  }

  // required int32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos(), target);
  }

  // required int32 armorId = 3;
  if (has_armorid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->armorid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChangeArmorRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 roleHeroId = 1;
    if (has_roleheroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleheroid());
    }

    // required int32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos());
    }

    // required int32 armorId = 3;
    if (has_armorid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->armorid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeArmorRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChangeArmorRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChangeArmorRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChangeArmorRequest::MergeFrom(const ChangeArmorRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleheroid()) {
      set_roleheroid(from.roleheroid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_armorid()) {
      set_armorid(from.armorid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChangeArmorRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeArmorRequest::CopyFrom(const ChangeArmorRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeArmorRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ChangeArmorRequest::Swap(ChangeArmorRequest* other) {
  if (other != this) {
    std::swap(roleheroid_, other->roleheroid_);
    std::swap(pos_, other->pos_);
    std::swap(armorid_, other->armorid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChangeArmorRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChangeArmorRequest_descriptor_;
  metadata.reflection = ChangeArmorRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChangeArmorResponse::kResultFieldNumber;
const int ChangeArmorResponse::kHeroFieldNumber;
const int ChangeArmorResponse::kHero2FieldNumber;
#endif  // !_MSC_VER

ChangeArmorResponse::ChangeArmorResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChangeArmorResponse::InitAsDefaultInstance() {
  hero_ = const_cast< ::protos::common::Hero*>(&::protos::common::Hero::default_instance());
  hero2_ = const_cast< ::protos::common::Hero*>(&::protos::common::Hero::default_instance());
}

ChangeArmorResponse::ChangeArmorResponse(const ChangeArmorResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChangeArmorResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  hero_ = NULL;
  hero2_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChangeArmorResponse::~ChangeArmorResponse() {
  SharedDtor();
}

void ChangeArmorResponse::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
    delete hero2_;
  }
}

void ChangeArmorResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeArmorResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeArmorResponse_descriptor_;
}

const ChangeArmorResponse& ChangeArmorResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

ChangeArmorResponse* ChangeArmorResponse::default_instance_ = NULL;

ChangeArmorResponse* ChangeArmorResponse::New() const {
  return new ChangeArmorResponse;
}

void ChangeArmorResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_hero()) {
      if (hero_ != NULL) hero_->::protos::common::Hero::Clear();
    }
    if (has_hero2()) {
      if (hero2_ != NULL) hero2_->::protos::common::Hero::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChangeArmorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // optional .protos.common.Hero hero = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_hero2;
        break;
      }

      // optional .protos.common.Hero hero2 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero2()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ChangeArmorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .protos.common.Hero hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  // optional .protos.common.Hero hero2 = 3;
  if (has_hero2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->hero2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChangeArmorResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .protos.common.Hero hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  // optional .protos.common.Hero hero2 = 3;
  if (has_hero2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->hero2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChangeArmorResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .protos.common.Hero hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

    // optional .protos.common.Hero hero2 = 3;
    if (has_hero2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeArmorResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChangeArmorResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChangeArmorResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChangeArmorResponse::MergeFrom(const ChangeArmorResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_hero()) {
      mutable_hero()->::protos::common::Hero::MergeFrom(from.hero());
    }
    if (from.has_hero2()) {
      mutable_hero2()->::protos::common::Hero::MergeFrom(from.hero2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChangeArmorResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeArmorResponse::CopyFrom(const ChangeArmorResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeArmorResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  if (has_hero2()) {
    if (!this->hero2().IsInitialized()) return false;
  }
  return true;
}

void ChangeArmorResponse::Swap(ChangeArmorResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(hero_, other->hero_);
    std::swap(hero2_, other->hero2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChangeArmorResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChangeArmorResponse_descriptor_;
  metadata.reflection = ChangeArmorResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroRecruitReq::kHeroIdFieldNumber;
#endif  // !_MSC_VER

HeroRecruitReq::HeroRecruitReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroRecruitReq::InitAsDefaultInstance() {
}

HeroRecruitReq::HeroRecruitReq(const HeroRecruitReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroRecruitReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroRecruitReq::~HeroRecruitReq() {
  SharedDtor();
}

void HeroRecruitReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroRecruitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroRecruitReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroRecruitReq_descriptor_;
}

const HeroRecruitReq& HeroRecruitReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

HeroRecruitReq* HeroRecruitReq::default_instance_ = NULL;

HeroRecruitReq* HeroRecruitReq::New() const {
  return new HeroRecruitReq;
}

void HeroRecruitReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    heroid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroRecruitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 heroId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroRecruitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 heroId = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heroid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroRecruitReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 heroId = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heroid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroRecruitReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 heroId = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroRecruitReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroRecruitReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroRecruitReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroRecruitReq::MergeFrom(const HeroRecruitReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroRecruitReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroRecruitReq::CopyFrom(const HeroRecruitReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroRecruitReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HeroRecruitReq::Swap(HeroRecruitReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroRecruitReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroRecruitReq_descriptor_;
  metadata.reflection = HeroRecruitReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroRecruitRes::kResultFieldNumber;
const int HeroRecruitRes::kHeroFieldNumber;
#endif  // !_MSC_VER

HeroRecruitRes::HeroRecruitRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroRecruitRes::InitAsDefaultInstance() {
  hero_ = const_cast< ::protos::common::Hero*>(&::protos::common::Hero::default_instance());
}

HeroRecruitRes::HeroRecruitRes(const HeroRecruitRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroRecruitRes::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroRecruitRes::~HeroRecruitRes() {
  SharedDtor();
}

void HeroRecruitRes::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
  }
}

void HeroRecruitRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroRecruitRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroRecruitRes_descriptor_;
}

const HeroRecruitRes& HeroRecruitRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

HeroRecruitRes* HeroRecruitRes::default_instance_ = NULL;

HeroRecruitRes* HeroRecruitRes::New() const {
  return new HeroRecruitRes;
}

void HeroRecruitRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_hero()) {
      if (hero_ != NULL) hero_->::protos::common::Hero::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroRecruitRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // optional .protos.common.Hero hero = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroRecruitRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .protos.common.Hero hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroRecruitRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .protos.common.Hero hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroRecruitRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .protos.common.Hero hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroRecruitRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroRecruitRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroRecruitRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroRecruitRes::MergeFrom(const HeroRecruitRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_hero()) {
      mutable_hero()->::protos::common::Hero::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroRecruitRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroRecruitRes::CopyFrom(const HeroRecruitRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroRecruitRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void HeroRecruitRes::Swap(HeroRecruitRes* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroRecruitRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroRecruitRes_descriptor_;
  metadata.reflection = HeroRecruitRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroExpRequest::kHeroIdFieldNumber;
const int HeroExpRequest::kItemIdFieldNumber;
const int HeroExpRequest::kItemNumFieldNumber;
#endif  // !_MSC_VER

HeroExpRequest::HeroExpRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroExpRequest::InitAsDefaultInstance() {
}

HeroExpRequest::HeroExpRequest(const HeroExpRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroExpRequest::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0;
  itemid_ = 0;
  itemnum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroExpRequest::~HeroExpRequest() {
  SharedDtor();
}

void HeroExpRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroExpRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroExpRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroExpRequest_descriptor_;
}

const HeroExpRequest& HeroExpRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

HeroExpRequest* HeroExpRequest::default_instance_ = NULL;

HeroExpRequest* HeroExpRequest::New() const {
  return new HeroExpRequest;
}

void HeroExpRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    heroid_ = 0;
    itemid_ = 0;
    itemnum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroExpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 heroId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_itemId;
        break;
      }

      // required int32 itemId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itemNum;
        break;
      }

      // required int32 itemNum = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemnum_)));
          set_has_itemnum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroExpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 heroId = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heroid(), output);
  }

  // required int32 itemId = 2;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->itemid(), output);
  }

  // required int32 itemNum = 3;
  if (has_itemnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->itemnum(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroExpRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 heroId = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heroid(), target);
  }

  // required int32 itemId = 2;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->itemid(), target);
  }

  // required int32 itemNum = 3;
  if (has_itemnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->itemnum(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroExpRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 heroId = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroid());
    }

    // required int32 itemId = 2;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

    // required int32 itemNum = 3;
    if (has_itemnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemnum());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroExpRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroExpRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroExpRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroExpRequest::MergeFrom(const HeroExpRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_itemnum()) {
      set_itemnum(from.itemnum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroExpRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroExpRequest::CopyFrom(const HeroExpRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroExpRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void HeroExpRequest::Swap(HeroExpRequest* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(itemid_, other->itemid_);
    std::swap(itemnum_, other->itemnum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroExpRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroExpRequest_descriptor_;
  metadata.reflection = HeroExpRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroEvolReq::kHeroIdFieldNumber;
#endif  // !_MSC_VER

HeroEvolReq::HeroEvolReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroEvolReq::InitAsDefaultInstance() {
}

HeroEvolReq::HeroEvolReq(const HeroEvolReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroEvolReq::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroEvolReq::~HeroEvolReq() {
  SharedDtor();
}

void HeroEvolReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeroEvolReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroEvolReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroEvolReq_descriptor_;
}

const HeroEvolReq& HeroEvolReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

HeroEvolReq* HeroEvolReq::default_instance_ = NULL;

HeroEvolReq* HeroEvolReq::New() const {
  return new HeroEvolReq;
}

void HeroEvolReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    heroid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroEvolReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 heroId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroEvolReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 heroId = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heroid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroEvolReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 heroId = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heroid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroEvolReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 heroId = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroEvolReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroEvolReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroEvolReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroEvolReq::MergeFrom(const HeroEvolReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroEvolReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroEvolReq::CopyFrom(const HeroEvolReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroEvolReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HeroEvolReq::Swap(HeroEvolReq* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroEvolReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroEvolReq_descriptor_;
  metadata.reflection = HeroEvolReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroEvolRes::kResultFieldNumber;
const int HeroEvolRes::kHeroFieldNumber;
#endif  // !_MSC_VER

HeroEvolRes::HeroEvolRes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroEvolRes::InitAsDefaultInstance() {
  hero_ = const_cast< ::protos::common::Hero*>(&::protos::common::Hero::default_instance());
}

HeroEvolRes::HeroEvolRes(const HeroEvolRes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroEvolRes::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  hero_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroEvolRes::~HeroEvolRes() {
  SharedDtor();
}

void HeroEvolRes::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
  }
}

void HeroEvolRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroEvolRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroEvolRes_descriptor_;
}

const HeroEvolRes& HeroEvolRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

HeroEvolRes* HeroEvolRes::default_instance_ = NULL;

HeroEvolRes* HeroEvolRes::New() const {
  return new HeroEvolRes;
}

void HeroEvolRes::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_hero()) {
      if (hero_ != NULL) hero_->::protos::common::Hero::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroEvolRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // optional .protos.common.Hero hero = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroEvolRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .protos.common.Hero hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroEvolRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .protos.common.Hero hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroEvolRes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .protos.common.Hero hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroEvolRes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroEvolRes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroEvolRes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroEvolRes::MergeFrom(const HeroEvolRes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_hero()) {
      mutable_hero()->::protos::common::Hero::MergeFrom(from.hero());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroEvolRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroEvolRes::CopyFrom(const HeroEvolRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroEvolRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void HeroEvolRes::Swap(HeroEvolRes* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(hero_, other->hero_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroEvolRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroEvolRes_descriptor_;
  metadata.reflection = HeroEvolRes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SkillLevelUp::kHeroIdFieldNumber;
const int SkillLevelUp::kSkillIdFieldNumber;
const int SkillLevelUp::kItemIdFieldNumber;
#endif  // !_MSC_VER

SkillLevelUp::SkillLevelUp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SkillLevelUp::InitAsDefaultInstance() {
}

SkillLevelUp::SkillLevelUp(const SkillLevelUp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SkillLevelUp::SharedCtor() {
  _cached_size_ = 0;
  heroid_ = 0;
  skillid_ = 0;
  itemid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SkillLevelUp::~SkillLevelUp() {
  SharedDtor();
}

void SkillLevelUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillLevelUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillLevelUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillLevelUp_descriptor_;
}

const SkillLevelUp& SkillLevelUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

SkillLevelUp* SkillLevelUp::default_instance_ = NULL;

SkillLevelUp* SkillLevelUp::New() const {
  return new SkillLevelUp;
}

void SkillLevelUp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    heroid_ = 0;
    skillid_ = 0;
    itemid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SkillLevelUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 heroId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heroid_)));
          set_has_heroid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skillId;
        break;
      }

      // required int32 skillId = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skillId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
          set_has_skillid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itemId;
        break;
      }

      // required int32 itemId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SkillLevelUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 heroId = 1;
  if (has_heroid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->heroid(), output);
  }

  // required int32 skillId = 2;
  if (has_skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skillid(), output);
  }

  // required int32 itemId = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->itemid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SkillLevelUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 heroId = 1;
  if (has_heroid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->heroid(), target);
  }

  // required int32 skillId = 2;
  if (has_skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skillid(), target);
  }

  // required int32 itemId = 3;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->itemid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SkillLevelUp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 heroId = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heroid());
    }

    // required int32 skillId = 2;
    if (has_skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skillid());
    }

    // required int32 itemId = 3;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->itemid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillLevelUp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SkillLevelUp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SkillLevelUp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SkillLevelUp::MergeFrom(const SkillLevelUp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_heroid()) {
      set_heroid(from.heroid());
    }
    if (from.has_skillid()) {
      set_skillid(from.skillid());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SkillLevelUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillLevelUp::CopyFrom(const SkillLevelUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillLevelUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void SkillLevelUp::Swap(SkillLevelUp* other) {
  if (other != this) {
    std::swap(heroid_, other->heroid_);
    std::swap(skillid_, other->skillid_);
    std::swap(itemid_, other->itemid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SkillLevelUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillLevelUp_descriptor_;
  metadata.reflection = SkillLevelUp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DoResult::kResultFieldNumber;
#endif  // !_MSC_VER

DoResult::DoResult()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DoResult::InitAsDefaultInstance() {
}

DoResult::DoResult(const DoResult& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DoResult::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DoResult::~DoResult() {
  SharedDtor();
}

void DoResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DoResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DoResult_descriptor_;
}

const DoResult& DoResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

DoResult* DoResult::default_instance_ = NULL;

DoResult* DoResult::New() const {
  return new DoResult;
}

void DoResult::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DoResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DoResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DoResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DoResult::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoResult::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DoResult* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DoResult*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DoResult::MergeFrom(const DoResult& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DoResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoResult::CopyFrom(const DoResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoResult::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void DoResult::Swap(DoResult* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DoResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DoResult_descriptor_;
  metadata.reflection = DoResult_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HeroResponse::kResultFieldNumber;
const int HeroResponse::kHeroFieldNumber;
const int HeroResponse::kSkillLvUpFieldNumber;
#endif  // !_MSC_VER

HeroResponse::HeroResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void HeroResponse::InitAsDefaultInstance() {
  hero_ = const_cast< ::protos::common::Hero*>(&::protos::common::Hero::default_instance());
}

HeroResponse::HeroResponse(const HeroResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void HeroResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  hero_ = NULL;
  skilllvup_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeroResponse::~HeroResponse() {
  SharedDtor();
}

void HeroResponse::SharedDtor() {
  if (this != default_instance_) {
    delete hero_;
  }
}

void HeroResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeroResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeroResponse_descriptor_;
}

const HeroResponse& HeroResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hero_5fprotocol_2eproto();
  return *default_instance_;
}

HeroResponse* HeroResponse::default_instance_ = NULL;

HeroResponse* HeroResponse::New() const {
  return new HeroResponse;
}

void HeroResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    if (has_hero()) {
      if (hero_ != NULL) hero_->::protos::common::Hero::Clear();
    }
    skilllvup_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeroResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_hero;
        break;
      }

      // optional .protos.common.Hero hero = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hero()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skillLvUp;
        break;
      }

      // optional bool skillLvUp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skillLvUp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skilllvup_)));
          set_has_skilllvup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void HeroResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional .protos.common.Hero hero = 2;
  if (has_hero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hero(), output);
  }

  // optional bool skillLvUp = 3;
  if (has_skilllvup()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->skilllvup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* HeroResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional .protos.common.Hero hero = 2;
  if (has_hero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hero(), target);
  }

  // optional bool skillLvUp = 3;
  if (has_skilllvup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->skilllvup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int HeroResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional .protos.common.Hero hero = 2;
    if (has_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hero());
    }

    // optional bool skillLvUp = 3;
    if (has_skilllvup()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeroResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeroResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeroResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeroResponse::MergeFrom(const HeroResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_hero()) {
      mutable_hero()->::protos::common::Hero::MergeFrom(from.hero());
    }
    if (from.has_skilllvup()) {
      set_skilllvup(from.skilllvup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeroResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeroResponse::CopyFrom(const HeroResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeroResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_hero()) {
    if (!this->hero().IsInitialized()) return false;
  }
  return true;
}

void HeroResponse::Swap(HeroResponse* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(hero_, other->hero_);
    std::swap(skilllvup_, other->skilllvup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeroResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeroResponse_descriptor_;
  metadata.reflection = HeroResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)
