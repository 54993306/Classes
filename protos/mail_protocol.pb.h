// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail_protocol.proto

#ifndef PROTOBUF_mail_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_mail_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/prize_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mail_5fprotocol_2eproto();
void protobuf_AssignDesc_mail_5fprotocol_2eproto();
void protobuf_ShutdownFile_mail_5fprotocol_2eproto();

class MailListResponse;
class MailNotice;
class MaillRequest;
class MailResponse;
class SendMailRequest;
class Mail;

// ===================================================================

class MailListResponse : public ::google::protobuf::Message {
 public:
  MailListResponse();
  virtual ~MailListResponse();

  MailListResponse(const MailListResponse& from);

  inline MailListResponse& operator=(const MailListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailListResponse& default_instance();

  void Swap(MailListResponse* other);

  // implements Message ----------------------------------------------

  MailListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailListResponse& from);
  void MergeFrom(const MailListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protos.Mail mailList = 1;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMailListFieldNumber = 1;
  inline const ::protos::Mail& maillist(int index) const;
  inline ::protos::Mail* mutable_maillist(int index);
  inline ::protos::Mail* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::Mail >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::Mail >*
      mutable_maillist();

  // @@protoc_insertion_point(class_scope:protos.MailListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protos::Mail > maillist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mail_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_mail_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_mail_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MailListResponse* default_instance_;
};
// -------------------------------------------------------------------

class MailNotice : public ::google::protobuf::Message {
 public:
  MailNotice();
  virtual ~MailNotice();

  MailNotice(const MailNotice& from);

  inline MailNotice& operator=(const MailNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailNotice& default_instance();

  void Swap(MailNotice* other);

  // implements Message ----------------------------------------------

  MailNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailNotice& from);
  void MergeFrom(const MailNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 newMail = 1;
  inline bool has_newmail() const;
  inline void clear_newmail();
  static const int kNewMailFieldNumber = 1;
  inline ::google::protobuf::int32 newmail() const;
  inline void set_newmail(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.MailNotice)
 private:
  inline void set_has_newmail();
  inline void clear_has_newmail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 newmail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_mail_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_mail_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_mail_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MailNotice* default_instance_;
};
// -------------------------------------------------------------------

class MaillRequest : public ::google::protobuf::Message {
 public:
  MaillRequest();
  virtual ~MaillRequest();

  MaillRequest(const MaillRequest& from);

  inline MaillRequest& operator=(const MaillRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MaillRequest& default_instance();

  void Swap(MaillRequest* other);

  // implements Message ----------------------------------------------

  MaillRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MaillRequest& from);
  void MergeFrom(const MaillRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // required int32 ctrlType = 2;
  inline bool has_ctrltype() const;
  inline void clear_ctrltype();
  static const int kCtrlTypeFieldNumber = 2;
  inline ::google::protobuf::int32 ctrltype() const;
  inline void set_ctrltype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.MaillRequest)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_ctrltype();
  inline void clear_has_ctrltype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mailid_;
  ::google::protobuf::int32 ctrltype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_mail_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_mail_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_mail_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MaillRequest* default_instance_;
};
// -------------------------------------------------------------------

class MailResponse : public ::google::protobuf::Message {
 public:
  MailResponse();
  virtual ~MailResponse();

  MailResponse(const MailResponse& from);

  inline MailResponse& operator=(const MailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailResponse& default_instance();

  void Swap(MailResponse* other);

  // implements Message ----------------------------------------------

  MailResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailResponse& from);
  void MergeFrom(const MailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .protos.Mail mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::protos::Mail& mail() const;
  inline ::protos::Mail* mutable_mail();
  inline ::protos::Mail* release_mail();
  inline void set_allocated_mail(::protos::Mail* mail);

  // repeated .protos.common.Prize prizeList = 3;
  inline int prizelist_size() const;
  inline void clear_prizelist();
  static const int kPrizeListFieldNumber = 3;
  inline const ::protos::common::Prize& prizelist(int index) const;
  inline ::protos::common::Prize* mutable_prizelist(int index);
  inline ::protos::common::Prize* add_prizelist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
      prizelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
      mutable_prizelist();

  // @@protoc_insertion_point(class_scope:protos.MailResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::protos::Mail* mail_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::Prize > prizelist_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mail_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_mail_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_mail_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static MailResponse* default_instance_;
};
// -------------------------------------------------------------------

class SendMailRequest : public ::google::protobuf::Message {
 public:
  SendMailRequest();
  virtual ~SendMailRequest();

  SendMailRequest(const SendMailRequest& from);

  inline SendMailRequest& operator=(const SendMailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMailRequest& default_instance();

  void Swap(SendMailRequest* other);

  // implements Message ----------------------------------------------

  SendMailRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMailRequest& from);
  void MergeFrom(const SendMailRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 friendId = 1;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::int32 friendid() const;
  inline void set_friendid(::google::protobuf::int32 value);

  // optional string title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:protos.SendMailRequest)
 private:
  inline void set_has_friendid();
  inline void clear_has_friendid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* title_;
  ::std::string* content_;
  ::google::protobuf::int32 friendid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_mail_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_mail_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_mail_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static SendMailRequest* default_instance_;
};
// -------------------------------------------------------------------

class Mail : public ::google::protobuf::Message {
 public:
  Mail();
  virtual ~Mail();

  Mail(const Mail& from);

  inline Mail& operator=(const Mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Mail& default_instance();

  void Swap(Mail* other);

  // implements Message ----------------------------------------------

  Mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mail& from);
  void MergeFrom(const Mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // optional string title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional string addTime = 4;
  inline bool has_addtime() const;
  inline void clear_addtime();
  static const int kAddTimeFieldNumber = 4;
  inline const ::std::string& addtime() const;
  inline void set_addtime(const ::std::string& value);
  inline void set_addtime(const char* value);
  inline void set_addtime(const char* value, size_t size);
  inline ::std::string* mutable_addtime();
  inline ::std::string* release_addtime();
  inline void set_allocated_addtime(::std::string* addtime);

  // optional int32 senderId = 5;
  inline bool has_senderid() const;
  inline void clear_senderid();
  static const int kSenderIdFieldNumber = 5;
  inline ::google::protobuf::int32 senderid() const;
  inline void set_senderid(::google::protobuf::int32 value);

  // optional string sender = 6;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 6;
  inline const ::std::string& sender() const;
  inline void set_sender(const ::std::string& value);
  inline void set_sender(const char* value);
  inline void set_sender(const char* value, size_t size);
  inline ::std::string* mutable_sender();
  inline ::std::string* release_sender();
  inline void set_allocated_sender(::std::string* sender);

  // optional bool readed = 7;
  inline bool has_readed() const;
  inline void clear_readed();
  static const int kReadedFieldNumber = 7;
  inline bool readed() const;
  inline void set_readed(bool value);

  // repeated .protos.common.Prize attrList = 8;
  inline int attrlist_size() const;
  inline void clear_attrlist();
  static const int kAttrListFieldNumber = 8;
  inline const ::protos::common::Prize& attrlist(int index) const;
  inline ::protos::common::Prize* mutable_attrlist(int index);
  inline ::protos::common::Prize* add_attrlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
      attrlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
      mutable_attrlist();

  // optional int32 icon = 9;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 9;
  inline ::google::protobuf::int32 icon() const;
  inline void set_icon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protos.Mail)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_addtime();
  inline void clear_has_addtime();
  inline void set_has_senderid();
  inline void clear_has_senderid();
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_readed();
  inline void clear_has_readed();
  inline void set_has_icon();
  inline void clear_has_icon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* title_;
  ::std::string* content_;
  ::google::protobuf::int32 mailid_;
  ::google::protobuf::int32 senderid_;
  ::std::string* addtime_;
  ::std::string* sender_;
  ::google::protobuf::RepeatedPtrField< ::protos::common::Prize > attrlist_;
  bool readed_;
  ::google::protobuf::int32 icon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_mail_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_mail_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_mail_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Mail* default_instance_;
};
// ===================================================================


// ===================================================================

// MailListResponse

// repeated .protos.Mail mailList = 1;
inline int MailListResponse::maillist_size() const {
  return maillist_.size();
}
inline void MailListResponse::clear_maillist() {
  maillist_.Clear();
}
inline const ::protos::Mail& MailListResponse::maillist(int index) const {
  return maillist_.Get(index);
}
inline ::protos::Mail* MailListResponse::mutable_maillist(int index) {
  return maillist_.Mutable(index);
}
inline ::protos::Mail* MailListResponse::add_maillist() {
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::Mail >&
MailListResponse::maillist() const {
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::Mail >*
MailListResponse::mutable_maillist() {
  return &maillist_;
}

// -------------------------------------------------------------------

// MailNotice

// required int32 newMail = 1;
inline bool MailNotice::has_newmail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailNotice::set_has_newmail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailNotice::clear_has_newmail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailNotice::clear_newmail() {
  newmail_ = 0;
  clear_has_newmail();
}
inline ::google::protobuf::int32 MailNotice::newmail() const {
  return newmail_;
}
inline void MailNotice::set_newmail(::google::protobuf::int32 value) {
  set_has_newmail();
  newmail_ = value;
}

// -------------------------------------------------------------------

// MaillRequest

// required int32 mailId = 1;
inline bool MaillRequest::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MaillRequest::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MaillRequest::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MaillRequest::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 MaillRequest::mailid() const {
  return mailid_;
}
inline void MaillRequest::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
}

// required int32 ctrlType = 2;
inline bool MaillRequest::has_ctrltype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MaillRequest::set_has_ctrltype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MaillRequest::clear_has_ctrltype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MaillRequest::clear_ctrltype() {
  ctrltype_ = 0;
  clear_has_ctrltype();
}
inline ::google::protobuf::int32 MaillRequest::ctrltype() const {
  return ctrltype_;
}
inline void MaillRequest::set_ctrltype(::google::protobuf::int32 value) {
  set_has_ctrltype();
  ctrltype_ = value;
}

// -------------------------------------------------------------------

// MailResponse

// required int32 result = 1;
inline bool MailResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 MailResponse::result() const {
  return result_;
}
inline void MailResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .protos.Mail mail = 2;
inline bool MailResponse::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailResponse::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailResponse::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailResponse::clear_mail() {
  if (mail_ != NULL) mail_->::protos::Mail::Clear();
  clear_has_mail();
}
inline const ::protos::Mail& MailResponse::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::protos::Mail* MailResponse::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::protos::Mail;
  return mail_;
}
inline ::protos::Mail* MailResponse::release_mail() {
  clear_has_mail();
  ::protos::Mail* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void MailResponse::set_allocated_mail(::protos::Mail* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// repeated .protos.common.Prize prizeList = 3;
inline int MailResponse::prizelist_size() const {
  return prizelist_.size();
}
inline void MailResponse::clear_prizelist() {
  prizelist_.Clear();
}
inline const ::protos::common::Prize& MailResponse::prizelist(int index) const {
  return prizelist_.Get(index);
}
inline ::protos::common::Prize* MailResponse::mutable_prizelist(int index) {
  return prizelist_.Mutable(index);
}
inline ::protos::common::Prize* MailResponse::add_prizelist() {
  return prizelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
MailResponse::prizelist() const {
  return prizelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
MailResponse::mutable_prizelist() {
  return &prizelist_;
}

// -------------------------------------------------------------------

// SendMailRequest

// required int32 friendId = 1;
inline bool SendMailRequest::has_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMailRequest::set_has_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMailRequest::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMailRequest::clear_friendid() {
  friendid_ = 0;
  clear_has_friendid();
}
inline ::google::protobuf::int32 SendMailRequest::friendid() const {
  return friendid_;
}
inline void SendMailRequest::set_friendid(::google::protobuf::int32 value) {
  set_has_friendid();
  friendid_ = value;
}

// optional string title = 2;
inline bool SendMailRequest::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMailRequest::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMailRequest::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMailRequest::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& SendMailRequest::title() const {
  return *title_;
}
inline void SendMailRequest::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void SendMailRequest::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void SendMailRequest::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendMailRequest::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* SendMailRequest::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SendMailRequest::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string content = 3;
inline bool SendMailRequest::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMailRequest::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMailRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMailRequest::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& SendMailRequest::content() const {
  return *content_;
}
inline void SendMailRequest::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void SendMailRequest::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void SendMailRequest::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendMailRequest::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* SendMailRequest::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SendMailRequest::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Mail

// required int32 mailId = 1;
inline bool Mail::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mail::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mail::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 Mail::mailid() const {
  return mailid_;
}
inline void Mail::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional string title = 2;
inline bool Mail::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mail::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mail::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mail::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& Mail::title() const {
  return *title_;
}
inline void Mail::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void Mail::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void Mail::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Mail::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* Mail::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Mail::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string content = 3;
inline bool Mail::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Mail::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Mail::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Mail::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& Mail::content() const {
  return *content_;
}
inline void Mail::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Mail::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Mail::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Mail::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* Mail::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Mail::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string addTime = 4;
inline bool Mail::has_addtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Mail::set_has_addtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Mail::clear_has_addtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Mail::clear_addtime() {
  if (addtime_ != &::google::protobuf::internal::kEmptyString) {
    addtime_->clear();
  }
  clear_has_addtime();
}
inline const ::std::string& Mail::addtime() const {
  return *addtime_;
}
inline void Mail::set_addtime(const ::std::string& value) {
  set_has_addtime();
  if (addtime_ == &::google::protobuf::internal::kEmptyString) {
    addtime_ = new ::std::string;
  }
  addtime_->assign(value);
}
inline void Mail::set_addtime(const char* value) {
  set_has_addtime();
  if (addtime_ == &::google::protobuf::internal::kEmptyString) {
    addtime_ = new ::std::string;
  }
  addtime_->assign(value);
}
inline void Mail::set_addtime(const char* value, size_t size) {
  set_has_addtime();
  if (addtime_ == &::google::protobuf::internal::kEmptyString) {
    addtime_ = new ::std::string;
  }
  addtime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Mail::mutable_addtime() {
  set_has_addtime();
  if (addtime_ == &::google::protobuf::internal::kEmptyString) {
    addtime_ = new ::std::string;
  }
  return addtime_;
}
inline ::std::string* Mail::release_addtime() {
  clear_has_addtime();
  if (addtime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = addtime_;
    addtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Mail::set_allocated_addtime(::std::string* addtime) {
  if (addtime_ != &::google::protobuf::internal::kEmptyString) {
    delete addtime_;
  }
  if (addtime) {
    set_has_addtime();
    addtime_ = addtime;
  } else {
    clear_has_addtime();
    addtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 senderId = 5;
inline bool Mail::has_senderid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Mail::set_has_senderid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Mail::clear_has_senderid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Mail::clear_senderid() {
  senderid_ = 0;
  clear_has_senderid();
}
inline ::google::protobuf::int32 Mail::senderid() const {
  return senderid_;
}
inline void Mail::set_senderid(::google::protobuf::int32 value) {
  set_has_senderid();
  senderid_ = value;
}

// optional string sender = 6;
inline bool Mail::has_sender() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Mail::set_has_sender() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Mail::clear_has_sender() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Mail::clear_sender() {
  if (sender_ != &::google::protobuf::internal::kEmptyString) {
    sender_->clear();
  }
  clear_has_sender();
}
inline const ::std::string& Mail::sender() const {
  return *sender_;
}
inline void Mail::set_sender(const ::std::string& value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
}
inline void Mail::set_sender(const char* value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
}
inline void Mail::set_sender(const char* value, size_t size) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Mail::mutable_sender() {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  return sender_;
}
inline ::std::string* Mail::release_sender() {
  clear_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sender_;
    sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Mail::set_allocated_sender(::std::string* sender) {
  if (sender_ != &::google::protobuf::internal::kEmptyString) {
    delete sender_;
  }
  if (sender) {
    set_has_sender();
    sender_ = sender;
  } else {
    clear_has_sender();
    sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool readed = 7;
inline bool Mail::has_readed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Mail::set_has_readed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Mail::clear_has_readed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Mail::clear_readed() {
  readed_ = false;
  clear_has_readed();
}
inline bool Mail::readed() const {
  return readed_;
}
inline void Mail::set_readed(bool value) {
  set_has_readed();
  readed_ = value;
}

// repeated .protos.common.Prize attrList = 8;
inline int Mail::attrlist_size() const {
  return attrlist_.size();
}
inline void Mail::clear_attrlist() {
  attrlist_.Clear();
}
inline const ::protos::common::Prize& Mail::attrlist(int index) const {
  return attrlist_.Get(index);
}
inline ::protos::common::Prize* Mail::mutable_attrlist(int index) {
  return attrlist_.Mutable(index);
}
inline ::protos::common::Prize* Mail::add_attrlist() {
  return attrlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >&
Mail::attrlist() const {
  return attrlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protos::common::Prize >*
Mail::mutable_attrlist() {
  return &attrlist_;
}

// optional int32 icon = 9;
inline bool Mail::has_icon() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Mail::set_has_icon() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Mail::clear_has_icon() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Mail::clear_icon() {
  icon_ = 0;
  clear_has_icon();
}
inline ::google::protobuf::int32 Mail::icon() const {
  return icon_;
}
inline void Mail::set_icon(::google::protobuf::int32 value) {
  set_has_icon();
  icon_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mail_5fprotocol_2eproto__INCLUDED
